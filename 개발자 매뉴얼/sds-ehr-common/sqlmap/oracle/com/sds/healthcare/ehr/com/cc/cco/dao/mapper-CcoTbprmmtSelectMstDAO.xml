<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    SQL File Name : mapper_CcoTbprmmtSelectMstDAO_sql.xml 
    Description : -->
<mapper namespace="CcoTbprmmtSelectMstDAO">


	<resultMap id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSelectMstDAO-listTbprmmtMst-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSelectMstDVO">
	
		<result property="testPsblDvsnCd" column="TEST_PSBL_DVSN_CD"/>
		<result property="detlCdNm1" column="DETL_CD_NM1"/>
		<result property="prjtTissCd" column="PRJT_TISS_CD"/>
		<result property="detlCdNm2" column="DETL_CD_NM2"/>
		<result property="detlCdNm3" column="DETL_CD_NM3"/>
		<result property="wgTissCd" column="WG_TISS_CD"/>
		<result property="detlCdNm4" column="DETL_CD_NM4"/>
		<result property="clbrSystCd" column="CLBR_SYST_CD"/>
		<result property="detlCdNm5" column="DETL_CD_NM5"/>
		<result property="intgTestId" column="INTG_TEST_ID"/>
		<result property="intgTestIdVl" column="INTG_TEST_ID_VL"/>
		<result property="intgTestNm" column="INTG_TEST_NM"/>
		<result property="intgTestCtn" column="INTG_TEST_CTN"/>
		<result property="intgTestWrtrId" column="INTG_TEST_WRTR_ID"/>
		<result property="userNm1" column="USER_NM1"/>
		<result property="allCot" column="ALL_COT"/>
		<result property="clsnSttsCd" column="CLSN_STTS_CD"/>
		<result property="detlCdNm6" column="DETL_CD_NM6"/>
		<result property="testDscnYn" column="TEST_DSCN_YN"/>
		<result property="intgTestDvsnCd" column="INTG_TEST_DVSN_CD"/>
		<result property="detlCdNm7" column="DETL_CD_NM7"/>
		<result property="detlCdNm8" column="DETL_CD_NM8"/>
		<result property="cct01" column="CCT01"/>
		<result property="cct02" column="CCT02"/>
		<result property="cct03" column="CCT03"/>
		<result property="cct04" column="CCT04"/>
		<result property="testPlanStrtYmd" column="TEST_PLAN_STRT_YMD"/>
		<result property="testPlanFnshYmd" column="TEST_PLAN_FNSH_YMD"/>
		<result property="itemTestStrtYmd" column="ITEM_TEST_STRT_YMD"/>
		<result property="itemTestFnshYmd" column="ITEM_TEST_FNSH_YMD"/>
		<result property="finsYmd" column="FINS_YMD"/>
		<result property="cct05" column="CCT05"/>
		<result property="cct06" column="CCT06"/>
		<result property="prcgCndtCtn" column="PRCG_CNDT_CTN"/>
		<result property="folwCndtCtn" column="FOLW_CNDT_CTN"/>
		<result property="testPtnoCtn" column="TEST_PTNO_CTN"/>
		<result property="testMcdpCtn" column="TEST_MCDP_CTN"/>
		<result property="testIstyCtn" column="TEST_ISTY_CTN"/>
		<result property="testDataCtn" column="TEST_DATA_CTN"/>
		<result property="rprsTestId" column="RPRS_TEST_ID"/>
		<result property="userNm2" column="USER_NM2"/>
		<result property="intgTestWrtgDt" column="INTG_TEST_WRTG_DT"/>
		<result property="mngrId" column="MNGR_ID"/>
		<result property="userNm3" column="USER_NM3"/>
		<result property="rmrkCtn" column="RMRK_CTN"/>
		<result property="mdfcHxCtn" column="MDFC_HX_CTN"/>
		<result property="dltnYn" column="DLTN_YN"/>
		<result property="updtCtn" column="UPDT_CTN"/>
		<result property="dscnCtn" column="DSCN_CTN"/>
		<result property="afiSlctCtn" column="AFI_SLCT_CTN"/>
		<result property="testPlacNm" column="TEST_PLAC_NM"/>
		<result property="oprnAsgnCtn" column="OPRN_ASGN_CTN"/>
		<result property="useCqy02" column="USE_CQY_02"/>
		<result property="afiSlctCtn2" column="AFI_SLCT_CTN_2"/>
		<result property="dltnResnCtn" column="DLTN_RESN_CTN"/>
		<result property="intgTestPrfmDdcnVl" column="INTG_TEST_PRFM_DDCN_VL"/>
		<result property="cct07" column="CCT07"/>
		<result property="testMddrCtn" column="TEST_MDDR_CTN"/>
	</resultMap>
	
    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSelectMstDAO-listTbprmmtMst () 
        Description :                       
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSelectMstDVO
		resultMap : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSelectMstDAO-listTbprmmtMst-result
    -->
	<select id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSelectMstDAO-listTbprmmtMst"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSelectMstDVO"  resultMap="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSelectMstDAO-listTbprmmtMst-result" useCache="true" flushCache="false">
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSelectMstDAO-listTbprmmtMst */
		 <![CDATA[
		   select  /*+ cod_tbprmmt_l11$S01_TOBO 통합테스트 마스터 조회 */ 
				            amt.TEST_PSBL_DVSN_CD    --  테스트가능구분코드
				          , ac1.DETL_CD_NM as DETL_CD_NM1 -- 테스트가능구분명 (COR_041)
				          , (case when (INTG_TEST_DVSN_CD ='I1') or (INTG_TEST_DVSN_CD ='I3') or (INTG_TEST_DVSN_CD ='I6') or (substr(INTG_TEST_DVSN_CD,1,1) ='P') then amt.INTG_PRJT_CD else  amt.PRJT_TISS_CD end) as  PRJT_TISS_CD  --  프로젝트조직코드
				          , (case when (INTG_TEST_DVSN_CD ='I1') or (INTG_TEST_DVSN_CD ='I3') or (INTG_TEST_DVSN_CD ='I6') or (substr(INTG_TEST_DVSN_CD,1,1) ='P') then ac81.DETL_CD_NM else  ac2.DETL_CD_NM end) as  DETL_CD_NM2  -- 프로젝트조직명 (COR_025,COR_052)
				          , (case when (INTG_TEST_DVSN_CD ='I1') or (INTG_TEST_DVSN_CD ='I3') or (INTG_TEST_DVSN_CD ='I6') or (substr(INTG_TEST_DVSN_CD,1,1) ='P') then ac81.DETL_CD_NM else  ac3.DETL_CD_NM end) as  DETL_CD_NM3  -- 프로젝트조직명 (COR_025,COR_052)
				          --, amt.WG_TISS_CD                --  워킹그룹코드(COR_050)
				          , (case when (INTG_TEST_DVSN_CD ='I1') or (INTG_TEST_DVSN_CD ='I3') or (INTG_TEST_DVSN_CD ='I6') or (substr(INTG_TEST_DVSN_CD,1,1) ='P') then amt.INTG_WG_CD else  amt.WG_TISS_CD end) as  WG_TISS_CD  --  워킹그룹코드(COR_050, COR_053)
				          , (case when (INTG_TEST_DVSN_CD ='I1') or (INTG_TEST_DVSN_CD ='I3') or (INTG_TEST_DVSN_CD ='I6') or (substr(INTG_TEST_DVSN_CD,1,1) ='P') then ac82.DETL_CD_NM
				               else   (decode(length(ac41.COMN_DTLS_CD),1,ac41.DETL_CD_NM,'')) || (decode(length(ac42.COMN_DTLS_CD),2,'>'||ac42.DETL_CD_NM,''))
				                        || (decode(length(ac43.COMN_DTLS_CD),3,'>'||ac43.DETL_CD_NM,'')) || (decode(length(ac44.COMN_DTLS_CD),4,'>'||ac44.DETL_CD_NM,'')) end) as  DETL_CD_NM4
				          , amt.CLBR_SYST_CD              -- 추가 협력시스템코드
				          ,(decode(length(ac51.COMN_DTLS_CD),1,ac51.DETL_CD_NM,'')) || (decode(length(ac52.COMN_DTLS_CD),2,'.'||ac52.DETL_CD_NM,'')) as  DETL_CD_NM5 -- 협력시스템코드그룹명
				          , amt.INTG_TEST_ID         --  통합테스트ID
				          , amt.INTG_TEST_ID_VL      --  통합테스트ID값                   --
				          , amt.INTG_TEST_NM         --  통합테스트명
				          , amt.INTG_TEST_CTN        --  통합테스트내용
				          , amt.INTG_TEST_WRTR_ID    --  통합테스트작성자ID
				          , ai1.USER_NM  as USER_NM1 --  사용자
				          , adt.TOTCNT as ALL_COT    --  전채갯수
				          , amt.CLSN_STTS_CD         --  마감상태코드
				          , decode(amt.CLSN_STTS_CD,'2','마감','1','미마감','') as DETL_CD_NM6 -- 마감상태명
				          --  , ac6.DETL_CD_NM as DETL_CD_NM6 -- 마감상태명 (COR_029)
				          , amt.TEST_DSCN_YN         --  테스트중단여부
				          , amt.INTG_TEST_DVSN_CD    --  통합테스트구분코드
				          , ac7.DETL_CD_NM as DETL_CD_NM7 -- 통합테스트구분명 (COR_042)
				          , case when FCNT > 0 then '실패' when TOTCNT = 0 then '미수행' when TOTCNT = SCNT then '성공' else decode(adt.TOTCNT,0,'미수행',adt.MCNT,'미수행',adt.TCNT,'완료','미완료') end as DETL_CD_NM8 -- 진행여부
				          , decode(adt.TOTCNT,0,0,adt.MCNT) as CCT01  --  미수행갯수
				          , decode(adt.TOTCNT,0,0,adt.TCNT) as CCT02  --  TEST완료갯수
				          , decode(adt.TOTCNT,0,0,adt.SCNT) as CCT03  --  성공갯수
				          , decode(adt.TOTCNT,0,0,adt.FCNT) as CCT04  --  실패갯수
				          , to_char(amt.TEST_PLAN_STRT_YMD,'YYYYMMDD') as  TEST_PLAN_STRT_YMD  --  테스트계획시작일자
				          , to_char(amt.TEST_PLAN_FNSH_YMD,'YYYYMMDD') as  TEST_PLAN_FNSH_YMD   --  테스트계획종료일자
				          , adt.ITEM_TEST_STRT_YMD as  ITEM_TEST_STRT_YMD   --  항목테스트시작일자
				          , decode(adt.TOTCNT,0,null,adt.TCNT,adt.ITEM_TEST_FNSH_YMD,null) as ITEM_TEST_FNSH_YMD -- 항목테스트종료일자
				          , decode(adt.TOTCNT,0,null,adt.SCNT,adt.ITEM_TEST_FNSH_YMD,null) as FINS_YMD -- 완료일
				          , adt.HCNT  as  CCT05      --  협의갯수
				          , adt.KCNT  as  CCT06      --  조치결합완료건
				          , amt.PRCG_CNDT_CTN        --  선행조건내용
				          , amt.FOLW_CNDT_CTN        --  후행조건내용
				          , amt.TEST_PTNO_CTN        --  테스트환자번호내용
				          , amt.TEST_MCDP_CTN        --  테스트진료과내용
				          , amt.TEST_ISTY_CTN        --  테스트보험유형내용
				          , amt.TEST_DATA_CTN        --  테스트데이터내용
				          , amt.RPRS_TEST_ID         --  현업담장자
				          , ai2.USER_NM as USER_NM2  --  사용자
				          , to_char(amt.INTG_TEST_WRTG_DT,'YYYYMMDD') as INTG_TEST_WRTG_DT    --  통합테스트작성일시
				          , amt.MNGR_ID              --  관리자ID
				          , ai3.USER_NM as USER_NM3  --  사용자
				          , amt.RMRK_CTN             --  비고내용
				          , amt.MDFC_HX_CTN          --  변경이력내용
				          , nvl(amt.DLTN_YN,'N') as  DLTN_YN             --  삭제여부
				          , amt.UPDT_CTN             --  수정내용
				          , amt.DSCN_CTN
				          , ax.data1 as AFI_SLCT_CTN
				          , amt.TEST_PLAC_NM             --  수정내용
				          , amt.OPRN_ASGN_CTN        -- CI 담당자
				          , (select count(*)  from COINTGBMT amm where  adt.INTG_TEST_ID = amm.INTG_TEST_ID and nvl(amm.DLTN_YN,'N') = 'N' )  as use_cqy_02
				          , tax.data1 as AFI_SLCT_CTN_2
				          , amt.DLTN_RESN_CTN                  -- 삭제 사유
				          , amt.INTG_TEST_PRFM_DDCN_VL         -- 통합테스트수행일수값
				          , decode(adt.TOTCNT,0,0,adt.T4CNT) as CCT07  --  중단갯수
				          , amt.TEST_MDDR_CTN       -- 진료의사
				   from   COINTGTMT amt,
				          CCCMCDDMT ac1,
				          CCCMCDDMT ac2,
				          CCCMCDDMT ac3,
				          CCCMCDDMT ac41,
				          CCCMCDDMT ac42,
				          CCCMCDDMT ac43,
				          CCCMCDDMT ac44,
				          CCCMCDDMT ac51,
				          CCCMCDDMT ac52,
				          CCUSRDPHT ai1,
				          CCCMCDDMT ac7,
				          CCUSRDPHT ai2,
				          CCUSRDPHT ai3,
				          CCCMCDDMT ac81,
				          CCCMCDDMT ac82,
				          (
				             select
				                     smt.INTG_TEST_ID                                    --  통합테스트ID
				                   --, min(nvl(sdt.ITEM_TEST_STRT_YMD,sysdate)) as ITEM_TEST_STRT_YMD   --  항목테스트시작일자
				                   --, max(nvl(sdt.ITEM_TEST_FNSH_YMD,to_date('20160101','yyyymmdd'))) as ITEM_TEST_FNSH_YMD  --  항목테스트종료일자
				                   , min(decode(sdt.ITEM_TEST_STRT_YMD,null,null, decode(sdt.TEST_RSLT_CD,'T1',to_char(sdt.ITEM_TEST_STRT_YMD,'YYYYMMDD'),'T2',to_char(sdt.ITEM_TEST_STRT_YMD,'YYYYMMDD'), null))) as ITEM_TEST_STRT_YMD   --  항목테스트시작일자
				                   , max(decode(sdt.ITEM_TEST_FNSH_YMD,null,null, decode(sdt.TEST_RSLT_CD,'T1',to_char(sdt.ITEM_TEST_FNSH_YMD,'YYYYMMDD'),'T2',to_char(sdt.ITEM_TEST_FNSH_YMD,'YYYYMMDD'), null))) as ITEM_TEST_FNSH_YMD  --  항목테스트종료일자
				                  -- , count(sdt.INTG_TEST_ID) as TOTCNT                --  최대갯수
				                   , sum(decode(sdt.TEST_RSLT_CD, 'T3', 0, decode(sdt.INTG_TEST_ID,null,0,1))) as TOTCNT   --  최대갯수(비대상제외)
				                   , sum(decode(sdt.INTG_TEST_ID,'',0,decode(sdt.TEST_RSLT_CD, 'T0', 1, '',1, 0 ))) as MCNT   --  미수행갯수
				                   , sum(decode(sdt.TEST_RSLT_CD, 'T1', 1, 'T2', 1, 0 )) as TCNT   --  TEST완료갯수
				                   , sum(decode(sdt.TEST_RSLT_CD, 'T1', 1, 0 )) as SCNT   --  성공갯수
				                   , sum(decode(sdt.TEST_RSLT_CD, 'T2', 1, 0 )) as FCNT   --  실패갯수
				                   , sum(decode(sdt.TEST_RSLT_CD, 'T4', 1, 0 )) as T4CNT   --  중단갯수
				                   , sum(decode(sdt.FULT_TYPE_CD, 'E1', 1, 'E2', 0 )) as HCNT       --  협의갯수
				                   , sum(decode(sdt.TEST_RSLT_CD, 'T2',decode(sdt.FULT_PRSG_STTS_CD,'3',1,0),0)) as KCNT   --  조치결합완료건
				               from   COINTGTMT smt
				                   left outer join   COINTGTDT sdt
				                   on   smt.INTG_TEST_ID = sdt.INTG_TEST_ID(+)
				                   and   nvl(sdt.DLTN_YN,'N') = 'N'
				              where smt.INTG_TEST_ID is not null
				              -- 테스트 ID
				               and   ((nvl( #{userId1} , '*') = '*') or (smt.INTG_TEST_ID in (select DISTINCT yt.INTG_TEST_ID
				                                                                                             from COINTGBMT yt
				                                                                                            where yt.TEST_ID =  #{userId1} 
				                                                                                              and smt.INTG_TEST_ID = yt.INTG_TEST_ID
				                                                                                              and nvl(yt.DLTN_YN,'N') = 'N')))
				              -- 테스트 ID
				               and   ((nvl( #{testId} , '*') = '*') or (smt.INTG_TEST_ID in (select DISTINCT yt.INTG_TEST_ID
				                                                                                             from COINTGTDT yt
				                                                                                            where yt.TEST_ID =  #{testId} 
				                                                                                              and smt.INTG_TEST_ID = yt.INTG_TEST_ID
				                                                                                              and nvl(yt.DLTN_YN,'N') = 'N')))
				             --  테스트가능구분코드
				               and   ((nvl( #{testPsblDvsnCd} , '*') = '*') or (smt.TEST_PSBL_DVSN_CD =  #{testPsblDvsnCd} ))
				             --  통합테스트구분코드
				               and   ((nvl( #{intgTestDvsnCd} , '*') = '*') or (smt.INTG_TEST_DVSN_CD =  #{intgTestDvsnCd} ))
				             --  프로젝트조직코드
				               and   ((nvl( #{afiInqrCndtNm1} , '*') = '*') or
				                           (( #{intgTestDvsnCd}  in ('I1','I3','I6') or substr( #{intgTestDvsnCd} ,1,1) = 'P' ) and
				                            ( #{afiInqrCndtNm1}  like '%' || smt.INTG_PRJT_CD || '%' and smt.INTG_PRJT_CD is not null))
				                           or
				                           (( #{intgTestDvsnCd}  in ('','I0','I2','I5') or substr( #{intgTestDvsnCd} ,1,1) = 'T') and
				                            ( #{afiInqrCndtNm1}  like '%/' || smt.PRJT_TISS_CD || '/%' and smt.PRJT_TISS_CD is not null))
				                           )
				             --  워킹그룹코드
				              and   ((nvl( #{afiSlctCtn2} , '*') = '*') or
				                         (( #{intgTestDvsnCd}  in ('I1','I3','I6') or substr( #{intgTestDvsnCd} ,1,1) = 'P') and
				                                 ( #{afiSlctCtn2}  like '%' || smt.INTG_WG_CD || '%' and smt.INTG_WG_CD is not null))
				                         or
				                         (( #{intgTestDvsnCd}  in ('','I0','I2','I5') or substr( #{intgTestDvsnCd} ,1,1) = 'T') and
				                                 ( #{afiSlctCtn2}  like '%/' || smt.WG_TISS_CD || '/%' and smt.WG_TISS_CD is not null))
				                         )
				             --  현업시스템
				               and   ((nvl( #{afiInqrCndtNm3} , '*') = '*') or ( #{afiInqrCndtNm3}  like '%' || smt.CLBR_SYST_CD || '%' and smt.CLBR_SYST_CD is not null) )
				             --  통함테스트ID/명
				               and   ((nvl( #{intgTestNm} , '*') = '*') or (upper(smt.INTG_TEST_ID) like upper( #{intgTestNm} ) || '%') or
				                       (smt.INTG_TEST_NM like '%' ||  #{intgTestNm}  || '%') or
				                       (smt.INTG_TEST_ID_VL like '%' ||  #{intgTestNm}  || '%'))
				             --  테스트계획시작일자
				               and   ((nvl( #{testPlanStrtYmd} , '*') = '*') or
				                      ( trunc(smt.TEST_PLAN_STRT_YMD) >= to_date( #{testPlanStrtYmd} , 'YYYYMMDD')
				                       and trunc(smt.TEST_PLAN_STRT_YMD) <= to_date( #{strtYmd} , 'YYYYMMDD')))
				             --  테스트계획종료일자
				               and   ((nvl( #{testPlanFnshYmd} , '*') = '*') or
				                      ( trunc(smt.TEST_PLAN_FNSH_YMD) >= to_date( #{testPlanFnshYmd} , 'YYYYMMDD')
				                       and  trunc(smt.TEST_PLAN_FNSH_YMD) <= to_date( #{fnshYmd} , 'YYYYMMDD')))
				             --  통합테스트작성자ID
				               and   ((nvl( #{intgTestWrtrId} , '*') = '*') or (smt.INTG_TEST_WRTR_ID =  #{intgTestWrtrId} ))
				             --  대표테스트ID
				               and   ((nvl( #{rprsTestId} , '*') = '*') or (smt.RPRS_TEST_ID =  #{rprsTestId} ))
				             --  삭제여부
				               and   ((nvl( #{dltnYn} , '*') = '*') or (nvl(smt.DLTN_YN,'N') =  #{dltnYn} ))
				             --  관리자ID
				               and   ((nvl( #{mngrId} , '*') = '*') or (smt.MNGR_ID =  #{mngrId} ))
				           group by  smt.INTG_TEST_ID
				           ) adt
				         ,(
				                  select INTG_TEST_ID,
		                         listagg(USER_NM, '/') within group (order by USER_NM)  AS data1-- 가로 출력 
				                  from
				                     (
				                     select DISTINCT
				                            ai1.USER_NM || '['|| bt.TEST_ID ||']' as USER_NM,
				                            xt.INTG_TEST_ID
				                      from  COINTGTMT xt
				                           , COINTGTDT bt
				                           ,CCUSRDPHT ai1
				                     where xt.INTG_TEST_ID = bt.INTG_TEST_ID
				                       and bt.TEST_ID = ai1.USER_ID(+)
				                       and nvl(bt.DLTN_YN,'N') = 'N'
				                       and bt.TEST_ID is not null
				                       --  테스트가능구분코드
				                       and   ((nvl( #{testPsblDvsnCd} , '*') = '*') or (xt.TEST_PSBL_DVSN_CD =  #{testPsblDvsnCd} ))
				                     --  통합테스트구분코드
				                       and   ((nvl( #{intgTestDvsnCd} , '*') = '*') or (xt.INTG_TEST_DVSN_CD =  #{intgTestDvsnCd} ))
				                      --  프로젝트조직코드
				                       and   ((nvl( #{afiInqrCndtNm1} , '*') = '*') or
				                                    (( #{intgTestDvsnCd}  in ('I1','I3','I6') or substr( #{intgTestDvsnCd} ,1,1) = 'P') and
				                                     ( #{afiInqrCndtNm1}  like '%' || xt.INTG_PRJT_CD || '%' and xt.INTG_PRJT_CD is not null))
				                                    or
				                                    (( #{intgTestDvsnCd}  in ('','I0','I2','I5','I7') or substr( #{intgTestDvsnCd} ,1,1) = 'T') and
				                                     ( #{afiInqrCndtNm1}  like '%/' || xt.PRJT_TISS_CD || '/%' and xt.PRJT_TISS_CD is not null))
				                                    )
				                      --  워킹그룹코드
				                       and   ((nvl( #{afiSlctCtn2} , '*') = '*') or
				                                  (( #{intgTestDvsnCd}  in ('I1','I3','I6') or substr( #{intgTestDvsnCd} ,1,1) = 'P') and
				                                          ( #{afiSlctCtn2}  like '%' || xt.INTG_WG_CD || '%' and xt.INTG_WG_CD is not null))
				                                  or
				                                  (( #{intgTestDvsnCd}  in ('','I0','I2','I5','I7') or substr( #{intgTestDvsnCd} ,1,1) = 'T') and
				                                          ( #{afiSlctCtn2}  like '%/' || xt.WG_TISS_CD || '/%' and xt.WG_TISS_CD is not null))
				                                  )
				                     --  현업시스템
				                       and   ((nvl( #{afiInqrCndtNm3} , '*') = '*') or ( #{afiInqrCndtNm3}  like '%' || xt.CLBR_SYST_CD || '%' and xt.CLBR_SYST_CD is not null) )
				                     --  통함테스트ID/명
				                       and   ((nvl( #{intgTestNm} , '*') = '*') or (upper(xt.INTG_TEST_ID) like upper( #{intgTestNm} ) || '%') or
				                               (xt.INTG_TEST_NM like '%' ||  #{intgTestNm}  || '%') or
				                               (xt.INTG_TEST_ID_VL like '%' ||  #{intgTestNm}  || '%'))
				                     --  테스트계획시작일자
				                       and   ((nvl( #{testPlanStrtYmd} , '*') = '*') or
				                              ( trunc(xt.TEST_PLAN_STRT_YMD) >= to_date( #{testPlanStrtYmd} , 'YYYYMMDD')
				                               and trunc(xt.TEST_PLAN_STRT_YMD) <= to_date( #{strtYmd} , 'YYYYMMDD')))
				                     --  테스트계획종료일자
				                       and   ((nvl( #{testPlanFnshYmd} , '*') = '*') or
				                              ( trunc(xt.TEST_PLAN_FNSH_YMD) >= to_date( #{testPlanFnshYmd} , 'YYYYMMDD')
				                               and  trunc(xt.TEST_PLAN_FNSH_YMD) <= to_date( #{fnshYmd} , 'YYYYMMDD')))
				                     --  통합테스트작성자ID
				                       and   ((nvl( #{intgTestWrtrId} , '*') = '*') or (xt.INTG_TEST_WRTR_ID =  #{intgTestWrtrId} ))
				                     --  대표테스트ID
				                       and   ((nvl( #{rprsTestId} , '*') = '*') or (xt.RPRS_TEST_ID =  #{rprsTestId} ))
				                     --  삭제여부
				                       and   ((nvl( #{dltnYn} , '*') = '*') or (nvl(xt.DLTN_YN,'N') =  #{dltnYn} ))
				                     --  관리자ID
				                       and   ((nvl( #{mngrId} , '*') = '*') or (xt.MNGR_ID =  #{mngrId} ))
				                    )
				                 group by INTG_TEST_ID
				         ) ax
				         ,(
				                  select INTG_TEST_ID,
		                             listagg(USER_NM, '/') within group (order by USER_NM)  AS data1-- 가로 출력 
				                      from
				                         (
				                         select DISTINCT
				                                ai1.USER_NM || '['|| bt.TEST_ID ||']' as USER_NM,
				                                xt.INTG_TEST_ID
				                          from  COINTGTMT xt
				                               , COINTGBMT bt
				                               ,CCUSRDPHT ai1
				                          where xt.INTG_TEST_ID = bt.INTG_TEST_ID
				                            and (nvl(bt.DLTN_YN,'N')) = 'N'
				                            and bt.TEST_ID = ai1.USER_ID(+)
				                            -- 테스트 ID
				                            and   ((nvl( #{testId} , '*') = '*') or (bt.TEST_ID =  #{testId} ))
				                            --  테스트가능구분코드
				                            and   ((nvl( #{testPsblDvsnCd} , '*') = '*') or (xt.TEST_PSBL_DVSN_CD =  #{testPsblDvsnCd} ))
				                            --  통합테스트구분코드
				                            and   ((nvl( #{intgTestDvsnCd} , '*') = '*') or (xt.INTG_TEST_DVSN_CD =  #{intgTestDvsnCd} ))
				                          --  프로젝트조직코드
				                            and   ((nvl( #{afiInqrCndtNm1} , '*') = '*') or
				                                        (( #{intgTestDvsnCd}  in ('I1','I3','I6') or substr( #{intgTestDvsnCd} ,1,1) = 'P') and
				                                         ( #{afiInqrCndtNm1}  like '%' || xt.INTG_PRJT_CD || '%' and xt.INTG_PRJT_CD is not null))
				                                        or
				                                        (( #{intgTestDvsnCd}  in ('','I0','I2','I5','I7') or substr( #{intgTestDvsnCd} ,1,1) = 'T') and
				                                         ( #{afiInqrCndtNm1}  like '%/' || xt.PRJT_TISS_CD || '/%' and xt.PRJT_TISS_CD is not null))
				                                        )
				                          --  워킹그룹코드
				                            and   ((nvl( #{afiSlctCtn2} , '*') = '*') or
				                                      (( #{intgTestDvsnCd}  in ('I1','I3','I6') or substr( #{intgTestDvsnCd} ,1,1) = 'P') and
				                                              ( #{afiSlctCtn2}  like '%' || xt.INTG_WG_CD || '%' and xt.INTG_WG_CD is not null))
				                                      or
				                                      (( #{intgTestDvsnCd}  in ('','I0','I2','I5','I7') or substr( #{intgTestDvsnCd} ,1,1) = 'T') and
				                                              ( #{afiSlctCtn2}  like '%/' || xt.WG_TISS_CD || '/%' and xt.WG_TISS_CD is not null))
				                                      )
				                            --  현업시스템
				                            and   ((nvl( #{afiInqrCndtNm3} , '*') = '*') or ( #{afiInqrCndtNm3}  like '%' || xt.CLBR_SYST_CD || '%' and xt.CLBR_SYST_CD is not null) )
				                            --  통함테스트ID/명
				                            and   ((nvl( #{intgTestNm} , '*') = '*') or (upper(xt.INTG_TEST_ID) like upper( #{intgTestNm} ) || '%') or
				                                 (xt.INTG_TEST_NM like '%' ||  #{intgTestNm}  || '%') or
				                                 (xt.INTG_TEST_ID_VL like '%' ||  #{intgTestNm}  || '%'))
				                            --  테스트계획시작일자
				                            and   ((nvl( #{testPlanStrtYmd} , '*') = '*') or
				                                ( trunc(xt.TEST_PLAN_STRT_YMD) >= to_date( #{testPlanStrtYmd} , 'YYYYMMDD')
				                                 and trunc(xt.TEST_PLAN_STRT_YMD) <= to_date( #{strtYmd} , 'YYYYMMDD')))
				                            --  테스트계획종료일자
				                            and   ((nvl( #{testPlanFnshYmd} , '*') = '*') or
				                                ( trunc(xt.TEST_PLAN_FNSH_YMD) >= to_date( #{testPlanFnshYmd} , 'YYYYMMDD')
				                                 and  trunc(xt.TEST_PLAN_FNSH_YMD) <= to_date( #{fnshYmd} , 'YYYYMMDD')))
				                            --  통합테스트작성자ID
				                            and   ((nvl( #{intgTestWrtrId} , '*') = '*') or (xt.INTG_TEST_WRTR_ID =  #{intgTestWrtrId} ))
				                            --  대표테스트ID
				                            and   ((nvl( #{rprsTestId} , '*') = '*') or (xt.RPRS_TEST_ID =  #{rprsTestId} ))
				                            --  삭제여부
				                            and   ((nvl( #{dltnYn} , '*') = '*') or (nvl(xt.DLTN_YN,'N') =  #{dltnYn} ))
				                            --  관리자ID
				                            and   ((nvl( #{mngrId} , '*') = '*') or (xt.MNGR_ID =  #{mngrId} ))
				                        )
				                   group by INTG_TEST_ID
				          ) tax
				    where  amt.INTG_TEST_ID        = adt.INTG_TEST_ID
				      and  amt.INTG_TEST_ID        = ax.INTG_TEST_ID(+)
				      and  amt.INTG_TEST_ID        = tax.INTG_TEST_ID(+)
				      and  ( (nvl( #{inqrDvsnCd1} , '*') = '*') or
				             ( #{inqrDvsnCd1}  = decode(adt.TOTCNT,0,'1',adt.MCNT,'1',adt.TCNT,'3','2')))
				      and  ac1.COMN_GRP_CD(+)      = 'COR_042'
				      and  amt.TEST_PSBL_DVSN_CD   = ac1.COMN_DTLS_CD(+)
				      and  ac2.COMN_GRP_CD(+)      = 'COR_025'
				      and  substr(amt.PRJT_TISS_CD, 1, 1) = ac2.COMN_DTLS_CD(+)
				      and  ac3.COMN_GRP_CD(+)      = 'COR_025'
				      and  amt.PRJT_TISS_CD        = ac3.COMN_DTLS_CD(+)
				      -- 추후에 협력시스템코드
				      and  ac51.COMN_GRP_CD(+)      = 'COR_025'
				      and  substr(amt.CLBR_SYST_CD, 1, 1) = ac51.COMN_DTLS_CD(+)
				      and  ac52.COMN_GRP_CD(+)      = 'COR_025'
				      and  amt.CLBR_SYST_CD          = ac52.COMN_DTLS_CD(+)
				      and  ac41.COMN_GRP_CD(+)      = 'COR_050' and  substr(amt.WG_TISS_CD, 1, 1) = ac41.COMN_DTLS_CD(+)
				      and  ac42.COMN_GRP_CD(+)      = 'COR_050' and  substr(amt.WG_TISS_CD, 1, 2) = ac42.COMN_DTLS_CD(+)
				      and  ac43.COMN_GRP_CD(+)      = 'COR_050' and  substr(amt.WG_TISS_CD, 1, 3) = ac43.COMN_DTLS_CD(+)
				      and  ac44.COMN_GRP_CD(+)      = 'COR_050' and  substr(amt.WG_TISS_CD, 1, 4) = ac44.COMN_DTLS_CD(+)
				      and  amt.INTG_TEST_WRTR_ID   = ai1.USER_ID(+)
				      --and  ac6.COMN_GRP_CD(+)      = 'COR_029'
				      --and  amt.CLSN_STTS_CD        = ac6.COMN_DTLS_CD(+)
				      and  ac7.COMN_GRP_CD(+)      = 'COR_041'
				      and  amt.INTG_TEST_DVSN_CD   = ac7.COMN_DTLS_CD(+)
				      and  ac81.COMN_GRP_CD(+)     = 'COR_052'
				      and  amt.INTG_PRJT_CD        = ac81.COMN_DTLS_CD(+)
				      and  ac82.COMN_GRP_CD(+)     = 'COR_053'
				      and  amt.INTG_WG_CD          = ac82.COMN_DTLS_CD(+)
				      and  amt.RPRS_TEST_ID        = ai2.USER_ID(+)
				      and  amt.MNGR_ID             = ai3.USER_ID(+)
				    order by
				            amt.INTG_TEST_ID_VL      --  통합테스트ID값
				          , amt.TEST_PSBL_DVSN_CD    --  테스트가능구분코드
				          , amt.PRJT_TISS_CD         --  프로젝트조직코드
				          , amt.WG_TISS_CD           --  워킹그룹코드
				          , amt.INTG_TEST_ID         --  통합테스트ID
			 ]]> 
	</select>




	<resultMap id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSelectMstDAO-selectOneTbrmmtMst-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSelectMstDVO">
	
		<result property="testPsblDvsnCd" column="TEST_PSBL_DVSN_CD"/>
		<result property="detlCdNm1" column="DETL_CD_NM1"/>
		<result property="prjtTissCd" column="PRJT_TISS_CD"/>
		<result property="detlCdNm2" column="DETL_CD_NM2"/>
		<result property="detlCdNm3" column="DETL_CD_NM3"/>
		<result property="wgTissCd" column="WG_TISS_CD"/>
		<result property="detlCdNm4" column="DETL_CD_NM4"/>
		<result property="clbrSystCd" column="CLBR_SYST_CD"/>
		<result property="detlCdNm5" column="DETL_CD_NM5"/>
		<result property="intgTestId" column="INTG_TEST_ID"/>
		<result property="intgTestIdVl" column="INTG_TEST_ID_VL"/>
		<result property="intgTestNm" column="INTG_TEST_NM"/>
		<result property="intgTestCtn" column="INTG_TEST_CTN"/>
		<result property="intgTestWrtrId" column="INTG_TEST_WRTR_ID"/>
		<result property="userNm1" column="USER_NM1"/>
		<result property="allCot" column="ALL_COT"/>
		<result property="clsnSttsCd" column="CLSN_STTS_CD"/>
		<result property="detlCdNm6" column="DETL_CD_NM6"/>
		<result property="testDscnYn" column="TEST_DSCN_YN"/>
		<result property="intgTestDvsnCd" column="INTG_TEST_DVSN_CD"/>
		<result property="detlCdNm7" column="DETL_CD_NM7"/>
		<result property="detlCdNm8" column="DETL_CD_NM8"/>
		<result property="cct01" column="CCT01"/>
		<result property="cct02" column="CCT02"/>
		<result property="cct03" column="CCT03"/>
		<result property="cct04" column="CCT04"/>
		<result property="testPlanStrtYmd" column="TEST_PLAN_STRT_YMD"/>
		<result property="testPlanFnshYmd" column="TEST_PLAN_FNSH_YMD"/>
		<result property="itemTestStrtYmd" column="ITEM_TEST_STRT_YMD"/>
		<result property="itemTestFnshYmd" column="ITEM_TEST_FNSH_YMD"/>
		<result property="finsYmd" column="FINS_YMD"/>
		<result property="cct05" column="CCT05"/>
		<result property="cct06" column="CCT06"/>
		<result property="prcgCndtCtn" column="PRCG_CNDT_CTN"/>
		<result property="folwCndtCtn" column="FOLW_CNDT_CTN"/>
		<result property="testPtnoCtn" column="TEST_PTNO_CTN"/>
		<result property="testMcdpCtn" column="TEST_MCDP_CTN"/>
		<result property="testIstyCtn" column="TEST_ISTY_CTN"/>
		<result property="testDataCtn" column="TEST_DATA_CTN"/>
		<result property="rprsTestId" column="RPRS_TEST_ID"/>
		<result property="userNm2" column="USER_NM2"/>
		<result property="intgTestWrtgDt" column="INTG_TEST_WRTG_DT"/>
		<result property="mngrId" column="MNGR_ID"/>
		<result property="userNm3" column="USER_NM3"/>
		<result property="rmrkCtn" column="RMRK_CTN"/>
		<result property="mdfcHxCtn" column="MDFC_HX_CTN"/>
		<result property="dltnYn" column="DLTN_YN"/>
		<result property="updtCtn" column="UPDT_CTN"/>
		<result property="dscnCtn" column="DSCN_CTN"/>
		<result property="afiSlctCtn" column="AFI_SLCT_CTN"/>
		<result property="testPlacNm" column="TEST_PLAC_NM"/>
		<result property="oprnAsgnCtn" column="OPRN_ASGN_CTN"/>
		<result property="useCqy02" column="USE_CQY_02"/>
		<result property="dltnResnCtn" column="DLTN_RESN_CTN"/>
		<result property="intgTestPrfmDdcnVl" column="INTG_TEST_PRFM_DDCN_VL"/>
		<result property="cct07" column="CCT07"/>
		<result property="testMddrCtn" column="TEST_MDDR_CTN"/>
	</resultMap>
	
    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSelectMstDAO-selectOneTbrmmtMst () 
        Description :                       
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSelectMstDVO
		resultMap : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSelectMstDAO-selectOneTbrmmtMst-result
    -->
	<select id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSelectMstDAO-selectOneTbrmmtMst"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSelectMstDVO"  resultMap="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSelectMstDAO-selectOneTbrmmtMst-result" useCache="true" flushCache="false">
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSelectMstDAO-selectOneTbrmmtMst */
		 <![CDATA[
		 select  /*+ cod_tbprmmt_l11$S01_TOBO 통합테스트 마스터 조회 */
		        amt.TEST_PSBL_DVSN_CD    --  테스트가능구분코드
		          , ac1.DETL_CD_NM as DETL_CD_NM1 -- 테스트가능구분명 (COR_041)
		          , (case when (INTG_TEST_DVSN_CD ='I1') or (INTG_TEST_DVSN_CD ='I3') or (INTG_TEST_DVSN_CD ='I6') or (substr(INTG_TEST_DVSN_CD,1,1) ='P') then amt.INTG_PRJT_CD else  amt.PRJT_TISS_CD end) as  PRJT_TISS_CD  --  프로젝트조직코드
		          , (case when (INTG_TEST_DVSN_CD ='I1') or (INTG_TEST_DVSN_CD ='I3') or (INTG_TEST_DVSN_CD ='I6') or (substr(INTG_TEST_DVSN_CD,1,1) ='P') then ac81.DETL_CD_NM else  ac2.DETL_CD_NM end) as  DETL_CD_NM2  -- 프로젝트조직명 (COR_025,COR_052)
		          , (case when (INTG_TEST_DVSN_CD ='I1') or (INTG_TEST_DVSN_CD ='I3') or (INTG_TEST_DVSN_CD ='I6') or (substr(INTG_TEST_DVSN_CD,1,1) ='P') then ac81.DETL_CD_NM else  ac3.DETL_CD_NM end) as  DETL_CD_NM3  -- 프로젝트조직명 (COR_025,COR_052)
		          , (case when (INTG_TEST_DVSN_CD ='I1') or (INTG_TEST_DVSN_CD ='I3') or (INTG_TEST_DVSN_CD ='I6') or (substr(INTG_TEST_DVSN_CD,1,1) ='P') then amt.INTG_WG_CD else  amt.WG_TISS_CD end) as  WG_TISS_CD  --  워킹그룹코드(COR_050, COR_053)
		          , (case when (INTG_TEST_DVSN_CD ='I1') or (INTG_TEST_DVSN_CD ='I3') or (INTG_TEST_DVSN_CD ='I6') or (substr(INTG_TEST_DVSN_CD,1,1) ='P') then ac82.DETL_CD_NM
		               else   (decode(length(ac41.COMN_DTLS_CD),1,ac41.DETL_CD_NM,'')) || (decode(length(ac42.COMN_DTLS_CD),2,'>'||ac42.DETL_CD_NM,''))
		                        || (decode(length(ac43.COMN_DTLS_CD),3,'>'||ac43.DETL_CD_NM,'')) || (decode(length(ac44.COMN_DTLS_CD),4,'>'||ac44.DETL_CD_NM,'')) end) as  DETL_CD_NM4
		          , amt.CLBR_SYST_CD              -- 추가 협력시스템코드
		          ,(decode(length(ac51.COMN_DTLS_CD),1,ac51.DETL_CD_NM,'')) || (decode(length(ac52.COMN_DTLS_CD),2,'.'||ac52.DETL_CD_NM,'')) as  DETL_CD_NM5 -- 협력시스템코드그룹명
		          , amt.INTG_TEST_ID         --  통합테스트ID
		          , amt.INTG_TEST_ID_VL      --  통합테스트ID값                   --
		          , amt.INTG_TEST_NM         --  통합테스트명
		          , amt.INTG_TEST_CTN        --  통합테스트내용
		          , amt.INTG_TEST_WRTR_ID    --  통합테스트작성자ID
		          , ai1.USER_NM  as USER_NM1 --  사용자
		          , adt.TOTCNT as ALL_COT    --  전채갯수
		          , amt.CLSN_STTS_CD         --  마감상태코드
		          , decode(amt.CLSN_STTS_CD,'2','마감','1','미마감','') as DETL_CD_NM6 -- 마감상태명
		          --  , ac6.DETL_CD_NM as DETL_CD_NM6 -- 마감상태명 (COR_029)
		          , amt.TEST_DSCN_YN         --  테스트중단여부
		          , amt.INTG_TEST_DVSN_CD    --  통합테스트구분코드
		          , ac7.DETL_CD_NM as DETL_CD_NM7 -- 통합테스트구분명 (COR_042)
		          , case when FCNT > 0 then '실패' when TOTCNT = 0 then '미수행' else decode(adt.TOTCNT,0,'수행전',adt.MCNT,'수행전',adt.TCNT,'완료','미완료') end as DETL_CD_NM8 -- 진행여부
		          , decode(adt.TOTCNT,0,0,adt.MCNT) as CCT01  --  미수행갯수
		          , decode(adt.TOTCNT,0,0,adt.TCNT) as CCT02  --  TEST완료갯수
		          , decode(adt.TOTCNT,0,0,adt.SCNT) as CCT03  --  성공갯수
		          , decode(adt.TOTCNT,0,0,adt.FCNT) as CCT04  --  실패갯수
		          , to_char(amt.TEST_PLAN_STRT_YMD,'YYYYMMDD') as  TEST_PLAN_STRT_YMD  --  테스트계획시작일자
		          , to_char(amt.TEST_PLAN_FNSH_YMD,'YYYYMMDD') as  TEST_PLAN_FNSH_YMD   --  테스트계획종료일자
		          , adt.ITEM_TEST_STRT_YMD as  ITEM_TEST_STRT_YMD   --  항목테스트시작일자
		          , decode(adt.TOTCNT,0,null,adt.TCNT,adt.ITEM_TEST_FNSH_YMD,null) as ITEM_TEST_FNSH_YMD -- 항목테스트종료일자
		          , decode(adt.TOTCNT,0,null,adt.SCNT,adt.ITEM_TEST_FNSH_YMD,null) as FINS_YMD -- 완료일
		          , adt.HCNT  as  CCT05      --  협의갯수
		          , adt.KCNT  as  CCT06      --  조치결합완료건
		          , amt.PRCG_CNDT_CTN        --  선행조건내용
		          , amt.FOLW_CNDT_CTN        --  후행조건내용
		          , amt.TEST_PTNO_CTN        --  테스트환자번호내용
		          , amt.TEST_MCDP_CTN        --  테스트진료과내용
		          , amt.TEST_ISTY_CTN        --  테스트보험유형내용
		          , amt.TEST_DATA_CTN        --  테스트데이터내용
		          , amt.RPRS_TEST_ID         --  현업담장자
		          , ai2.USER_NM as USER_NM2  --  사용자
		          , to_char(amt.INTG_TEST_WRTG_DT,'YYYYMMDD') as INTG_TEST_WRTG_DT    --  통합테스트작성일시
		          , amt.MNGR_ID              --  관리자ID
		          , ai3.USER_NM as USER_NM3  --  사용자
		          , amt.RMRK_CTN             --  비고내용
		          , amt.MDFC_HX_CTN          --  변경이력내용
		          , nvl(amt.DLTN_YN,'N') as  DLTN_YN              --  삭제여부
		          , amt.UPDT_CTN             --  수정내용
		          , amt.DSCN_CTN
		         , ax.data1 as AFI_SLCT_CTN
		         , amt.TEST_PLAC_NM             --  수정내용
		         , amt.OPRN_ASGN_CTN        -- CI 담당자
		         , (select count(*)  from COINTGBMT amm where  adt.INTG_TEST_ID = amm.INTG_TEST_ID and nvl(amm.DLTN_YN,'N') = 'N' )  as use_cqy_02
		         , amt.DLTN_RESN_CTN                  -- 삭제 사유
		         , amt.INTG_TEST_PRFM_DDCN_VL         -- 통합테스트수행일수값
		         , decode(adt.TOTCNT,0,0,adt.T4CNT) as CCT07  --  중단갯수
		         , amt.TEST_MDDR_CTN       -- 진료의사
		      from  COINTGTMT amt,
		            CCCMCDDMT ac1,
		            CCCMCDDMT ac2,
		            CCCMCDDMT ac3,
		            CCCMCDDMT ac41,
		            CCCMCDDMT ac42,
		            CCCMCDDMT ac43,
		            CCCMCDDMT ac44,
		            CCCMCDDMT ac51,
		            CCCMCDDMT ac52,
		            CCUSRDPHT ai1,
		            --CCCMCDDMT ac6,
		            CCCMCDDMT ac7,
		            CCUSRDPHT ai2,
		            CCUSRDPHT ai3,
		            CCCMCDDMT ac81,
		            CCCMCDDMT ac82,
		            (
		               select
		                       smt.INTG_TEST_ID                                    --  통합테스트ID
		                    -- , min(nvl(sdt.ITEM_TEST_STRT_YMD,sysdate)) as ITEM_TEST_STRT_YMD   --  항목테스트시작일자
		                    -- , max(nvl(sdt.ITEM_TEST_FNSH_YMD,to_date('20160101','yyyymmdd'))) as ITEM_TEST_FNSH_YMD  --  항목테스트종료일자
		                     , min(decode(sdt.ITEM_TEST_STRT_YMD,null,null, decode(sdt.TEST_RSLT_CD,'T1',to_char(sdt.ITEM_TEST_STRT_YMD,'YYYYMMDD'),'T2',to_char(sdt.ITEM_TEST_STRT_YMD,'YYYYMMDD'), null))) as ITEM_TEST_STRT_YMD   --  항목테스트시작일자
		                     , max(decode(sdt.ITEM_TEST_FNSH_YMD,null,null, decode(sdt.TEST_RSLT_CD,'T1',to_char(sdt.ITEM_TEST_FNSH_YMD,'YYYYMMDD'),'T2',to_char(sdt.ITEM_TEST_FNSH_YMD,'YYYYMMDD'), null))) as ITEM_TEST_FNSH_YMD  --  항목테스트종료일자
		                     , count(sdt.INTG_TEST_ID) as TOTCNT                --  최대갯수
		                     , sum(decode(sdt.INTG_TEST_ID,'',0,decode(sdt.TEST_RSLT_CD, 'T0', 1, '',1, 0 ))) as MCNT   --  미수행갯수
		                     , sum(decode(sdt.TEST_RSLT_CD, 'T1', 1, 'T2', 1, 0 )) as TCNT   --  TEST완료갯수
		                     , sum(decode(sdt.TEST_RSLT_CD, 'T1', 1, 0 )) as SCNT   --  성공갯수
		                     , sum(decode(sdt.TEST_RSLT_CD, 'T2', 1, 0 )) as FCNT   --  실패갯수
		                     , sum(decode(sdt.TEST_RSLT_CD, 'T4', 1, 0 )) as T4CNT   --  중단갯수
		                     , sum(decode(sdt.FULT_TYPE_CD, 'E1', 1, 'E2', 0 )) as HCNT       --  협의갯수
		                     , sum(decode(sdt.TEST_RSLT_CD, 'T2',decode(sdt.FULT_PRSG_STTS_CD,'3',1,0),0)) as KCNT   --  조치결합완료건
		              from   COINTGTMT smt
		                     left outer join   COINTGTDT sdt
		                     on   smt.INTG_TEST_ID = sdt.INTG_TEST_ID(+)
		                     and   nvl(sdt.DLTN_YN,'N') = 'N'
		             where   smt.INTG_TEST_ID is not null
		               and   smt.INTG_TEST_ID =  #{intgTestId} 
		             group by  smt.INTG_TEST_ID
		             ) adt
		          ,(
		            select
		                  INTG_TEST_ID,
		                   max(decode(icnt,1,USER_NM,'') ) ||  max(decode(icnt,2,decode(USER_NM,null,'','/'||USER_NM),'') ) || max(decode(icnt,3,decode(USER_NM,null,'','/'||USER_NM),'') ) || max(decode(icnt,4,decode(USER_NM,null,'','/'||USER_NM),'') ) || max(decode(icnt,5,decode(USER_NM,null,'','/'||USER_NM),'') ) ||
		                   max(decode(icnt,6,decode(USER_NM,null,'','/'||USER_NM),'') ) ||  max(decode(icnt,7,decode(USER_NM,null,'','/'||USER_NM),'') ) || max(decode(icnt,8,decode(USER_NM,null,'','/'||USER_NM),'') ) || max(decode(icnt,9,decode(USER_NM,null,'','/'||USER_NM),'') ) || max(decode(icnt,10,decode(USER_NM,null,'','/'||USER_NM),'') ) ||
		                   max(decode(icnt,11,decode(USER_NM,null,'','/'||USER_NM),'') ) ||  max(decode(icnt,12,decode(USER_NM,null,'','/'||USER_NM),'') ) || max(decode(icnt,13,decode(USER_NM,null,'','/'||USER_NM),'') ) || max(decode(icnt,14,decode(USER_NM,null,'','/'||USER_NM),'') ) || max(decode(icnt,15,decode(USER_NM,null,'','/'||USER_NM),'') ) ||
		                   max(decode(icnt,16,decode(USER_NM,null,'','/'||USER_NM),'') ) ||  max(decode(icnt,17,decode(USER_NM,null,'','/'||USER_NM),'') ) || max(decode(icnt,18,decode(USER_NM,null,'','/'||USER_NM),'') ) || max(decode(icnt,19,decode(USER_NM,null,'','/'||USER_NM),'') ) || max(decode(icnt,20,decode(USER_NM,null,'','/'||USER_NM),'') ) ||
		                   max(decode(icnt,21,decode(USER_NM,null,'','/'||USER_NM),'') ) ||  max(decode(icnt,22,decode(USER_NM,null,'','/'||USER_NM),'') ) || max(decode(icnt,23,decode(USER_NM,null,'','/'||USER_NM),'') ) || max(decode(icnt,24,decode(USER_NM,null,'','/'||USER_NM),'') ) || max(decode(icnt,25,decode(USER_NM,null,'','/'||USER_NM),'') ) ||
		                   max(decode(icnt,26,decode(USER_NM,null,'','/'||USER_NM),'') ) ||  max(decode(icnt,27,decode(USER_NM,null,'','/'||USER_NM),'') ) || max(decode(icnt,28,decode(USER_NM,null,'','/'||USER_NM),'') ) || max(decode(icnt,29,decode(USER_NM,null,'','/'||USER_NM),'') ) || max(decode(icnt,30,decode(USER_NM,null,'','/'||USER_NM),'') )  as data1
		            from (
		                   select INTG_TEST_ID, USER_NM,  RANK() OVER (PARTITION BY INTG_TEST_ID ORDER BY USER_NM) as icnt
		                   from
		                      (
		                      select DISTINCT
		                             ai1.USER_NM || '['|| bt.TEST_ID ||']' as USER_NM,
		                             bt.INTG_TEST_ID
		                       from  COINTGTDT bt
		                            ,CCUSRDPHT ai1
		                      where bt.TEST_ID = ai1.USER_ID(+)
		                        and bt.TEST_ID is not null
		                        and nvl(bt.DLTN_YN,'N') = 'N'
		                        and bt.INTG_TEST_ID =  #{intgTestId} 
		                     )
		                  )
		            group by INTG_TEST_ID
		          ) ax
		      where  amt.INTG_TEST_ID        = adt.INTG_TEST_ID
		        and  amt.INTG_TEST_ID        = ax.INTG_TEST_ID(+)
		        and  ac1.COMN_GRP_CD(+)      = 'COR_042'
		        and  amt.TEST_PSBL_DVSN_CD   = ac1.COMN_DTLS_CD(+)
		        and  ac2.COMN_GRP_CD(+)      = 'COR_025'
		        and  substr(amt.PRJT_TISS_CD, 1, 1) = ac2.COMN_DTLS_CD(+)
		        and  ac3.COMN_GRP_CD(+)      = 'COR_025'
		        and  amt.PRJT_TISS_CD        = ac3.COMN_DTLS_CD(+)
		        and  ac41.COMN_GRP_CD(+)      = 'COR_050' and  substr(amt.WG_TISS_CD, 1, 1) = ac41.COMN_DTLS_CD(+)
		        and  ac42.COMN_GRP_CD(+)      = 'COR_050' and  substr(amt.WG_TISS_CD, 1, 2) = ac42.COMN_DTLS_CD(+)
		        and  ac43.COMN_GRP_CD(+)      = 'COR_050' and  substr(amt.WG_TISS_CD, 1, 3) = ac43.COMN_DTLS_CD(+)
		        and  ac44.COMN_GRP_CD(+)      = 'COR_050' and  substr(amt.WG_TISS_CD, 1, 4) = ac44.COMN_DTLS_CD(+)
		        and  ac51.COMN_GRP_CD(+)      = 'COR_025'
		        and  substr(amt.CLBR_SYST_CD, 1, 1) = ac51.COMN_DTLS_CD(+)
		        and  ac52.COMN_GRP_CD(+)      = 'COR_025'
		        and  amt.CLBR_SYST_CD          = ac52.COMN_DTLS_CD(+)
		        and  amt.INTG_TEST_WRTR_ID   = ai1.USER_ID(+)
		        --and  ac6.COMN_GRP_CD(+)      = 'COR_029'
		        --and  amt.CLSN_STTS_CD        = ac6.COMN_DTLS_CD(+)
		        and  ac7.COMN_GRP_CD(+)      = 'COR_041'
		        and  amt.INTG_TEST_DVSN_CD   = ac7.COMN_DTLS_CD(+)
		        and  ac81.COMN_GRP_CD(+)     = 'COR_052'
		        and  amt.INTG_PRJT_CD        = ac81.COMN_DTLS_CD(+)
		        and  ac82.COMN_GRP_CD(+)     = 'COR_053'
		        and  amt.INTG_WG_CD          = ac82.COMN_DTLS_CD(+)
		        and  amt.RPRS_TEST_ID        = ai2.USER_ID(+)
		        and  amt.MNGR_ID             = ai3.USER_ID(+)
		      order by
		              amt.TEST_PSBL_DVSN_CD    --  테스트가능구분코드
		            , amt.PRJT_TISS_CD         --  프로젝트조직코드
		            , amt.WG_TISS_CD                --  워킹그룹코드
		            , amt.INTG_TEST_ID         --  통합테스트ID
		 ]]>
	</select>



</mapper>