<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    SQL File Name : mapper_CcoTbprmmtSummaryDAO_sql.xml 
    Description :                                      통계 계산
                  -->
<mapper namespace="CcoTbprmmtSummaryDAO">


	<resultMap id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevReqSum-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO">
	
		<result property="comnDtlsCd" column="COMN_DTLS_CD"/>
		<result property="detlCdNm" column="DETL_CD_NM"/>
		<result property="comnDtlsCd1" column="COMN_DTLS_CD_1"/>
		<result property="detlCdNm1" column="DETL_CD_NM_1"/>
		<result property="devpAsgnId" column="DEVP_ASGN_ID"/>
		<result property="userNm" column="USER_NM"/>
		<result property="useCqy" column="USE_CQY"/>
		<result property="useCqy1" column="USE_CQY_1"/>
		<result property="useCqy2" column="USE_CQY_2"/>
		<result property="useCqy3" column="USE_CQY_3"/>
		<result property="useCqy4" column="USE_CQY_4"/>
		<result property="useCqy5" column="USE_CQY_5"/>
		<result property="fxngRa" column="FXNG_RA"/>
		<result property="useCqy6" column="USE_CQY_6"/>
		<result property="useCqy7" column="USE_CQY_7"/>
		<result property="useCqy8" column="USE_CQY_8"/>
		<result property="fxngRa1" column="FXNG_RA_1"/>
		<result property="useCqy9" column="USE_CQY_9"/>
		<result property="useCqy10" column="USE_CQY_10"/>
		<result property="useCqy11" column="USE_CQY_11"/>
		<result property="useCqy12" column="USE_CQY_12"/>
		<result property="useCqy13" column="USE_CQY_13"/>
		<result property="fxngRa2" column="FXNG_RA_2"/>
		<result property="useCqy14" column="USE_CQY_14"/>
		<result property="useCqy15" column="USE_CQY_15"/>
		<result property="scrnDsplSqnc" column="SCRN_DSPL_SQNC"/>
		<result property="scrnDsplSqnc1" column="SCRN_DSPL_SQNC_1"/>
		<result property="useCqy16" column="USE_CQY_16"/>
	</resultMap>
	
    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevReqSum (cod_tbprmdt_l06$S01_개발자별 진척현황) 
        Description :                                           cod_tbprmdt_l06$S01_개발자별 진척현황
                                            
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO
		resultMap : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevReqSum-result
    -->
	<select id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevReqSum"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO"  resultMap="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevReqSum-result" useCache="true" flushCache="false">
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevReqSum */
		<![CDATA[   
		    select  /*+ cod_tbprmdt_l06$S01_개발자별 진척현황 */ 
		              xa.COMN_DTLS_CD
		            , xa.DETL_CD_NM
		            , xa.COMN_DTLS_CD_1
		            , xa.DETL_CD_NM_1
		            , xb.DEVP_ASGN_ID
		            , xbb.USER_NM
		            , xb.A01 as USE_CQY
		            , xb.A02 as USE_CQY_1
		            , xb.A03 as USE_CQY_2
		            , xc.TOT as USE_CQY_3
		            , xc.FINAL_COUNT as USE_CQY_4
		            , xc.TOT - xc.FINAL_COUNT as USE_CQY_5
		            , trunc((xc.FINAL_COUNT / xc.TOT) * 100, 1) as FXNG_RA
		            , nvl(xd.TOT, 0) as USE_CQY_6
		            , nvl(xd.FINAL_COUNT, 0) as USE_CQY_7
		            , xd.TOT - xd.FINAL_COUNT AS USE_CQY_8
		            , decode(xd.TOT, null, 0, trunc((xd.FINAL_COUNT / xd.TOT) * 100, 1)) as  FXNG_RA_1
		            , xe.FINAL_COUNT as USE_CQY_9
		            , xf.FINAL_COUNT as USE_CQY_10
		            , nvl(xg.FINAL_COUNT, 0) as USE_CQY_11
		            , xh.FINAL_COUNT as USE_CQY_12
		            , xd.TOT - xg.FINAL_COUNT as USE_CQY_13
		            , decode(xd.TOT, null, 0, trunc((xg.FINAL_COUNT / xd.TOT) * 100, 1)) as  FXNG_RA_2
		            , xi.PLAN_CNT as USE_CQY_14
		            , xj.PLAN_CNT as USE_CQY_15
		            , xa.SCRN_DSPL_SQNC
		            , xa.SCRN_DSPL_SQNC_1
		            , xk.FINAL_COUNT as USE_CQY_16
		    from    ( select  a.COMN_DTLS_CD
		                    , a.DETL_CD_NM
		                    , a.SCRN_DSPL_SQNC
		                    , b.COMN_DTLS_CD as COMN_DTLS_CD_1
		                    , b.DETL_CD_NM   as DETL_CD_NM_1
		                    , b.SCRN_DSPL_SQNC  as SCRN_DSPL_SQNC_1
		              from    CCCMCDDMT a
		                    , CCCMCDDMT b
		              where   a.COMN_GRP_CD  = 'COR_025'
		                and   Length(a.COMN_DTLS_CD) = 1
		                and   b.COMN_GRP_CD  = 'COR_025'
		                and   Length(b.COMN_DTLS_CD) = 2
		                and   a.COMN_DTLS_CD = substr(b.COMN_DTLS_CD, 1, 1)
		                and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || b.COMN_DTLS_CD || '%'))
		                and   ((nvl( #{afiSrchDvsnVl} , '*') = '*') or (( #{afiSrchDvsnVl}  = 'Q') and (b.COMN_DTLS_CD <> 'SQ')))
		            ) xa    /* 시스템 정보  */
		          , ( select  ta.PRJT_TISS_CD
		                    , ta.DEVP_ASGN_ID
		                    , sum(ta.A01) as A01
		                    , sum(ta.A02) as A02
		                    , sum(ta.A03) as A03
		              from    ( select  PRJT_TISS_CD
		                              , DEVP_ASGN_ID
		                              , sum(decode(PRGM_TYP_CD, 'A01', 1, 0)) as A01
		                              , sum(decode(PRGM_TYP_CD, 'A02', 1, 0)) as A02
		                              , sum(decode(PRGM_TYP_CD, 'A03', 1, 0)) as A03
		                        from    COTBPRMMT
		                        where   PRJT_TISS_CD is not null
		                          and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || PRJT_TISS_CD || '%'))
		                          and   ((nvl( #{devpAsgnId} , '*') = '*') or (DEVP_ASGN_ID =  #{devpAsgnId} ))
		                          and   nvl(DLTN_YN, 'N') <> 'Y'
		                          and   (((nvl( #{afiSrchYn} , '*') = '*') and (PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                 (( #{afiSrchYn}  = 'Y') and (PRGM_TYP_CD = 'A05')))
		                          and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(PROR_BASE_CD, 'N') = 'L1'))
		                        group by PRJT_TISS_CD
		                               , DEVP_ASGN_ID
		                        union
		                        select  b.PRJT_TISS_CD
		                              , b.DEVP_ASGN_ID
		                              , 0 as A01
		                              , 0 as A02
		                              , 0 as A03
		                        from    COTBPRMMT a
		                              , COTBPRMDT b
		                        where   a.PRGM_ID = b.PRGM_ID
		                          and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                          and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                          and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || a.PRJT_TISS_CD || '%'))
		                          and   ((nvl( #{devpAsgnId} , '*') = '*') or (b.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                          and   (((nvl( #{afiSrchYn} , '*') = '*') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                 (( #{afiSrchYn}  = 'Y') and (a.PRGM_TYP_CD = 'A05')))
		                          and   ((nvl( #{prorBaseCd} , '*') = '*') or  (nvl(b.PROR_BASE_CD, 'N') = 'L1')
		                                )
		                          and   trunc(nvl(b.DVLR_TEST_FNSH_YMD,to_date('20151116', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd')
		                        group by b.PRJT_TISS_CD, b.DEVP_ASGN_ID
		                      ) ta
		              group by  ta.PRJT_TISS_CD
		                      , ta.DEVP_ASGN_ID
		            ) xb   /* 개발모수  */
		          , CCUSRDPHT xbb
		          , ( select  tb.PRJT_TISS_CD
		                    , tb.DEVP_ASGN_ID
		                    , count(*) as TOT
		                    , sum(tb.FINAL_CHECK) as FINAL_COUNT
		              from    ( select ta.PRJT_TISS_CD
		                             , ta.PRGM_ID
		                             , ta.DEVP_ASGN_ID
		                             , decode(sum(ta.CHECK_NULL), 0 , 0, decode(sum(ta.STTS_CHECK), 0, 1, 0)) as FINAL_CHECK
		                        from   ( select  a.PRJT_TISS_CD
		                                       , a.PRGM_ID
		                                       , a.DEVP_ASGN_ID
		                                       , decode(b.FNCT_ID, null, 0, 1) as CHECK_NULL
		                                       , decode(b.CRNT_STTS_CD, '4', 0, '5', 0, '6', 0, 1) as STTS_CHECK
		                                 from    COTBPRMMT a
		                                       , COTBPRMDT b
		                                 where   a.PRGM_ID = b.PRGM_ID(+)
		                                   and   nvl(b.DLTN_YN(+), 'N') <> 'Y'
		                                   and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                                   and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || a.PRJT_TISS_CD || '%'))
		                                   and   ((nvl( #{devpAsgnId} , '*') = '*') or (a.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                                   and   (((nvl( #{afiSrchYn} , '*') = '*') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                          (( #{afiSrchYn}  = 'Y') and (a.PRGM_TYP_CD = 'A05')))
		                                   and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(a.PROR_BASE_CD, 'N') = 'L1')
		                                         )
		                                   and   trunc(nvl(b.DVLR_TEST_FNSH_YMD,to_date('20151116', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd')
		                               ) ta
		                        group by ta.PRJT_TISS_CD
		                               , ta.PRGM_ID
		                               , ta.DEVP_ASGN_ID
		                      ) tb
		              group by tb.PRJT_TISS_CD, tb.DEVP_ASGN_ID
		            ) xc  /* 프로그램 진척  */
		          , ( select  tb.PRJT_TISS_CD
		                    , tb.DEVP_ASGN_ID
		                    , count(*) as TOT
		                    , sum(tb.STTS_CHECK) as FINAL_COUNT
		              from    ( select  b.PRJT_TISS_CD
		                              , b.DEVP_ASGN_ID
		                              , decode(b.CRNT_STTS_CD, '4', 1, '5', 1, '6', 1, 0) as STTS_CHECK
		                        from    COTBPRMMT a
		                              , COTBPRMDT b
		                        where   a.PRGM_ID = b.PRGM_ID
		                          and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                          and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                          and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || b.PRJT_TISS_CD || '%'))
		                          and   ((nvl( #{devpAsgnId} , '*') = '*') or (b.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                          and   (((nvl( #{afiSrchYn} , '*') = '*') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                 (( #{afiSrchYn}  = 'Y') and (a.PRGM_TYP_CD = 'A05')))
		                          and   ((nvl( #{prorBaseCd} , '*') = '*') or  (nvl(b.PROR_BASE_CD, 'N') = 'L1')
		                                )
		                          and   trunc(nvl(b.DVLR_TEST_FNSH_YMD,to_date('20151116', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd')
		                      ) tb
		              group by tb.PRJT_TISS_CD, tb.DEVP_ASGN_ID
		            ) xd  /* 개발실적(테스트 기준)  */
		          , ( select  tb.PRJT_TISS_CD
		                    , tb.DEVP_ASGN_ID
		                    , sum(tb.STTS_CHECK) as FINAL_COUNT
		              from    ( select  b.PRJT_TISS_CD
		                              , b.DEVP_ASGN_ID
		                              , decode(b.CRNT_STTS_CD, '4', 1, '5', 1, '6', 1, 0) as STTS_CHECK
		                        from    COTBPRMMT a
		                              , COTBPRMDT b
		                        where   a.PRGM_ID = b.PRGM_ID
		                          and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                          and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                          and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || b.PRJT_TISS_CD || '%'))
		                          and   ((nvl( #{devpAsgnId} , '*') = '*') or (b.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                          and   (((nvl( #{afiSrchYn} , '*') = '*') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                 (( #{afiSrchYn}  = 'Y') and (a.PRGM_TYP_CD = 'A05')))
		                          and   ((nvl( #{prorBaseCd} , '*') = '*') or  (nvl(b.PROR_BASE_CD, 'N') = 'L1')
		                                )
		                          and   ((trunc(nvl(b.DVLR_TEST_FNSH_YMD, to_date('20150101', 'yyyymmdd')) ) > to_date('20151115', 'yyyymmdd')) and
		                                 (trunc(nvl(b.DVLR_TEST_FNSH_YMD,to_date('29991231', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd'))
		                                )
		                      ) tb
		              group by tb.PRJT_TISS_CD, tb.DEVP_ASGN_ID
		            ) xe  /* 개발실적(테스트 기준) 생산성 기준 완료  */
		          , ( select  tb.PRJT_TISS_CD
		                    , tb.DEVP_ASGN_ID
		                    , count(*) as TOT
		                    , sum(tb.STTS_CHECK) as FINAL_COUNT
		              from    ( select  b.PRJT_TISS_CD
		                              , b.DEVP_ASGN_ID
		                              , decode(b.CRNT_STTS_CD, '4', 1, '5', 1, '6', 1, 0) as STTS_CHECK
		                        from    COTBPRMMT a
		                              , COTBPRMDT b
		                        where   a.PRGM_ID = b.PRGM_ID
		                          and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                          and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                          and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || b.PRJT_TISS_CD || '%'))
		                          and   ((nvl( #{devpAsgnId} , '*') = '*') or (b.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                          and   (((nvl( #{afiSrchYn} , '*') = '*') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                 (( #{afiSrchYn}  = 'Y') and (a.PRGM_TYP_CD = 'A05')))
		                          and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(b.PROR_BASE_CD, 'N') = 'L1')
		                                )
		                          and   trunc(nvl(b.DVLR_TEST_FNSH_YMD,to_date('29991231', 'yyyymmdd'))) = to_date( #{baseYmd} , 'yyyymmdd')
		                      ) tb
		              group by tb.PRJT_TISS_CD, tb.DEVP_ASGN_ID
		            ) xf   /* 개발실적(테스트 기준) 당일실적  */
		          , ( select  tb.PRJT_TISS_CD
		                    , tb.DEVP_ASGN_ID
		                    , count(*) as TOT
		                    , sum(tb.STTS_CHECK) as FINAL_COUNT
		              from    ( select  b.PRJT_TISS_CD
		                              , b.DEVP_ASGN_ID
		                              , decode(b.CRNT_STTS_CD, '3', 1, '4', 1, '5', 1, '6', 1, 0) as STTS_CHECK
		                        from    COTBPRMMT a
		                              , COTBPRMDT b
		                        where   a.PRGM_ID = b.PRGM_ID
		                          and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                          and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                          and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || b.PRJT_TISS_CD || '%'))
		                          and   ((nvl( #{devpAsgnId} , '*') = '*') or (b.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                          and   (((nvl( #{afiSrchYn} , '*') = '*') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                 (( #{afiSrchYn}  = 'Y') and (a.PRGM_TYP_CD = 'A05')))
		                          and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(b.PROR_BASE_CD, 'N') = 'L1')
		                                )
		                          and   trunc(nvl(b.ACRL_FNSH_YMD,to_date('20151116', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd')
		                      ) tb
		              group by tb.PRJT_TISS_CD, tb.DEVP_ASGN_ID
		            ) xg  /* 개발실적(코딩기준)  */
		          , ( select  tb.PRJT_TISS_CD
		                    , tb.DEVP_ASGN_ID
		                    , count(*) as TOT
		                    , sum(tb.STTS_CHECK) as FINAL_COUNT
		              from    ( select  b.PRJT_TISS_CD
		                              , b.DEVP_ASGN_ID
		                              , decode(b.CRNT_STTS_CD, '3', 1, '4', 1, '5', 1, '6', 1, 0) as STTS_CHECK
		                        from    COTBPRMMT a
		                              , COTBPRMDT b
		                        where   a.PRGM_ID = b.PRGM_ID
		                          and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                          and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                          and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || b.PRJT_TISS_CD || '%'))
		                          and   ((nvl( #{devpAsgnId} , '*') = '*') or (b.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                          and   (((nvl( #{afiSrchYn} , '*') = '*') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                 (( #{afiSrchYn}  = 'Y') and (a.PRGM_TYP_CD = 'A05')))
		                          and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(b.PROR_BASE_CD, 'N') = 'L1')
		                                )
		                          and   trunc(nvl(b.ACRL_FNSH_YMD,to_date('29991231', 'yyyymmdd'))) = to_date( #{baseYmd} , 'yyyymmdd')
		                      ) tb
		              group by tb.PRJT_TISS_CD, tb.DEVP_ASGN_ID
		            ) xh  /* 개발실적(코딩기준) 당일실적  */
		          , ( select  b.PRJT_TISS_CD
		                    , b.DEVP_ASGN_ID
		                    , count(*) as PLAN_CNT
		              from    COTBPRMMT a
		                    , COTBPRMDT b
		              where   a.PRGM_ID = b.PRGM_ID
		                and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || b.PRJT_TISS_CD || '%'))
		                and   ((nvl( #{devpAsgnId} , '*') = '*') or (b.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                and   (((nvl( #{afiSrchYn} , '*') = '*') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                       (( #{afiSrchYn}  = 'Y') and (a.PRGM_TYP_CD = 'A05')))
		                and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(b.PROR_BASE_CD, 'N') = 'L1')
		                      )
		                and   trunc(nvl(b.PLAN_FNSH_YMD,to_date('29991231', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd')
		              group by b.PRJT_TISS_CD, b.DEVP_ASGN_ID
		            ) xi  /* 개발실적(코딩기준) 누적계획  */
		          , ( select  b.PRJT_TISS_CD
		                    , b.DEVP_ASGN_ID
		                    , count(*) as PLAN_CNT
		              from    COTBPRMMT a
		                    , COTBPRMDT b
		              where   a.PRGM_ID = b.PRGM_ID
		                and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || b.PRJT_TISS_CD || '%'))
		                and   ((nvl( #{devpAsgnId} , '*') = '*') or (b.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                and   (((nvl( #{afiSrchYn} , '*') = '*') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                       (( #{afiSrchYn}  = 'Y') and (a.PRGM_TYP_CD = 'A05')))
		                and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(b.PROR_BASE_CD, 'N') = 'L1')
		                      )
		                and   trunc(nvl(b.DVLR_TEST_PLAN_YMD,to_date('29991231', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd')
		              group by b.PRJT_TISS_CD, b.DEVP_ASGN_ID
		            ) xj  /* 개발실적(테스트기준) 누적계획  */
		          , ( select  tb.PRJT_TISS_CD
		                     , tb.DEVP_ASGN_ID
		                     , sum(tb.STTS_CHECK) as FINAL_COUNT
		               from    ( select  b.PRJT_TISS_CD
		                               , b.DEVP_ASGN_ID
		                               , decode(b.CRNT_STTS_CD, '4', 1, '5', 1, '6', 1, 0) as STTS_CHECK
		                         from    COTBPRMMT a
		                               , COTBPRMDT b
		                         where   a.PRGM_ID = b.PRGM_ID
		                           and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                           and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                           and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || b.PRJT_TISS_CD || '%'))
		                           and   ((nvl( #{devpAsgnId} , '*') = '*') or (b.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                           and   (((nvl( #{afiSrchYn} , '*') = '*') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                  (( #{afiSrchYn}  = 'Y') and (a.PRGM_TYP_CD = 'A05')))
		                           and   ((nvl( #{prorBaseCd} , '*') = '*') or  (nvl(b.PROR_BASE_CD, 'N') = 'L1')
		                                 )
		                           and   ((trunc(nvl(b.ACRL_FNSH_YMD, to_date('20150101', 'yyyymmdd')) ) > to_date('20151115', 'yyyymmdd')) and
		                                  (trunc(nvl(b.ACRL_FNSH_YMD,to_date('29991231', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd'))
		                                 )
		                       ) tb
		               group by tb.PRJT_TISS_CD, tb.DEVP_ASGN_ID
		             ) xk  /* 개발실적(코딩 기준) 생산성 기준 완료  */
		    where   xa.COMN_DTLS_CD_1 = xb.PRJT_TISS_CD
		      and   xb.DEVP_ASGN_ID   = xbb.USER_ID(+)
		      and   xb.PRJT_TISS_CD   = xc.PRJT_TISS_CD(+)
		      and   xb.DEVP_ASGN_ID   = xc.DEVP_ASGN_ID(+)
		      and   xb.PRJT_TISS_CD   = xd.PRJT_TISS_CD(+)
		      and   xb.DEVP_ASGN_ID   = xd.DEVP_ASGN_ID(+)
		      and   xb.PRJT_TISS_CD   = xe.PRJT_TISS_CD(+)
		      and   xb.DEVP_ASGN_ID   = xe.DEVP_ASGN_ID(+)
		      and   xb.PRJT_TISS_CD   = xf.PRJT_TISS_CD(+)
		      and   xb.DEVP_ASGN_ID   = xf.DEVP_ASGN_ID(+)
		      and   xb.PRJT_TISS_CD   = xg.PRJT_TISS_CD(+)
		      and   xb.DEVP_ASGN_ID   = xg.DEVP_ASGN_ID(+)
		      and   xb.PRJT_TISS_CD   = xh.PRJT_TISS_CD(+)
		      and   xb.DEVP_ASGN_ID   = xh.DEVP_ASGN_ID(+)
		      and   xb.PRJT_TISS_CD   = xi.PRJT_TISS_CD(+)
		      and   xb.DEVP_ASGN_ID   = xi.DEVP_ASGN_ID(+)
		      and   xb.PRJT_TISS_CD   = xj.PRJT_TISS_CD(+)
		      and   xb.DEVP_ASGN_ID   = xj.DEVP_ASGN_ID(+)
		      and   xb.PRJT_TISS_CD   = xk.PRJT_TISS_CD(+)
		      and   xb.DEVP_ASGN_ID   = xk.DEVP_ASGN_ID(+)
		    order by xa.SCRN_DSPL_SQNC, xa.SCRN_DSPL_SQNC_1
		]]>
	</select>




	<resultMap id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listProgDevelSelectList-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO">
	
		<result property="comnDtlsCd" column="COMN_DTLS_CD"/>
		<result property="detlCdNm" column="DETL_CD_NM"/>
		<result property="comnDtlsCd1" column="COMN_DTLS_CD_1"/>
		<result property="detlCdNm1" column="DETL_CD_NM_1"/>
		<result property="useCqy" column="USE_CQY"/>
		<result property="useCqy1" column="USE_CQY_1"/>
		<result property="useCqy2" column="USE_CQY_2"/>
		<result property="useCqy3" column="USE_CQY_3"/>
		<result property="useCqy4" column="USE_CQY_4"/>
		<result property="useCqy5" column="USE_CQY_5"/>
		<result property="fxngRa" column="FXNG_RA"/>
		<result property="useCqy6" column="USE_CQY_6"/>
		<result property="useCqy7" column="USE_CQY_7"/>
		<result property="fxngRa1" column="FXNG_RA_1"/>
		<result property="useCqy8" column="USE_CQY_8"/>
		<result property="useCqy9" column="USE_CQY_9"/>
		<result property="fxngRa2" column="FXNG_RA_2"/>
		<result property="useCqy10" column="USE_CQY_10"/>
		<result property="useCqy11" column="USE_CQY_11"/>
		<result property="useCqy12" column="USE_CQY_12"/>
		<result property="useCqy13" column="USE_CQY_13"/>
		<result property="useCqy14" column="USE_CQY_14"/>
		<result property="fxngRa3" column="FXNG_RA_3"/>
		<result property="useCqy15" column="USE_CQY_15"/>
		<result property="useCqy16" column="USE_CQY_16"/>
		<result property="useCqy17" column="USE_CQY_17"/>
		<result property="useCqy18" column="USE_CQY_18"/>
	</resultMap>
	
    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listProgDevelSelectList (cod_tbprmmt_l05$S01_개발현황(프로그램별) 조회) 
        Description :                                           cod_tbprmmt_l05$S01_개발현황(프로그램별) 조회
                                            
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO
		resultMap : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listProgDevelSelectList-result
    -->
	<select id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listProgDevelSelectList"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO"  resultMap="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listProgDevelSelectList-result" useCache="true" flushCache="false">
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listProgDevelSelectList */
		<![CDATA[  
		  select  /*+ cod_tbprmmt_l05$S01_개발현황(프로그램별) 조회 */ 
		            xa.COMN_DTLS_CD
		          , xa.DETL_CD_NM
		          , xa.COMN_DTLS_CD_1
		          , xa.DETL_CD_NM_1
		          , xb.A01 as USE_CQY
		          , xb.A02 as USE_CQY_1
		          , xb.A03 as USE_CQY_2
		          , xb.A01 + xb.A02 + xb.A03 + xb.A05 as USE_CQY_3
		          , xc.DEV_FINAL as USE_CQY_4
		          , xc.TOTAL_CNT - xc.DEV_FINAL as USE_CQY_5
		          , decode(xc.TOTAL_CNT, 0, 0, trunc(xc.DEV_FINAL / xc.TOTAL_CNT * 100, 1)) as FXNG_RA
		          , xc.AL_FINAL as USE_CQY_6
		          , xc.DEV_FINAL - xc.AL_FINAL  as USE_CQY_7
		          , decode(xb.A01 + xb.A02 + xb.A03 + xb.A05, 0, 0, trunc(xc.AL_FINAL / (xb.A01 + xb.A02 + xb.A03 + xb.A05) * 100, 1)) as FXNG_RA_1
		          , xd.DEV_FINAL as USE_CQY_8
		          , xd.TOTAL_CNT - xd.DEV_FINAL as USE_CQY_9
		          , decode(xd.TOTAL_CNT, 0, 0, trunc(xd.DEV_FINAL / xd.TOTAL_CNT * 100, 1)) as FXNG_RA_2
		          , xe.PLAN_CNT as USE_CQY_10
		          , xf.PLAN_CNT as USE_CQY_11
		          , xg.PLAN_CNT as USE_CQY_12
		          , xh.PLAN_CNT as USE_CQY_13
		          , xi.PLAN_CNT as USE_CQY_14
		          , 0 as FXNG_RA_3
		          , 0 as USE_CQY_15
		          , 0 as USE_CQY_16
		          , 0 as USE_CQY_17
		          , 0 as USE_CQY_18
		    from    ( select  a.COMN_DTLS_CD
		                    , a.DETL_CD_NM
		                    , a.SCRN_DSPL_SQNC
		                    , b.COMN_DTLS_CD as COMN_DTLS_CD_1
		                    , b.DETL_CD_NM   as DETL_CD_NM_1
		                    , b.SCRN_DSPL_SQNC  as SCRN_DSPL_SQNC_1
		              from    CCCMCDDMT a
		                    , CCCMCDDMT b
		              where   a.COMN_GRP_CD  = 'COR_025'
		                and   Length(a.COMN_DTLS_CD) = 1
		                and   b.COMN_GRP_CD  = 'COR_025'
		                and   Length(b.COMN_DTLS_CD) = 2
		                and   a.COMN_DTLS_CD = substr(b.COMN_DTLS_CD, 1, 1)
		                and   ((nvl( #{afiSrchYn} , '*') = '*') or (( #{afiSrchYn}  = 'Q') and (b.COMN_DTLS_CD <> 'SQ')))
		            ) xa  /* 시스템 정보  */
		         , ( select  PRJT_TISS_CD
		                    , sum(decode(PRGM_TYP_CD, 'A01', 1, 0)) as A01
		                    , sum(decode(PRGM_TYP_CD, 'A02', 1, 0)) as A02
		                    , sum(decode(PRGM_TYP_CD, 'A03', 1, 0)) as A03
		                    , sum(decode(PRGM_TYP_CD, 'A05', 1, 0)) as A05
		              from    COTBPRMMT
		              where   PRJT_TISS_CD is not null
		                and   nvl(DLTN_YN, 'N') <> 'Y'
		                and   ((( #{prgmTypCd}  = '1') and (PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                       (( #{prgmTypCd}  = '2') and (PRGM_TYP_CD = 'A05')))
		                and   ((nvl( #{prncYn} , '*') = '*') or (nvl(PROR_BASE_CD, 'N') = 'L1'))
		              group by PRJT_TISS_CD
		            ) xb  /* 프로그램 수 */
		         , (  select  tta.PRJT_TISS_CD
		                    , sum(tta.DEV_FINAL) as DEV_FINAL
		                    , sum(tta.AL_FINAL) as AL_FINAL
		                    , sum(tta.RE_FINAL) as RE_FINAL
		                    , sum(tta.TOTAL_CNT) as TOTAL_CNT
		              from    ( select  ta.PRJT_TISS_CD
		                              , decode( ta.CRNT_STTS_CD, '4', 1, '5', 1, '6', 1, 0) as DEV_FINAL
		                              , decode( ta.CRNT_STTS_CD, '5', 1, '6', 1, 0) as AL_FINAL
		                              , decode( ta.CRNT_STTS_CD, '6', 1, 0) as RE_FINAL
		                              , 1 as TOTAL_CNT
		                        from  ( select  a.PRJT_TISS_CD
		                                      , a.PRGM_ID
		                                      , nvl(min(b.CRNT_STTS_CD), '1') as CRNT_STTS_CD
		                                from    COTBPRMMT a
		                                      , COTBPRMDT b
		                                where   a.PRGM_ID = b.PRGM_ID(+)
		                                  and   nvl(b.DLTN_YN(+), 'N') <> 'Y'
		                                  and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                                  and   ((( #{prgmTypCd}  = '1') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                         (( #{prgmTypCd}  = '2') and (a.PRGM_TYP_CD = 'A05')))
		                                  and   ((nvl( #{prncYn} , '*') = '*') or (nvl(a.PROR_BASE_CD, 'N') = 'L1')
		                                        )
		                                  and   trunc(nvl(b.DVLR_TEST_FNSH_YMD,to_date('20151116', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd')
		                                group by a.PRJT_TISS_CD
		                                       , a.PRGM_ID
		                              ) ta
		                      ) tta
		              group by  tta.PRJT_TISS_CD
		           ) xc  /* 개발진척(테스트 기준), AL 테스트 진척 */
		         , (  select  tta.PRJT_TISS_CD
		                    , sum(tta.DEV_FINAL) as DEV_FINAL
		                    , sum(tta.TOTAL_CNT) as TOTAL_CNT
		              from    ( select  ta.PRJT_TISS_CD
		                              , decode( ta.CRNT_STTS_CD, '3', 1, '4', 1, '5', 1, '6', 1, 0) as DEV_FINAL
		                              , 1 as TOTAL_CNT
		                        from  ( select  a.PRJT_TISS_CD
		                                      , a.PRGM_ID
		                                      , nvl(min(b.CRNT_STTS_CD), '1') as CRNT_STTS_CD
		                                from    COTBPRMMT a
		                                      , COTBPRMDT b
		                                 where   a.PRGM_ID = b.PRGM_ID(+)
		                                  and   nvl(b.DLTN_YN(+), 'N') <> 'Y'
		                                  and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                                  and   ((( #{prgmTypCd}  = '1') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                         (( #{prgmTypCd}  = '2') and (a.PRGM_TYP_CD = 'A05')))
		                                  and   ((nvl( #{prncYn} , '*') = '*') or (nvl(a.PROR_BASE_CD, 'N') = 'L1')
		                                        )
		                                  and   trunc(nvl(b.ACRL_FNSH_YMD,to_date('20151116', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd')
		                                group by a.PRJT_TISS_CD
		                                       , a.PRGM_ID
		                              ) ta
		                      ) tta
		             group by  tta.PRJT_TISS_CD
		           ) xd  /* 개발진척(코딩기준) */
		         , ( select  ta.PRJT_TISS_CD
		                   , count(*) as PLAN_CNT
		             from    ( select  a.PRJT_TISS_CD
		                             , a.PRGM_ID
		                             , max(nvl(b.PLAN_FNSH_YMD, to_date('29991231', 'yyyymmdd'))) as PLAN_FNSH_YMD
		                       from    COTBPRMMT a
		                             , COTBPRMDT b
		                       where   a.PRGM_ID = b.PRGM_ID(+)
		                         and   nvl(b.DLTN_YN(+), 'N') <> 'Y'
		                         and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                         and   ((( #{prgmTypCd}  = '1') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                (( #{prgmTypCd}  = '2') and (a.PRGM_TYP_CD = 'A05')))
		                         and   ((nvl( #{prncYn} , '*') = '*') or (nvl(a.PROR_BASE_CD, 'N') = 'L1')
		                               )
		                       group by a.PRJT_TISS_CD
		                              , a.PRGM_ID
		                     ) ta
		             where   trunc(ta.PLAN_FNSH_YMD) <= to_date( #{baseYmd} , 'yyyymmdd')
		             group by ta.PRJT_TISS_CD
		           ) xe  /* 개발진척(코딩기준) 누적계획*/
		         , ( select  ta.PRJT_TISS_CD
		                   , count(*) as PLAN_CNT
		             from    ( select  a.PRJT_TISS_CD
		                             , a.PRGM_ID
		                             , max(nvl(b.DVLR_TEST_PLAN_YMD, to_date('29991231', 'yyyymmdd'))) as DVLR_TEST_PLAN_YMD
		                       from    COTBPRMMT a
		                             , COTBPRMDT b
		                       where   a.PRGM_ID = b.PRGM_ID(+)
		                         and   nvl(b.DLTN_YN(+), 'N') <> 'Y'
		                         and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                         and   ((( #{prgmTypCd}  = '1') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                (( #{prgmTypCd}  = '2') and (a.PRGM_TYP_CD = 'A05')))
		                         and   ((nvl( #{prncYn} , '*') = '*') or (nvl(a.PROR_BASE_CD, 'N') = 'L1')
		                               )
		                       group by a.PRJT_TISS_CD
		                              , a.PRGM_ID
		                     ) ta
		             where   trunc(ta.DVLR_TEST_PLAN_YMD) <= to_date( #{baseYmd} , 'yyyymmdd')
		             group by ta.PRJT_TISS_CD
		           ) xf /* 개발진척(테스트 기준), AL 테스트 진척 누적계획 */
		         , ( select  ta.PRJT_TISS_CD
		                   , count(*) as PLAN_CNT
		             from    ( select  a.PRJT_TISS_CD
		                             , a.PRGM_ID
		                             , max(nvl(b.ACRL_FNSH_YMD, to_date('29991231', 'yyyymmdd'))) as ACRL_FNSH_YMD
		                       from    COTBPRMMT a
		                             , COTBPRMDT b
		                       where   a.PRGM_ID = b.PRGM_ID(+)
		                         and   nvl(b.DLTN_YN(+), 'N') <> 'Y'
		                         and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                         and   ((( #{prgmTypCd}  = '1') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                (( #{prgmTypCd}  = '2') and (a.PRGM_TYP_CD = 'A05')))
		                         and   ((nvl( #{prncYn} , '*') = '*') or (nvl(a.PROR_BASE_CD, 'N') = 'L1')
		                               )
		                       group by a.PRJT_TISS_CD
		                              , a.PRGM_ID
		                     ) ta
		             where   trunc(ta.ACRL_FNSH_YMD) = to_date( #{baseYmd} , 'yyyymmdd')
		             group by ta.PRJT_TISS_CD
		           ) xg  /* 개발진척(코딩기준) 당일실적 */
		         , ( select  ta.PRJT_TISS_CD
		                   , count(*) as PLAN_CNT
		             from    ( select  a.PRJT_TISS_CD
		                             , a.PRGM_ID
		                             , max(nvl(b.DVLR_TEST_FNSH_YMD, to_date('29991231', 'yyyymmdd'))) as DVLR_TEST_FNSH_YMD
		                       from    COTBPRMMT a
		                             , COTBPRMDT b
		                       where   a.PRGM_ID = b.PRGM_ID(+)
		                         and   nvl(b.DLTN_YN(+), 'N') <> 'Y'
		                         and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                         and   ((( #{prgmTypCd}  = '1') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                (( #{prgmTypCd}  = '2') and (a.PRGM_TYP_CD = 'A05')))
		                         and   ((nvl( #{prncYn} , '*') = '*') or (nvl(a.PROR_BASE_CD, 'N') = 'L1')
		                               )
		                       group by a.PRJT_TISS_CD
		                              , a.PRGM_ID
		                     ) ta
		             where   trunc(ta.DVLR_TEST_FNSH_YMD) = to_date( #{baseYmd} , 'yyyymmdd')
		             group by ta.PRJT_TISS_CD
		           ) xh  /* 개발진척(테스트기준) 당일실적 */
		         , ( select  ta.PRJT_TISS_CD
		                   , count(*) as PLAN_CNT
		             from    ( select  a.PRJT_TISS_CD
		                             , a.PRGM_ID
		                             , max(nvl(b.MNGR_REVW_FINS_DT, to_date('29991231', 'yyyymmdd'))) as MNGR_REVW_FINS_DT
		                       from    COTBPRMMT a
		                             , COTBPRMDT b
		                       where   a.PRGM_ID = b.PRGM_ID
		                         and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                         and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                         and   ((( #{prgmTypCd}  = '1') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                (( #{prgmTypCd}  = '2') and (a.PRGM_TYP_CD = 'A05')))
		                         and   ((nvl( #{prncYn} , '*') = '*') or (nvl(a.PROR_BASE_CD, 'N') = 'L1')
		                               )
		                       group by a.PRJT_TISS_CD
		                              , a.PRGM_ID
		                     ) ta
		             where   trunc(ta.MNGR_REVW_FINS_DT) = to_date( #{baseYmd} , 'yyyymmdd')
		             group by ta.PRJT_TISS_CD
		           ) xi  /* 개발진척(테스트기준) AL당일실적 */
		    where   xa.COMN_DTLS_CD_1 = xb.PRJT_TISS_CD
		      and   xa.COMN_DTLS_CD_1 = xc.PRJT_TISS_CD(+)
		      and   xa.COMN_DTLS_CD_1 = xd.PRJT_TISS_CD(+)
		      and   xa.COMN_DTLS_CD_1 = xe.PRJT_TISS_CD(+)
		      and   xa.COMN_DTLS_CD_1 = xf.PRJT_TISS_CD(+)
		      and   xa.COMN_DTLS_CD_1 = xg.PRJT_TISS_CD(+)
		      and   xa.COMN_DTLS_CD_1 = xh.PRJT_TISS_CD(+)
		      and   xa.COMN_DTLS_CD_1 = xi.PRJT_TISS_CD(+)
		    order by xa.SCRN_DSPL_SQNC, xa.SCRN_DSPL_SQNC_1
		]]>
	</select>




	<resultMap id="listTbprmmtDevelTestom-sds-healthlistTbprmmtDevelTestare-ehr-listTbprmmtDevelTestom-listTbprmmtDevelTestlistTbprmmtDevelTest-listTbprmmtDevelTestlistTbprmmtDevelTesto-dao-ClistTbprmmtDevelTestoTbprmmtSummaryDAO-listTbprmmtDevelTest-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO">
	
		<result property="comnDtlsCd" column="COMN_DTLS_CD"/>
		<result property="detlCdNm" column="DETL_CD_NM"/>
		<result property="comnDtlsCd1" column="COMN_DTLS_CD_1"/>
		<result property="detlCdNm1" column="DETL_CD_NM_1"/>
		<result property="useCqy" column="USE_CQY"/>
		<result property="useCqy1" column="USE_CQY_1"/>
		<result property="useCqy2" column="USE_CQY_2"/>
		<result property="useCqy3" column="USE_CQY_3"/>
		<result property="useCqy4" column="USE_CQY_4"/>
		<result property="useCqy5" column="USE_CQY_5"/>
		<result property="useCqy6" column="USE_CQY_6"/>
		<result property="useCqy7" column="USE_CQY_7"/>
		<result property="fxngRa" column="FXNG_RA"/>
		<result property="useCqy8" column="USE_CQY_8"/>
		<result property="useCqy9" column="USE_CQY_9"/>
		<result property="useCqy10" column="USE_CQY_10"/>
		<result property="useCqy11" column="USE_CQY_11"/>
		<result property="fxngRa1" column="FXNG_RA_1"/>
		<result property="useCqy12" column="USE_CQY_12"/>
		<result property="useCqy13" column="USE_CQY_13"/>
		<result property="useCqy14" column="USE_CQY_14"/>
		<result property="useCqy15" column="USE_CQY_15"/>
		<result property="fxngRa2" column="FXNG_RA_2"/>
		<result property="useCqy16" column="USE_CQY_16"/>
		<result property="useCqy17" column="USE_CQY_17"/>
		<result property="useCqy18" column="USE_CQY_18"/>
		<result property="useCqy19" column="USE_CQY_19"/>
		<result property="fxngRa3" column="FXNG_RA_3"/>
		<result property="useCqy20" column="USE_CQY_20"/>
		<result property="useCqy21" column="USE_CQY_21"/>
		<result property="useCqy22" column="USE_CQY_22"/>
		<result property="useCqy23" column="USE_CQY_23"/>
	</resultMap>
	
    <!--
        SQL Name : listTbprmmtDevelTestom-sds-healthlistTbprmmtDevelTestare-ehr-listTbprmmtDevelTestom-listTbprmmtDevelTestlistTbprmmtDevelTest-listTbprmmtDevelTestlistTbprmmtDevelTesto-dao-ClistTbprmmtDevelTestoTbprmmtSummaryDAO-listTbprmmtDevelTest (cod_mtestmt_l02 테스트 진척현황(프로그램기준)) 
        Description :                                           cod_mtestmt_l02 테스트 진척현황(프로그램기준)
                                            
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO
		resultMap : listTbprmmtDevelTestom-sds-healthlistTbprmmtDevelTestare-ehr-listTbprmmtDevelTestom-listTbprmmtDevelTestlistTbprmmtDevelTest-listTbprmmtDevelTestlistTbprmmtDevelTesto-dao-ClistTbprmmtDevelTestoTbprmmtSummaryDAO-listTbprmmtDevelTest-result
    -->
	<select id="listTbprmmtDevelTestom-sds-healthlistTbprmmtDevelTestare-ehr-listTbprmmtDevelTestom-listTbprmmtDevelTestlistTbprmmtDevelTest-listTbprmmtDevelTestlistTbprmmtDevelTesto-dao-ClistTbprmmtDevelTestoTbprmmtSummaryDAO-listTbprmmtDevelTest"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO"  resultMap="listTbprmmtDevelTestom-sds-healthlistTbprmmtDevelTestare-ehr-listTbprmmtDevelTestom-listTbprmmtDevelTestlistTbprmmtDevelTest-listTbprmmtDevelTestlistTbprmmtDevelTesto-dao-ClistTbprmmtDevelTestoTbprmmtSummaryDAO-listTbprmmtDevelTest-result" useCache="true" flushCache="false">
		/*SQL_ID: listTbprmmtDevelTestom-sds-healthlistTbprmmtDevelTestare-ehr-listTbprmmtDevelTestom-listTbprmmtDevelTestlistTbprmmtDevelTest-listTbprmmtDevelTestlistTbprmmtDevelTesto-dao-ClistTbprmmtDevelTestoTbprmmtSummaryDAO-listTbprmmtDevelTest */
		<![CDATA[
		 with zc
		    as ( select
		                   tta.PRGM_ID
		           from    ( select  ta.PRGM_ID
		                           , sum(decode(ta.TEST_ST, 0, 1, 0)) as NOWORK       /* 미수행 */
		                           , sum(decode(ta.TEST_ST, 1, 1, 0)) as BEWORK       /* 수행중 */
		                           , sum(decode(ta.TEST_ST, 2, 1, 0)) as FINALWORK    /* 완료   */
		                           , sum(decode(ta.TEST_ST, 3, 1, 0)) as ERRORCNT     /* 수행오류 */
		                     from    ( select  xa.PRGM_ID
		                                     , xa.TEST_ASGN_ID
		                                     , case when (xa.T1 + xa.T2 + xa.T3) = 0 then 0                      /* 미수행   */
		                                            when ((xa.T1 + xa.T2 + xa.T3) > 0) and (xa.T0 > 0 ) then 1   /* 수행중   */
		                                            when ((xa.T1 + xa.T2) > 0) and (xa.T0 = 0 ) then 2           /* 완료     */
		                                            when ((xa.T0 + xa.T1 + xa.T2) = 0) and (xa.T3 > 0 ) then 3   /* 수행오류 */
		                                       end as TEST_ST
		                               from    ( select  /*+ use_hash(a b) */
		                                                 a.PRGM_ID
		                                               , a.TEST_ASGN_ID
		                                               , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T0', 1, 0)), 0) as T0
		                                               , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T1', 1, 0)), 0) as T1
		                                               , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T2', 1, 0)), 0) as T2
		                                               , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T3', 1, 0)), 0) as T3
		                                         from    ( select   /*+ use_hash(sc sa) */
		                                                            sa.PRGM_ID
		                                                          , sa.TEST_STEP_CD
		                                                          , sa.TEST_ASGN_ID
		                                                          , sb.FNCT_ID
		                                                   from     COMTESTDT sa
		                                                          , COTBPRMDT sb
		                                                          , COMTESTMT sc
		                                                   where    nvl(sa.DLTN_YN, 'N') <> 'Y'
		                                                     and    nvl(sb.DLTN_YN, 'N') <> 'Y'
		                                                     and    nvl(sb.DSCS_YN, 'N') = 'Y'
		                                                     and    sa.PRGM_ID      = sb.PRGM_ID
		                                                     and    sa.TEST_STEP_CD =  #{testStepCd} 
		                                                     and    sa.PRGM_ID      = sc.PRGM_ID
		                                                     and    sa.TEST_STEP_CD = sc.TEST_STEP_CD
		                                                     and    nvl(sc.DLTN_YN, 'N') <> 'Y'
		                                                     and    nvl(sc.TEST_PSBL_TRGT_YN, '1') <> '2'
		                                                  ) a
		                                               , COTSTERMT b
		                                         where   a.PRGM_ID      = b.PRGM_ID(+)
		                                           and   a.TEST_STEP_CD = b.TEST_STEP_CD(+)
		                                           and   a.TEST_ASGN_ID = b.TEST_ASGN_ID(+)
		                                           and   a.FNCT_ID      = b.FNCT_ID(+)
		                                           and   nvl(b.DLTN_YN(+), 'N') <> 'Y'
		                                         group by a.PRGM_ID
		                                                , a.TEST_ASGN_ID
		                                       ) xa
		                             ) ta
		                     group by ta.PRGM_ID
		                   ) tta
		           where   ((tta.NOWORK + tta.BEWORK) = 0)
		             and   (tta.FINALWORK > 0 )
		         )
		        select  /*+ cod_mtestmt_l02$S01_[비대상]테스트 진척현황(프로그램기준) */
		                 xa.COMN_DTLS_CD
		               , xa.DETL_CD_NM
		               , xa.COMN_DTLS_CD_1
		               , xa.DETL_CD_NM_1
		               , xb.TOT_CNT as             USE_CQY   -- "개발팀의뢰"
		               , xb.RE_CNT as              USE_CQY_1 -- "임시보류"
		               , xb.TOT_CNT - xb.RE_CNT as USE_CQY_2 -- "테스트대상" 
		               , xb.BEF_TST as             USE_CQY_3 -- "배정전"
		               , xc.FINAL_WORK as          USE_CQY_4 -- "수행완료"
		               , xc.BE_WORK as             USE_CQY_5 -- "수행중"
		               , xc.NONE_WORK as           USE_CQY_6 -- "수행전"
		               , xbb.TESTER_CNT as         USE_CQY_7 -- "수행테스터"
		               , decode((xb.TOT_CNT - xb.RE_CNT), 0, 0, trunc(xc.FINAL_WORK / (xb.TOT_CNT - xb.RE_CNT) * 100, 1)) as FXNG_RA -- "수행율"
		               , xc.FINAL_WORK as          USE_CQY_8  -- "수행완료" 
		               , nvl(xd.SUC, 0) as         USE_CQY_9  -- "성공"
		               , nvl(xd.FAL, 0) as         USE_CQY_10 -- "결함"
		               , nvl(xd.FIX, 0) as         USE_CQY_11 -- "협의대상"
		               , decode((nvl(xd.SUC, 0) + nvl(xd.FAL, 0)), 0 , 0, trunc(nvl(xd.FAL, 0) / (nvl(xd.SUC, 0) + nvl(xd.FAL, 0)) * 100, 2)) as FXNG_RA_1 -- "결함율"
		               , nvl(xd.FAL, 0) as         USE_CQY_12 -- "조치대상"
		               , nvl(xe.FNAL, 0) as        USE_CQY_13 -- "조치완료"
		               , nvl(xe.BEFIX, 0) as       USE_CQY_14 -- "개발팀 조치중"
		               , nvl(xe.REINS, 0) as       USE_CQY_15 -- "현업 확인중"
		               , decode(nvl(xd.FAL, 0), 0, 0, trunc((nvl(xe.FNAL, 0) + nvl(xe.REINS, 0))/ nvl(xd.FAL, 0) * 100, 1)) as FXNG_RA_2 -- "조치율"
		               , xc.FINAL_WORK as          USE_CQY_16 -- "수행완료"
		               , nvl(xf.SUC, 0) as         USE_CQY_17 -- "통과"
		               , nvl(xf.FAL, 0) as         USE_CQY_18 -- "결함"
		               , nvl(xf.FIX, 0) as         USE_CQY_19 -- "협의대상"
		               , decode(nvl(xc.FINAL_WORK, 0), 0, 0, trunc(nvl(xf.SUC, 0) / nvl(xc.FINAL_WORK, 0) * 100, 1)) as  FXNG_RA_3 -- "통과율"
		               , nvl(xd.REP, 0) as         USE_CQY_20 -- "개발팀확인중"
		               , nvl(xf.REP, 0) + nvl(xe.BEFIX, 0) as USE_CQY_21 -- "개발팀확인중"
		               , nvl(xc.ERRORCNT, 0) as    USE_CQY_22 -- "비대상"
		               , xc.FINAL_WORK - nvl(xf.SUC, 0) - nvl(xf.FAL, 0) - nvl(xf.FIX, 0) - nvl(xf.REP, 0) as USE_CQY_23 -- "비대상"
		        from     ( select  a.COMN_DTLS_CD
		                         , a.DETL_CD_NM
		                         , a.SCRN_DSPL_SQNC
		                         , b.COMN_DTLS_CD as COMN_DTLS_CD_1
		                         , b.DETL_CD_NM   as DETL_CD_NM_1
		                         , b.SCRN_DSPL_SQNC  as SCRN_DSPL_SQNC_1
		                   from    CCCMCDDMT a
		                         , CCCMCDDMT b
		                   where   a.COMN_GRP_CD  = 'COR_025'
		                     and   Length(a.COMN_DTLS_CD) = 1
		                     and   b.COMN_GRP_CD  = 'COR_025'
		                     and   Length(b.COMN_DTLS_CD) = 2
		                     and   a.COMN_DTLS_CD = substr(b.COMN_DTLS_CD, 1, 1)
		                     and   ((nvl( #{afiSrchDvsnVl} , '*') = '*') or (( #{afiSrchDvsnVl}  = 'Q') and (b.COMN_DTLS_CD <> 'SQ')))
		                 ) xa    /* 시스템 정보  */
		               , ( select   b.PRJT_TISS_CD
		                          , count(*) as TOT_CNT
		                          , sum(decode(a.TEST_PSBL_TRGT_YN, '2', 1, 0)) as RE_CNT
		                          , sum(decode(a.TEST_ASGN_ID, 'WIND', decode(a.TEST_PSBL_TRGT_YN, '1', 1, 0), 0)) as BEF_TST
		                          , sum(a.TEST_CNT) as TEST_CNT
		                   from     ( select  /*+NO_PUSH_PRED*/
		                                      sa.PRGM_ID
		                                    , nvl(sa.TEST_PSBL_TRGT_YN, '1') as TEST_PSBL_TRGT_YN
		                                    , nvl(max(sb.TEST_ASGN_ID), 'WIND') as TEST_ASGN_ID
		                                    , count(sb.TEST_ASGN_ID) as TEST_CNT
		                              from    COMTESTMT sa
		                                    , ( select  PRGM_ID
		                                              , TEST_STEP_CD
		                                              , TEST_ASGN_ID
		                                        from    COMTESTDT
		                                        where   nvl(DLTN_YN, 'N') <> 'Y'
		                                          and   TEST_STEP_CD =  #{testStepCd} 
		                                        group by PRGM_ID
		                                               , TEST_STEP_CD
		                                               , TEST_ASGN_ID
		                                      ) sb
		                              where   nvl(sa.DLTN_YN, 'N') <> 'Y'
		                                and   sa.PRGM_ID      = sb.PRGM_ID(+)
		                                and   sa.TEST_STEP_CD = sb.TEST_STEP_CD(+)
		                                and   sa.TEST_STEP_CD =  #{testStepCd} 
		                              group by sa.PRGM_ID, nvl(sa.TEST_PSBL_TRGT_YN, '1')
		                            ) a
		                          , COTBPRMMT b
		                   where    a.PRGM_ID = b.PRGM_ID
		                     and    nvl(b.DLTN_YN, 'N') <> 'Y'
		                     and   (((nvl( #{afiSrchYn} , '*') = '*') and (b.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                            (( #{afiSrchYn}  = 'Y') and (b.PRGM_TYP_CD = 'A05')))
		                     and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(b.PROR_BASE_CD, 'N') = 'L1'))
		                     and   ((nvl( #{afiSrchDvsnCtn} , '*') = '*') or
		                            ((nvl( #{afiSrchDvsnCtn} , '*') = 'S') and (nvl(b.PRNC_YN, 'N') = 'S')) or
		                            ((nvl( #{afiSrchDvsnCtn} , '*') = 'M') and (nvl(b.PRNC_YN, 'N') in ('S', 'M')))
		                           )
		                   group by b.PRJT_TISS_CD
		                 ) xb  /* 테스트 의뢰 현황  */
		               , ( select  ta.PRJT_TISS_CD
		                         , count(*) as TESTER_CNT
		                   from    ( select  b.PRJT_TISS_CD
		                                   , a.TEST_ASGN_ID
		                             from    COMTESTDT a
		                                   , COTBPRMMT b
		                             where   nvl(a.DLTN_YN, 'N') <> 'Y'
		                               and   a.PRGM_ID = b.PRGM_ID
		                               and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                               and   a.TEST_STEP_CD =  #{testStepCd} 
		                               and   (((nvl( #{afiSrchYn} , '*') = '*') and (b.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                      (( #{afiSrchYn}  = 'Y') and (b.PRGM_TYP_CD = 'A05')))
		                               and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(b.PROR_BASE_CD, 'N') = 'L1'))
		                               and   ((nvl( #{afiSrchDvsnCtn} , '*') = '*') or
		                                      ((nvl( #{afiSrchDvsnCtn} , '*') = 'S') and (nvl(b.PRNC_YN, 'N') = 'S')) or
		                                      ((nvl( #{afiSrchDvsnCtn} , '*') = 'M') and (nvl(b.PRNC_YN, 'N') in ('S', 'M')))
		                                     )
		                             group by b.PRJT_TISS_CD
		                                    , a.TEST_ASGN_ID
		                           ) ta
		                   group by ta.PRJT_TISS_CD
		                 ) xbb  /* 테스터 수 */
		               , ( select  ga.PRJT_TISS_CD
		                         , sum(decode(ga.PTEST_ST, 0, 1, 0)) as NONE_WORK
		                         , sum(decode(ga.PTEST_ST, 1, 1, 0)) as BE_WORK
		                         , sum(decode(ga.PTEST_ST, 2, 1, 0)) as FINAL_WORK
		                         , sum(decode(ga.PTEST_ST, 3, 1, 0)) as ERRORCNT
		                   from    ( select  ttb.PRJT_TISS_CD
		                                   , tta.PRGM_ID
		                                   , case when (tta.BEWORK + tta.FINALWORK + tta.ERRORCNT) = 0 then 0          /* 미수행 */
		                                          when (tta.NOWORK + tta.BEWORK > 0) then 1  /* 수행중 */
		                                          when ((tta.NOWORK + tta.BEWORK) = 0) and (tta.FINALWORK > 0 ) then 2               /* 완료     */
		                                          when ((tta.NOWORK + tta.BEWORK + tta.FINALWORK) = 0) and (tta.ERRORCNT > 0) then 3 /* 수행오류 */
		                                     end as PTEST_ST
		                             from    ( select /*+NO_PUSH_PRED*/
		                                               ta.PRGM_ID
		                                             , sum(decode(ta.TEST_ST, 0, 1, 0)) as NOWORK       /* 미수행 */
		                                             , sum(decode(ta.TEST_ST, 1, 1, 0)) as BEWORK       /* 수행중 */
		                                             , sum(decode(ta.TEST_ST, 2, 1, 0)) as FINALWORK    /* 완료   */
		                                             , sum(decode(ta.TEST_ST, 3, 1, 0)) as ERRORCNT     /* 수행오류 */
		                                       from    ( select  xa.PRGM_ID
		                                                       , xa.TEST_ASGN_ID
		                                                       , case when (xa.T1 + xa.T2 + xa.T3) = 0 then 0                      /* 미수행   */
		                                                              when ((xa.T1 + xa.T2 + xa.T3) > 0) and (xa.T0 > 0 ) then 1   /* 수행중   */
		                                                              when ((xa.T1 + xa.T2) > 0) and (xa.T0 = 0 ) then 2           /* 완료     */
		                                                              when ((xa.T0 + xa.T1 + xa.T2) = 0) and (xa.T3 > 0 ) then 3   /* 수행오류 */
		                                                         end as TEST_ST
		                                                 from    ( select  a.PRGM_ID
		                                                                 , a.TEST_ASGN_ID
		                                                                 , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T0', 1, 0)), 0) as T0
		                                                                 , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T1', 1, 0)), 0) as T1
		                                                                 , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T2', 1, 0)), 0) as T2
		                                                                 , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T3', 1, 0)), 0) as T3
		                                                           from    ( select   sa.PRGM_ID
		                                                                            , sa.TEST_STEP_CD
		                                                                            , sa.TEST_ASGN_ID
		                                                                            , sb.FNCT_ID
		                                                                     from     COMTESTDT sa
		                                                                            , COTBPRMDT sb
		                                                                            , COMTESTMT sc
		                                                                     where    nvl(sa.DLTN_YN, 'N') <> 'Y'
		                                                                       and    nvl(sb.DLTN_YN, 'N') <> 'Y'
		                                                                       and    nvl(sb.DSCS_YN, 'N') = 'Y'
		                                                                       and    sa.PRGM_ID      = sb.PRGM_ID
		                                                                       and    sa.TEST_STEP_CD =  #{testStepCd} 
		                                                                       and    sa.PRGM_ID      = sc.PRGM_ID
		                                                                       and    sa.TEST_STEP_CD = sc.TEST_STEP_CD
		                                                                       and    nvl(sc.DLTN_YN, 'N') <> 'Y'
		                                                                       and    nvl(sc.TEST_PSBL_TRGT_YN, '1') <> '2'
		                                                                   ) a
		                                                                 , COTSTERMT b
		                                                           where   a.PRGM_ID      = b.PRGM_ID(+)
		                                                             and   a.TEST_STEP_CD = b.TEST_STEP_CD(+)
		                                                             and   a.TEST_ASGN_ID = b.TEST_ASGN_ID(+)
		                                                             and   a.FNCT_ID      = b.FNCT_ID(+)
		                                                             and   nvl(b.DLTN_YN(+), 'N') <> 'Y'
		                                                           group by a.PRGM_ID
		                                                                  , a.TEST_ASGN_ID
		                                                         ) xa
		                                               ) ta
		                                       group by ta.PRGM_ID
		                                     ) tta
		                                   , COTBPRMMT ttb
		                             where   tta.PRGM_ID = ttb.PRGM_ID
		                               and   nvl(ttb.DLTN_YN, 'N') <> 'Y'
		                               and   (((nvl( #{afiSrchYn} , '*') = '*') and (ttb.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                      (( #{afiSrchYn}  = 'Y') and (ttb.PRGM_TYP_CD = 'A05')))
		                               and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(ttb.PROR_BASE_CD, 'N') = 'L1'))
		                               and   ((nvl( #{afiSrchDvsnCtn} , '*') = '*') or
		                                      ((nvl( #{afiSrchDvsnCtn} , '*') = 'S') and (nvl(ttb.PRNC_YN, 'N') = 'S')) or
		                                      ((nvl( #{afiSrchDvsnCtn} , '*') = 'M') and (nvl(ttb.PRNC_YN, 'N') in ('S', 'M')))
		                                     )
		                           ) ga
		                   group by ga.PRJT_TISS_CD
		                 ) xc  /* 테스트 수행현황  */
		               , ( select  ga.PRJT_TISS_CD
		                         , sum(decode(ga.ACT_STATE, 'S', 1, 0)) as SUC
		                         , sum(decode(ga.ACT_STATE, 'F', 1, 0)) as FAL
		                         , sum(decode(ga.ACT_STATE, 'C', 1, 0)) as FIX
		                         , sum(decode(ga.ACT_STATE, 'R', 1, 0)) as REP
		                   from    ( select  zb.PRJT_TISS_CD
		                                   , za.PRGM_ID
		                                   , case when (za.SUC > 0) and ((za.FAL + za.FIX + za.REP) = 0) then 'S'
		                                          when za.FAL > 0 then 'F'
		                                          when (za.FIX > 0) and (za.FAL = 0) then 'C'
		                                          when (za.REP > 0) and (za.FAL = 0) and (za.FIX = 0) then 'R'
		                                     end ACT_STATE
		                             from    ( select
		                                               tta.PRGM_ID
		                                             , sum(decode(tta.ACT_STATE, 'S', 1, 0)) as SUC   /* 성공   */
		                                             , sum(decode(tta.ACT_STATE, 'F', 1, 0)) as FAL   /* 결함   */
		                                             , sum(decode(tta.ACT_STATE, 'C', 1, 0)) as FIX   /* 협의대상 */
		                                             , sum(decode(tta.ACT_STATE, 'R', 1, 0)) as REP   /* 개발팀확인중 */
		                                       from    ( select  ta.PRGM_ID
		                                                       , ta.TEST_ASGN_ID
		                                                       , case when (ta.SUC > 0) and ((ta.FAL + ta.MET + ta.REP) = 0) then 'S'
		                                                              when (ta.FAL > 0) then 'F'
		                                                              when (ta.MET > 0) and (ta.FAL = 0) then 'C'
		                                                              when (ta.REP > 0) and (ta.FAL = 0) and (ta.MET = 0) then 'R'
		                                                         end ACT_STATE
		                                                 from    ( select  xa.PRGM_ID
		                                                                 , xa.TEST_ASGN_ID
		                                                                 , nvl(sum(decode(xa.ACT_STATE, 'S', 1, 0)), 0) as SUC
		                                                                 , nvl(sum(decode(xa.ACT_STATE, 'F', 1, 0)), 0) as FAL
		                                                                 , nvl(sum(decode(xa.ACT_STATE, 'C', 1, 0)), 0) as MET
		                                                                 , nvl(sum(decode(xa.ACT_STATE, 'R', 1, 0)), 0) as REP
		                                                           from    ( select  a.PRGM_ID
		                                                                           , a.TEST_ASGN_ID
		                                                                             /* 성공S>실패F>확인중C  */
		                                                                           , case when a.TEST_RSLT_CD = 'T1' then 'S'
		                                                                                  when a.TEST_RSLT_CD = 'T2' then decode(b.FULT_CRNT_STTS_CD, 'A1', 'F', 'A9','C', 'R')
		                                                                             end as ACT_STATE
		                                                                     from    COTSTERMT a
		                                                                           , COTSTERDT b
		                                                                     where   nvl(a.DLTN_YN, 'N') <> 'Y'
		                                                                       and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                                                                       and   a.PRGM_ID      = b.PRGM_ID(+)
		                                                                       and   a.TEST_STEP_CD = b.TEST_STEP_CD(+)
		                                                                       and   a.TEST_ASGN_ID = b.TEST_ASGN_ID(+)
		                                                                       and   a.TEST_ID      = b.TEST_ID(+)
		                                                                       and   a.TEST_STEP_CD =  #{testStepCd} 
		                                                                       and   a.TEST_RSLT_CD in ('T1', 'T2')
		                                                                   ) xa
		                                                           group by xa.PRGM_ID
		                                                                  , xa.TEST_ASGN_ID
		                                                         ) ta
		                                               ) tta
		                                       group by tta.PRGM_ID
		                                     ) za
		                                   , COTBPRMMT zb
		                                   , zc  /* 수행완료 모수를 위한 서브쿼리 */
		                             where   za.PRGM_ID = zb.PRGM_ID
		                               and   za.PRGM_ID = zc.PRGM_ID
		                               and   nvl(zb.DLTN_YN, 'N') <> 'Y'
		                               and   (((nvl( #{afiSrchYn} , '*') = '*') and (zb.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                      (( #{afiSrchYn}  = 'Y') and (zb.PRGM_TYP_CD = 'A05')))
		                               and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(zb.PROR_BASE_CD, 'N') = 'L1'))
		                               and   ((nvl( #{afiSrchDvsnCtn} , '*') = '*') or
		                                      ((nvl( #{afiSrchDvsnCtn} , '*') = 'S') and (nvl(zb.PRNC_YN, 'N') = 'S')) or
		                                      ((nvl( #{afiSrchDvsnCtn} , '*') = 'M') and (nvl(zb.PRNC_YN, 'N') in ('S', 'M')))
		                                     )
		                           ) ga
		                   group by ga.PRJT_TISS_CD
		                 ) xd  /* 테스트 결과  */
		               , ( select  ga.PRJT_TISS_CD
		                         , sum(decode(ga.FLOW_STATE, 'S', 1, 0)) as FNAL
		                         , sum(decode(ga.FLOW_STATE, 'A', 1, 0)) as BEFIX
		                         , sum(decode(ga.FLOW_STATE, 'O', 1, 0)) as REINS
		                   from    ( select  zb.PRJT_TISS_CD
		                                   , za.PRGM_ID
		                                   , case when (za.FNAL > 0) and ((za.BEFIX + za.REINS) = 0) then 'S'
		                                          when za.BEFIX > 0 then 'A'
		                                          when (za.REINS > 0) and (za.BEFIX = 0) then 'O'
		                                     end FLOW_STATE
		                             from    ( select
		                                               tta.PRGM_ID
		                                             , sum(decode(tta.FLOW_STATE, 'S', 1, 0)) as FNAL    /* 조치완료       */
		                                             , sum(decode(tta.FLOW_STATE, 'A', 1, 0)) as BEFIX   /* 개발팀 조치중  */
		                                             , sum(decode(tta.FLOW_STATE, 'O', 1, 0)) as REINS   /* 현업확인중     */
		                                       from    ( select  ta.PRGM_ID
		                                                       , ta.TEST_ASGN_ID
		                                                       , case when (ta.FNAL > 0) and ((ta.BEFIX + ta.REINS) = 0) then 'S'
		                                                              when ta.BEFIX > 0 then 'A'
		                                                              when (ta.REINS > 0) and (ta.BEFIX = 0) then 'O'
		                                                         end FLOW_STATE
		                                                 from    ( select   sa.PRGM_ID
		                                                                  , sa.TEST_ASGN_ID
		                                                                  , nvl(sum(decode(sa.FLOW_STATE, 'S', 1, 0)), 0) as FNAL
		                                                                  , nvl(sum(decode(sa.FLOW_STATE, 'A', 1, 0)), 0) as BEFIX
		                                                                  , nvl(sum(decode(sa.FLOW_STATE, 'O', 1, 0)), 0) as REINS
		                                                           from    ( select  a.PRGM_ID
		                                                                           , a.TEST_ASGN_ID
		                                                                             /* S 조치완료, A 개발팀 조치중, O 현업확인중 */
		                                                                           , case when nvl(b.FULT_PRSG_STTS_CD, '1') = '5' then 'S'
		                                                                                  when nvl(b.FULT_PRSG_STTS_CD, '1') in ('1', '2', '6') then 'A'
		                                                                                  when nvl(b.FULT_PRSG_STTS_CD, '1') in ('3', '4') then 'O'
		                                                                             end as FLOW_STATE
		                                                                     from    COTSTERMT a
		                                                                           , COTSTERDT b
		                                                                     where   nvl(a.DLTN_YN, 'N') <> 'Y'
		                                                                       and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                                                                       and   a.PRGM_ID      = b.PRGM_ID
		                                                                       and   a.TEST_STEP_CD = b.TEST_STEP_CD
		                                                                       and   a.TEST_ASGN_ID = b.TEST_ASGN_ID
		                                                                       and   a.TEST_ID      = b.TEST_ID
		                                                                       and   a.TEST_STEP_CD =  #{testStepCd} 
		                                                                       and   a.TEST_RSLT_CD = 'T2'
		                                                                       and   b.FULT_CRNT_STTS_CD = 'A1'
		                                                                       and   b.FULT_PRSG_STTS_CD in ('1', '2', '3', '4', '5', '6')
		                                                                   ) sa
		                                                           group by sa.PRGM_ID
		                                                                  , sa.TEST_ASGN_ID
		                                                         ) ta
		                                               ) tta
		                                       group by  tta.PRGM_ID
		                                     ) za
		                                   , COTBPRMMT zb
		                                   , zc  /* 수행완료 모수를 위한 서브쿼리 */
		                             where   za.PRGM_ID = zb.PRGM_ID
		                               and   za.PRGM_ID = zc.PRGM_ID
		                               and   nvl(zb.DLTN_YN, 'N') <> 'Y'
		                               and   (((nvl( #{afiSrchYn} , '*') = '*') and (zb.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                      (( #{afiSrchYn}  = 'Y') and (zb.PRGM_TYP_CD = 'A05')))
		                               and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(zb.PROR_BASE_CD, 'N') = 'L1'))
		                               and   ((nvl( #{afiSrchDvsnCtn} , '*') = '*') or
		                                      ((nvl( #{afiSrchDvsnCtn} , '*') = 'S') and (nvl(zb.PRNC_YN, 'N') = 'S')) or
		                                      ((nvl( #{afiSrchDvsnCtn} , '*') = 'M') and (nvl(zb.PRNC_YN, 'N') in ('S', 'M')))
		                                     )
		                           ) ga
		                   group by ga.PRJT_TISS_CD
		                 ) xe /* 결함조치현황 */
		               , ( select  ga.PRJT_TISS_CD
		                         , sum(decode(ga.ACT_STATE, 'S', 1, 0)) as SUC
		                         , sum(decode(ga.ACT_STATE, 'F', 1, 0)) as FAL
		                         , sum(decode(ga.ACT_STATE, 'C', 1, 0)) as FIX
		                         , sum(decode(ga.ACT_STATE, 'R', 1, 0)) as REP
		                   from    ( select  zb.PRJT_TISS_CD
		                                   , za.PRGM_ID
		                                   , case when (za.SUC > 0) and ((za.FAL + za.FIX + za.REP) = 0) then 'S'
		                                          when za.FAL > 0 then 'F'
		                                          when (za.FIX > 0) and (za.FAL = 0) then 'C'
		                                          when (za.REP > 0) and (za.FAL = 0) and (za.FIX = 0) then 'R'
		                                     end ACT_STATE
		                             from    ( select
		                                               tta.PRGM_ID
		                                             , sum(decode(tta.ACT_STATE, 'S', 1, 0)) as SUC   /* 통과   */
		                                             , sum(decode(tta.ACT_STATE, 'F', 1, 0)) as FAL   /* 결함   */
		                                             , sum(decode(tta.ACT_STATE, 'C', 1, 0)) as FIX   /* 협의대상 */
		                                             , sum(decode(tta.ACT_STATE, 'R', 1, 0)) as REP   /* 개발팀확인중 */
		                                       from    ( select  ta.PRGM_ID
		                                                       , ta.TEST_ASGN_ID
		                                                       , case when (ta.SUC > 0) and ((ta.FAL + ta.MET + ta.REP) = 0) then 'S'
		                                                              when ta.FAL > 0 then 'F'
		                                                              when (ta.MET > 0) and (ta.FAL = 0)  then 'C'
		                                                              when (ta.REP > 0) and (ta.FAL = 0) and (ta.MET = 0) then 'R'
		                                                         end ACT_STATE
		                                                 from    ( select  xa.PRGM_ID
		                                                                 , xa.TEST_ASGN_ID
		                                                                 , nvl(sum(decode(xa.ACT_STATE, 'S', 1, 0)), 0) as SUC
		                                                                 , nvl(sum(decode(xa.ACT_STATE, 'F', 1, 0)), 0) as FAL
		                                                                 , nvl(sum(decode(xa.ACT_STATE, 'C', 1, 0)), 0) as MET
		                                                                 , nvl(sum(decode(xa.ACT_STATE, 'R', 1, 0)), 0) as REP
		                                                           from    ( select  a.PRGM_ID
		                                                                           , a.TEST_ASGN_ID
		                                                                             /* 성공S>실패F>확인중C  */
		                                                                           , case when a.TEST_RSLT_CD = 'T1' then 'S'
		                                                                                  when a.TEST_RSLT_CD = 'T2' then decode(b.FULT_CRNT_STTS_CD, 'A1', decode(b.FULT_PRSG_STTS_CD, '5', 'S', 'F'), 'A9','C', 'R')
		                                                                             end as ACT_STATE
		                                                                     from    COTSTERMT a
		                                                                           , COTSTERDT b
		                                                                     where   nvl(a.DLTN_YN, 'N') <> 'Y'
		                                                                       and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                                                                       and   a.PRGM_ID      = b.PRGM_ID(+)
		                                                                       and   a.TEST_STEP_CD = b.TEST_STEP_CD(+)
		                                                                       and   a.TEST_ASGN_ID = b.TEST_ASGN_ID(+)
		                                                                       and   a.TEST_ID      = b.TEST_ID(+)
		                                                                       and   a.TEST_STEP_CD =  #{testStepCd} 
		                                                                       and   a.TEST_RSLT_CD in ('T1', 'T2')
		                                                                   ) xa
		                                                           group by xa.PRGM_ID
		                                                                  , xa.TEST_ASGN_ID
		                                                         ) ta
		                                               ) tta
		                                       group by tta.PRGM_ID
		                                     ) za
		                                   , COTBPRMMT zb
		                                   ,  zc  /* 수행완료 모수를 위한 서브쿼리 */
		                             where   za.PRGM_ID = zb.PRGM_ID
		                               and   za.PRGM_ID = zc.PRGM_ID
		                               and   nvl(zb.DLTN_YN, 'N') <> 'Y'
		                               and   (((nvl( #{afiSrchYn} , '*') = '*') and (zb.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                      (( #{afiSrchYn}  = 'Y') and (zb.PRGM_TYP_CD = 'A05')))
		                               and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(zb.PROR_BASE_CD, 'N') = 'L1'))
		                               and   ((nvl( #{afiSrchDvsnCtn} , '*') = '*') or
		                                      ((nvl( #{afiSrchDvsnCtn} , '*') = 'S') and (nvl(zb.PRNC_YN, 'N') = 'S')) or
		                                      ((nvl( #{afiSrchDvsnCtn} , '*') = 'M') and (nvl(zb.PRNC_YN, 'N') in ('S', 'M')))
		                                     )
		                           ) ga
		                   group by ga.PRJT_TISS_CD
		                 ) xf  /* 최종 테스트 결과  */
		        where    xa.COMN_DTLS_CD_1 = xb.PRJT_TISS_CD
		          and    xa.COMN_DTLS_CD_1 = xbb.PRJT_TISS_CD(+)
		          and    xa.COMN_DTLS_CD_1 = xc.PRJT_TISS_CD(+)
		          and    xa.COMN_DTLS_CD_1 = xd.PRJT_TISS_CD(+)
		          and    xa.COMN_DTLS_CD_1 = xe.PRJT_TISS_CD(+)
		          and    xa.COMN_DTLS_CD_1 = xf.PRJT_TISS_CD(+)
		        order by xa.SCRN_DSPL_SQNC, xa.SCRN_DSPL_SQNC_1
		]]>
	</select>




	<resultMap id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTsterdt-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO">
	
		<result property="comnDtlsCd" column="COMN_DTLS_CD"/>
		<result property="detlCdNm" column="DETL_CD_NM"/>
		<result property="comnDtlsCd1" column="COMN_DTLS_CD_1"/>
		<result property="detlCdNm1" column="DETL_CD_NM_1"/>
		<result property="userNm" column="USER_NM"/>
		<result property="useCqy" column="USE_CQY"/>
		<result property="useCqy1" column="USE_CQY_1"/>
		<result property="useCqy2" column="USE_CQY_2"/>
		<result property="useCqy3" column="USE_CQY_3"/>
		<result property="useCqy4" column="USE_CQY_4"/>
		<result property="useCqy5" column="USE_CQY_5"/>
		<result property="useCqy6" column="USE_CQY_6"/>
		<result property="useCqy7" column="USE_CQY_7"/>
		<result property="useCqy8" column="USE_CQY_8"/>
		<result property="useCqy9" column="USE_CQY_9"/>
		<result property="fxngRa" column="FXNG_RA"/>
		<result property="useCqy10" column="USE_CQY_10"/>
		<result property="useCqy11" column="USE_CQY_11"/>
		<result property="useCqy12" column="USE_CQY_12"/>
		<result property="fxngRa1" column="FXNG_RA_1"/>
		<result property="useCqy13" column="USE_CQY_13"/>
		<result property="useCqy14" column="USE_CQY_14"/>
		<result property="useCqy15" column="USE_CQY_15"/>
		<result property="fxngRa2" column="FXNG_RA_2"/>
	</resultMap>
	
    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTsterdt (cod_tsterdt_l02 결함조치현황) 
        Description :                                           cod_tsterdt_l02 결함조치현황
                                            
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO
		resultMap : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTsterdt-result
    -->
	<select id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTsterdt"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO"  resultMap="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTsterdt-result" useCache="true" flushCache="false">
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTsterdt */
		<![CDATA[
		   select  /*+ cod_tsterdt_l02$S01_[비대상]결함조치현황 */ 
		             xa.COMN_DTLS_CD
		           , xa.DETL_CD_NM
		           , xa.COMN_DTLS_CD_1
		           , xa.DETL_CD_NM_1
		           , xb.USER_NM
		           , 0 as USE_CQY    -- "식별대상"              
		           , 0 as USE_CQY_1  -- "개발팀확인중"          
		           , 0 as USE_CQY_2  -- "미수용(기각)"          
		           , xb.FU_CNT as USE_CQY_3  -- "결함등록"             
		           , xb.ST_CNT as USE_CQY_4  -- "개발자조치시작"       
		           , xb.ED_CNT as USE_CQY_5  -- "개발자조치완료"       
		           , xb.FI_CNT as USE_CQY_6  -- "결함등록자확인완료"   
		           , xb.TO_CNT as USE_CQY_7  -- "조치대상모수"         
		           , nvl(xb.RP_CNT         , 0) as USE_CQY_8 -- "누적계획" 
		           , nvl(xb.IC_CNT, 0) as          USE_CQY_9 -- "누적실적"
		           , decode(nvl(xb.RP_CNT, 0), 0, 0         ,trunc(nvl(xb.IC_CNT, 0) / nvl(xb.RP_CNT, 0) * 100, 1)) as FXNG_RA --"달성율"
		           , nvl(xb.RE_CNT, 0) as USE_CQY_10   -- "당일계획" 
		           , nvl(xb.RI_CNT, 0) as USE_CQY_11   -- "당일실적" 
		           , xb.TO_CNT - nvl(xb.IC_CNT, 0) as USE_CQY_12  -- "잔여"
		           , decode(xb.TO_CNT, 0, 0, trunc((xb.ED_CNT + xb.FI_CNT) / xb.TO_CNT * 100, 1)) as FXNG_RA_1 -- "진척율"
		           , nvl(xb.RR_CNT, 0) as USE_CQY_13 -- "누적실적"
		           , nvl(xb.RC_CNT, 0) as USE_CQY_14 -- "당일실적"
		           , xb.TO_CNT - nvl(xb.RR_CNT, 0) as USE_CQY_15 -- "잔여"
		           , decode(xb.TO_CNT, 0, 0, trunc(xb.FI_CNT / xb.TO_CNT * 100, 1)) as FXNG_RA_2 -- "진척율"
		    from     ( select  a.COMN_DTLS_CD
		                     , a.DETL_CD_NM
		                     , a.SCRN_DSPL_SQNC
		                     , b.COMN_DTLS_CD as COMN_DTLS_CD_1
		                     , b.DETL_CD_NM   as DETL_CD_NM_1
		                     , b.SCRN_DSPL_SQNC  as SCRN_DSPL_SQNC_1
		               from    CCCMCDDMT a
		                     , CCCMCDDMT b
		               where   a.COMN_GRP_CD  = 'COR_025'
		                 and   Length(a.COMN_DTLS_CD) = 1
		                 and   b.COMN_GRP_CD  = 'COR_025'
		                 and   Length(b.COMN_DTLS_CD) = 2
		                 and   a.COMN_DTLS_CD = substr(b.COMN_DTLS_CD, 1, 1)
		             ) xa    /* 시스템 정보  */
		           , ( select   sa.PRJT_TISS_CD
		                      , sb.USER_NM
		                      , sa.FU_CNT as FU_CNT
		                      , sa.ST_CNT as ST_CNT
		                      , sa.ED_CNT as ED_CNT
		                      , sa.FI_CNT as FI_CNT
		                      , sa.TO_CNT as TO_CNT
		                      , sc.CNT    as RP_CNT
		                      , sc.RCNT   as RE_CNT
		                      , sd.CNT    as IC_CNT
		                      , sd.RCNT   as RI_CNT
		                      , se.CNT    as RR_CNT
		                      , se.RCNT   as RC_CNT
		               from     ( select  ta.PRJT_TISS_CD
		                                , ta.MNGP_ID
		                                , sum(ta.FU_CNT) as FU_CNT
		                                , sum(ta.ST_CNT) as ST_CNT
		                                , sum(ta.ED_CNT) as ED_CNT
		                                , sum(ta.FI_CNT) as FI_CNT
		                                , sum(ta.TO_CNT) as TO_CNT
		                          from    ( select  c.PRJT_TISS_CD
		                                          , nvl(b.MNGP_ID, 'NONE') as MNGP_ID
		                                          , decode(nvl(b.FULT_PRSG_STTS_CD, '0'), '1', 1, 0) as FU_CNT
		                                          , decode(nvl(b.FULT_PRSG_STTS_CD, '0'), '2', 1, 0) as ST_CNT
		                                          , decode(nvl(b.FULT_PRSG_STTS_CD, '0'), '3', 1, 0) as ED_CNT
		                                          , decode(nvl(b.FULT_PRSG_STTS_CD, '0'), '5', 1, 0) as FI_CNT
		                                          , decode(nvl(b.FULT_PRSG_STTS_CD, '0'), '1', 1, '2', 1, '3', 1, '5', 1, 0) as TO_CNT
		                                    from    COTSTERDT b
		                                          , COTBPRMMT c
		                                    where   nvl(b.DLTN_YN, 'N') <> 'Y'
		                                      and   b.TEST_STEP_CD =  #{testStepCd} 
		                                      and   b.PRGM_ID      = c.PRGM_ID
		                                      and   ((nvl( #{srchWordVl} , '*') = '*') or ( #{srchWordVl}  like '%' || c.PRJT_TISS_CD || '%'))
		                                      and   ((nvl( #{mngpId} , '*') = '*') or (b.MNGP_ID =  #{mngpId} ))
		                                      and   (((nvl( #{afiSrchYn} , '*') = '*') and (c.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                             (( #{afiSrchYn}  = 'Y') and (c.PRGM_TYP_CD = 'A05')))
		                                      and   ((nvl( #{prorBaseCd} , '*') = '*') or  (nvl(c.PROR_BASE_CD, 'N') = 'L1'))
		                                      and   nvl(b.FULT_PRSG_STTS_CD, '0') in ('1', '2', '3', '5')
		                                  ) ta
		                          group by ta.PRJT_TISS_CD
		                                 , ta.MNGP_ID
		                        ) sa
		                      , CCUSRDPHT sb
		                      , ( select  ta.PRJT_TISS_CD
		                                , ta.MNGP_ID
		                                , sum(ta.CNT) as CNT
		                                , sum(ta.RCNT) as RCNT
		                          from    ( select  c.PRJT_TISS_CD
		                                          , nvl(b.MNGP_ID, 'NONE') as MNGP_ID
		                                          , 1 as CNT
		                                          , decode(nvl(b.PLAN_FNSH_YMD, to_date('29991231', 'yyyymmdd')), to_date( #{baseYmd} , 'yyyymmdd'), 1, 0) as RCNT
		                                    from    COTSTERDT b
		                                          , COTBPRMMT c
		                                    where   nvl(b.DLTN_YN, 'N') <> 'Y'
		                                      and   b.TEST_STEP_CD =  #{testStepCd} 
		                                      and   b.PRGM_ID      = c.PRGM_ID
		                                      and   trunc(nvl(b.PLAN_FNSH_YMD, to_date('29991231', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd')
		                                      and   nvl(b.FULT_PRSG_STTS_CD, '0') in ('1', '2', '3', '5')
		                                      and   ((nvl( #{srchWordVl} , '*') = '*') or ( #{srchWordVl}  like '%' || c.PRJT_TISS_CD || '%'))
		                                      and   ((nvl( #{mngpId} , '*') = '*') or (b.MNGP_ID =  #{mngpId} ))
		                                      and   (((nvl( #{afiSrchYn} , '*') = '*') and (c.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                             (( #{afiSrchYn}  = 'Y') and (c.PRGM_TYP_CD = 'A05')))
		                                      and   ((nvl( #{prorBaseCd} , '*') = '*') or  (nvl(c.PROR_BASE_CD, 'N') = 'L1'))
		                                  ) ta
		                          group by ta.PRJT_TISS_CD
		                                 , ta.MNGP_ID
		                        ) sc
		                      , ( select  ta.PRJT_TISS_CD
		                                , ta.MNGP_ID
		                                , sum(ta.CNT) as CNT
		                                , sum(ta.RCNT) as RCNT
		                          from    ( select  c.PRJT_TISS_CD
		                                          , nvl(b.MNGP_ID, 'NONE') as MNGP_ID
		                                          , 1 as CNT
		                                          , decode(nvl(b.ACRL_FNSH_YMD, to_date('29991231', 'yyyymmdd')), to_date( #{baseYmd} , 'yyyymmdd'), 1, 0) as RCNT
		                                    from    COTSTERDT b
		                                          , COTBPRMMT c
		                                    where   nvl(b.DLTN_YN, 'N') <> 'Y'
		                                      and   b.TEST_STEP_CD =  #{testStepCd} 
		                                      and   b.PRGM_ID      = c.PRGM_ID
		                                      and   trunc(nvl(b.ACRL_FNSH_YMD, to_date('29991231', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd')
		                                      and   nvl(b.FULT_PRSG_STTS_CD, '0') in ('1', '2', '3', '5')
		                                      and   ((nvl( #{srchWordVl} , '*') = '*') or ( #{srchWordVl}  like '%' || c.PRJT_TISS_CD || '%'))
		                                      and   ((nvl( #{mngpId} , '*') = '*') or (b.MNGP_ID =  #{mngpId} ))
		                                      and   (((nvl( #{afiSrchYn} , '*') = '*') and (c.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                             (( #{afiSrchYn}  = 'Y') and (c.PRGM_TYP_CD = 'A05')))
		                                      and   ((nvl( #{prorBaseCd} , '*') = '*') or  (nvl(c.PROR_BASE_CD, 'N') = 'L1'))
		                                  ) ta
		                          group by ta.PRJT_TISS_CD
		                                 , ta.MNGP_ID
		                        ) sd
		                      , ( select  ta.PRJT_TISS_CD
		                                , ta.MNGP_ID
		                                , sum(ta.CNT) as CNT
		                                , sum(ta.RCNT) as RCNT
		                          from    ( select  c.PRJT_TISS_CD
		                                          , nvl(b.MNGP_ID, 'NONE') as MNGP_ID
		                                          , 1 as CNT
		                                          , decode(nvl(b.ACWR_CNFR_FINS_DD, to_date('29991231', 'yyyymmdd')), to_date( #{baseYmd} , 'yyyymmdd'), 1, 0) as RCNT
		                                    from    COTSTERDT b
		                                          , COTBPRMMT c
		                                    where   nvl(b.DLTN_YN, 'N') <> 'Y'
		                                      and   b.TEST_STEP_CD =  #{testStepCd} 
		                                      and   b.PRGM_ID      = c.PRGM_ID
		                                      and   trunc(nvl(b.ACWR_CNFR_FINS_DD, to_date('29991231', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd')
		                                      and   nvl(b.FULT_PRSG_STTS_CD, '0') in ('5')
		                                      and   ((nvl( #{srchWordVl} , '*') = '*') or ( #{srchWordVl}  like '%' || c.PRJT_TISS_CD || '%'))
		                                      and   ((nvl( #{mngpId} , '*') = '*') or (b.MNGP_ID =  #{mngpId} ))
		                                      and   (((nvl( #{afiSrchYn} , '*') = '*') and (c.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                             (( #{afiSrchYn}  = 'Y') and (c.PRGM_TYP_CD = 'A05')))
		                                      and   ((nvl( #{prorBaseCd} , '*') = '*') or  (nvl(c.PROR_BASE_CD, 'N') = 'L1'))
		                                  ) ta
		                           group by ta.PRJT_TISS_CD
		                                  , ta.MNGP_ID
		                        ) se
		               where    sa.MNGP_ID           = sb.USER_ID(+)
		                 and    sa.PRJT_TISS_CD      = sc.PRJT_TISS_CD(+)
		                 and    sa.MNGP_ID           = sc.MNGP_ID(+)
		                 and    sa.PRJT_TISS_CD      = sd.PRJT_TISS_CD(+)
		                 and    sa.MNGP_ID           = sd.MNGP_ID(+)
		                 and    sa.PRJT_TISS_CD      = se.PRJT_TISS_CD(+)
		                 and    sa.MNGP_ID           = se.MNGP_ID(+)
		             ) xb
		    where    xa.COMN_DTLS_CD_1 = xb.PRJT_TISS_CD
		]]>
	</select>




	<resultMap id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmdtDevel01-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO">
	
		<result property="comnDtlsCd" column="COMN_DTLS_CD"/>
		<result property="detlCdNm" column="DETL_CD_NM"/>
		<result property="comnDtlsCd1" column="COMN_DTLS_CD_1"/>
		<result property="detlCdNm1" column="DETL_CD_NM_1"/>
		<result property="devpAsgnId" column="DEVP_ASGN_ID"/>
		<result property="userNm" column="USER_NM"/>
		<result property="useCqy" column="USE_CQY"/>
		<result property="useCqy1" column="USE_CQY_1"/>
		<result property="useCqy2" column="USE_CQY_2"/>
		<result property="useCqy3" column="USE_CQY_3"/>
		<result property="useCqy4" column="USE_CQY_4"/>
		<result property="useCqy5" column="USE_CQY_5"/>
		<result property="fxngRa" column="FXNG_RA"/>
		<result property="useCqy6" column="USE_CQY_6"/>
		<result property="useCqy7" column="USE_CQY_7"/>
		<result property="useCqy8" column="USE_CQY_8"/>
		<result property="fxngRa1" column="FXNG_RA_1"/>
		<result property="useCqy9" column="USE_CQY_9"/>
		<result property="useCqy10" column="USE_CQY_10"/>
		<result property="useCqy11" column="USE_CQY_11"/>
		<result property="useCqy12" column="USE_CQY_12"/>
		<result property="useCqy13" column="USE_CQY_13"/>
		<result property="fxngRa2" column="FXNG_RA_2"/>
		<result property="useCqy14" column="USE_CQY_14"/>
		<result property="useCqy15" column="USE_CQY_15"/>
		<result property="scrnDsplSqnc" column="SCRN_DSPL_SQNC"/>
		<result property="scrnDsplSqnc1" column="SCRN_DSPL_SQNC_1"/>
		<result property="useCqy16" column="USE_CQY_16"/>
	</resultMap>
	
    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmdtDevel01 (cod_tbprmdt_l06 개발자별 진척현황) 
        Description :                                           cod_tbprmdt_l06 개발자별 진척현황
                                            
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO
		resultMap : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmdtDevel01-result
    -->
	<select id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmdtDevel01"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO"  resultMap="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmdtDevel01-result" useCache="true" flushCache="false">
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmdtDevel01 */
		<![CDATA[
		  select  /*+ cod_tbprmdt_l06$S01_개발자별 진척현황 */ 
		              xa.COMN_DTLS_CD
		            , xa.DETL_CD_NM
		            , xa.COMN_DTLS_CD_1
		            , xa.DETL_CD_NM_1
		            , xb.DEVP_ASGN_ID
		            , xbb.USER_NM
		            , xb.A01 as USE_CQY
		            , xb.A02 as USE_CQY_1
		            , xb.A03 as USE_CQY_2
		            , xc.TOT as USE_CQY_3
		            , xc.FINAL_COUNT as USE_CQY_4
		            , xc.TOT - xc.FINAL_COUNT as USE_CQY_5
		            , trunc((xc.FINAL_COUNT / xc.TOT) * 100, 1) as FXNG_RA
		            , nvl(xd.TOT, 0) as USE_CQY_6
		            , nvl(xd.FINAL_COUNT, 0) as USE_CQY_7
		            , xd.TOT - xd.FINAL_COUNT AS USE_CQY_8
		            , decode(xd.TOT, null, 0, trunc((xd.FINAL_COUNT / xd.TOT) * 100, 1)) as  FXNG_RA_1
		            , xe.FINAL_COUNT as USE_CQY_9
		            , xf.FINAL_COUNT as USE_CQY_10
		            , nvl(xg.FINAL_COUNT, 0) as USE_CQY_11
		            , xh.FINAL_COUNT as USE_CQY_12
		            , xd.TOT - xg.FINAL_COUNT as USE_CQY_13
		            , decode(xd.TOT, null, 0, trunc((xg.FINAL_COUNT / xd.TOT) * 100, 1)) as  FXNG_RA_2
		            , xi.PLAN_CNT as USE_CQY_14
		            , xj.PLAN_CNT as USE_CQY_15
		            , xa.SCRN_DSPL_SQNC
		            , xa.SCRN_DSPL_SQNC_1
		            , xk.FINAL_COUNT as USE_CQY_16
		    from    ( select  a.COMN_DTLS_CD
		                    , a.DETL_CD_NM
		                    , a.SCRN_DSPL_SQNC
		                    , b.COMN_DTLS_CD as COMN_DTLS_CD_1
		                    , b.DETL_CD_NM   as DETL_CD_NM_1
		                    , b.SCRN_DSPL_SQNC  as SCRN_DSPL_SQNC_1
		              from    CCCMCDDMT a
		                    , CCCMCDDMT b
		              where   a.COMN_GRP_CD  = 'COR_025'
		                and   Length(a.COMN_DTLS_CD) = 1
		                and   b.COMN_GRP_CD  = 'COR_025'
		                and   Length(b.COMN_DTLS_CD) = 2
		                and   a.COMN_DTLS_CD = substr(b.COMN_DTLS_CD, 1, 1)
		                and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || b.COMN_DTLS_CD || '%'))
		                and   ((nvl( #{afiSrchCndtCtn} , '*') = '*') or (( #{afiSrchCndtCtn}  = 'Q') and (b.COMN_DTLS_CD <> 'SQ')))
		            ) xa    /* 시스템 정보  */
		          , ( select  ta.PRJT_TISS_CD
		                    , ta.DEVP_ASGN_ID
		                    , sum(ta.A01) as A01
		                    , sum(ta.A02) as A02
		                    , sum(ta.A03) as A03
		              from    ( select  PRJT_TISS_CD
		                              , DEVP_ASGN_ID
		                              , sum(decode(PRGM_TYP_CD, 'A01', 1, 0)) as A01
		                              , sum(decode(PRGM_TYP_CD, 'A02', 1, 0)) as A02
		                              , sum(decode(PRGM_TYP_CD, 'A03', 1, 0)) as A03
		                        from    COTBPRMMT
		                        where   PRJT_TISS_CD is not null
		                          and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || PRJT_TISS_CD || '%'))
		                          and   ((nvl( #{devpAsgnId} , '*') = '*') or (DEVP_ASGN_ID =  #{devpAsgnId} ))
		                          and   nvl(DLTN_YN, 'N') <> 'Y'
		                          and   (((nvl( #{afiSrchYn} , '*') = '*') and (PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                 (( #{afiSrchYn}  = 'Y') and (PRGM_TYP_CD = 'A05')))
		                          and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(PROR_BASE_CD, 'N') = 'L1'))
		                        group by PRJT_TISS_CD
		                               , DEVP_ASGN_ID
		                        union
		                        select  b.PRJT_TISS_CD
		                              , b.DEVP_ASGN_ID
		                              , 0 as A01
		                              , 0 as A02
		                              , 0 as A03
		                        from    COTBPRMMT a
		                              , COTBPRMDT b
		                        where   a.PRGM_ID = b.PRGM_ID
		                          and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                          and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                          and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || a.PRJT_TISS_CD || '%'))
		                          and   ((nvl( #{devpAsgnId} , '*') = '*') or (b.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                          and   (((nvl( #{afiSrchYn} , '*') = '*') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                 (( #{afiSrchYn}  = 'Y') and (a.PRGM_TYP_CD = 'A05')))
		                          and   ((nvl( #{prorBaseCd} , '*') = '*') or  (nvl(b.PROR_BASE_CD, 'N') = 'L1')
		                                )
		                          and   trunc(nvl(b.DVLR_TEST_FNSH_YMD,to_date('20151116', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd')
		                        group by b.PRJT_TISS_CD, b.DEVP_ASGN_ID
		                      ) ta
		              group by  ta.PRJT_TISS_CD
		                      , ta.DEVP_ASGN_ID
		            ) xb   /* 개발모수  */
		          , CCUSRDPHT xbb
		          , ( select  tb.PRJT_TISS_CD
		                    , tb.DEVP_ASGN_ID
		                    , count(*) as TOT
		                    , sum(tb.FINAL_CHECK) as FINAL_COUNT
		              from    ( select ta.PRJT_TISS_CD
		                             , ta.PRGM_ID
		                             , ta.DEVP_ASGN_ID
		                             , decode(sum(ta.CHECK_NULL), 0 , 0, decode(sum(ta.STTS_CHECK), 0, 1, 0)) as FINAL_CHECK
		                        from   ( select  a.PRJT_TISS_CD
		                                       , a.PRGM_ID
		                                       , a.DEVP_ASGN_ID
		                                       , decode(b.FNCT_ID, null, 0, 1) as CHECK_NULL
		                                       , decode(b.CRNT_STTS_CD, '4', 0, '5', 0, '6', 0, 1) as STTS_CHECK
		                                 from    COTBPRMMT a
		                                       , COTBPRMDT b
		                                 where   a.PRGM_ID = b.PRGM_ID(+)
		                                   and   nvl(b.DLTN_YN(+), 'N') <> 'Y'
		                                   and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                                   and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || a.PRJT_TISS_CD || '%'))
		                                   and   ((nvl( #{devpAsgnId} , '*') = '*') or (a.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                                   and   (((nvl( #{afiSrchYn} , '*') = '*') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                          (( #{afiSrchYn}  = 'Y') and (a.PRGM_TYP_CD = 'A05')))
		                                   and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(a.PROR_BASE_CD, 'N') = 'L1')
		                                         )
		                                   and   trunc(nvl(b.DVLR_TEST_FNSH_YMD,to_date('20151116', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd')
		                               ) ta
		                        group by ta.PRJT_TISS_CD
		                               , ta.PRGM_ID
		                               , ta.DEVP_ASGN_ID
		                      ) tb
		              group by tb.PRJT_TISS_CD, tb.DEVP_ASGN_ID
		            ) xc  /* 프로그램 진척  */
		          , ( select  tb.PRJT_TISS_CD
		                    , tb.DEVP_ASGN_ID
		                    , count(*) as TOT
		                    , sum(tb.STTS_CHECK) as FINAL_COUNT
		              from    ( select  b.PRJT_TISS_CD
		                              , b.DEVP_ASGN_ID
		                              , decode(b.CRNT_STTS_CD, '4', 1, '5', 1, '6', 1, 0) as STTS_CHECK
		                        from    COTBPRMMT a
		                              , COTBPRMDT b
		                        where   a.PRGM_ID = b.PRGM_ID
		                          and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                          and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                          and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || b.PRJT_TISS_CD || '%'))
		                          and   ((nvl( #{devpAsgnId} , '*') = '*') or (b.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                          and   (((nvl( #{afiSrchYn} , '*') = '*') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                 (( #{afiSrchYn}  = 'Y') and (a.PRGM_TYP_CD = 'A05')))
		                          and   ((nvl( #{prorBaseCd} , '*') = '*') or  (nvl(b.PROR_BASE_CD, 'N') = 'L1')
		                                )
		                          and   trunc(nvl(b.DVLR_TEST_FNSH_YMD,to_date('20151116', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd')
		                      ) tb
		              group by tb.PRJT_TISS_CD, tb.DEVP_ASGN_ID
		            ) xd  /* 개발실적(테스트 기준)  */
		          , ( select  tb.PRJT_TISS_CD
		                    , tb.DEVP_ASGN_ID
		                    , sum(tb.STTS_CHECK) as FINAL_COUNT
		              from    ( select  b.PRJT_TISS_CD
		                              , b.DEVP_ASGN_ID
		                              , decode(b.CRNT_STTS_CD, '4', 1, '5', 1, '6', 1, 0) as STTS_CHECK
		                        from    COTBPRMMT a
		                              , COTBPRMDT b
		                        where   a.PRGM_ID = b.PRGM_ID
		                          and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                          and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                          and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || b.PRJT_TISS_CD || '%'))
		                          and   ((nvl( #{devpAsgnId} , '*') = '*') or (b.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                          and   (((nvl( #{afiSrchYn} , '*') = '*') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                 (( #{afiSrchYn}  = 'Y') and (a.PRGM_TYP_CD = 'A05')))
		                          and   ((nvl( #{prorBaseCd} , '*') = '*') or  (nvl(b.PROR_BASE_CD, 'N') = 'L1')
		                                )
		                          and   ((trunc(nvl(b.DVLR_TEST_FNSH_YMD, to_date('20150101', 'yyyymmdd')) ) > to_date('20151115', 'yyyymmdd')) and
		                                 (trunc(nvl(b.DVLR_TEST_FNSH_YMD,to_date('29991231', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd'))
		                                )
		                      ) tb
		              group by tb.PRJT_TISS_CD, tb.DEVP_ASGN_ID
		            ) xe  /* 개발실적(테스트 기준) 생산성 기준 완료  */
		          , ( select  tb.PRJT_TISS_CD
		                    , tb.DEVP_ASGN_ID
		                    , count(*) as TOT
		                    , sum(tb.STTS_CHECK) as FINAL_COUNT
		              from    ( select  b.PRJT_TISS_CD
		                              , b.DEVP_ASGN_ID
		                              , decode(b.CRNT_STTS_CD, '4', 1, '5', 1, '6', 1, 0) as STTS_CHECK
		                        from    COTBPRMMT a
		                              , COTBPRMDT b
		                        where   a.PRGM_ID = b.PRGM_ID
		                          and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                          and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                          and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || b.PRJT_TISS_CD || '%'))
		                          and   ((nvl( #{devpAsgnId} , '*') = '*') or (b.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                          and   (((nvl( #{afiSrchYn} , '*') = '*') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                 (( #{afiSrchYn}  = 'Y') and (a.PRGM_TYP_CD = 'A05')))
		                          and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(b.PROR_BASE_CD, 'N') = 'L1')
		                                )
		                          and   trunc(nvl(b.DVLR_TEST_FNSH_YMD,to_date('29991231', 'yyyymmdd'))) = to_date( #{baseYmd} , 'yyyymmdd')
		                      ) tb
		              group by tb.PRJT_TISS_CD, tb.DEVP_ASGN_ID
		            ) xf   /* 개발실적(테스트 기준) 당일실적  */
		          , ( select  tb.PRJT_TISS_CD
		                    , tb.DEVP_ASGN_ID
		                    , count(*) as TOT
		                    , sum(tb.STTS_CHECK) as FINAL_COUNT
		              from    ( select  b.PRJT_TISS_CD
		                              , b.DEVP_ASGN_ID
		                              , decode(b.CRNT_STTS_CD, '3', 1, '4', 1, '5', 1, '6', 1, 0) as STTS_CHECK
		                        from    COTBPRMMT a
		                              , COTBPRMDT b
		                        where   a.PRGM_ID = b.PRGM_ID
		                          and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                          and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                          and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || b.PRJT_TISS_CD || '%'))
		                          and   ((nvl( #{devpAsgnId} , '*') = '*') or (b.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                          and   (((nvl( #{afiSrchYn} , '*') = '*') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                 (( #{afiSrchYn}  = 'Y') and (a.PRGM_TYP_CD = 'A05')))
		                          and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(b.PROR_BASE_CD, 'N') = 'L1')
		                                )
		                          and   trunc(nvl(b.ACRL_FNSH_YMD,to_date('20151116', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd')
		                      ) tb
		              group by tb.PRJT_TISS_CD, tb.DEVP_ASGN_ID
		            ) xg  /* 개발실적(코딩기준)  */
		          , ( select  tb.PRJT_TISS_CD
		                    , tb.DEVP_ASGN_ID
		                    , count(*) as TOT
		                    , sum(tb.STTS_CHECK) as FINAL_COUNT
		              from    ( select  b.PRJT_TISS_CD
		                              , b.DEVP_ASGN_ID
		                              , decode(b.CRNT_STTS_CD, '3', 1, '4', 1, '5', 1, '6', 1, 0) as STTS_CHECK
		                        from    COTBPRMMT a
		                              , COTBPRMDT b
		                        where   a.PRGM_ID = b.PRGM_ID
		                          and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                          and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                          and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || b.PRJT_TISS_CD || '%'))
		                          and   ((nvl( #{devpAsgnId} , '*') = '*') or (b.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                          and   (((nvl( #{afiSrchYn} , '*') = '*') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                 (( #{afiSrchYn}  = 'Y') and (a.PRGM_TYP_CD = 'A05')))
		                          and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(b.PROR_BASE_CD, 'N') = 'L1')
		                                )
		                          and   trunc(nvl(b.ACRL_FNSH_YMD,to_date('29991231', 'yyyymmdd'))) = to_date( #{baseYmd} , 'yyyymmdd')
		                      ) tb
		              group by tb.PRJT_TISS_CD, tb.DEVP_ASGN_ID
		            ) xh  /* 개발실적(코딩기준) 당일실적  */
		          , ( select  b.PRJT_TISS_CD
		                    , b.DEVP_ASGN_ID
		                    , count(*) as PLAN_CNT
		              from    COTBPRMMT a
		                    , COTBPRMDT b
		              where   a.PRGM_ID = b.PRGM_ID
		                and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || b.PRJT_TISS_CD || '%'))
		                and   ((nvl( #{devpAsgnId} , '*') = '*') or (b.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                and   (((nvl( #{afiSrchYn} , '*') = '*') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                       (( #{afiSrchYn}  = 'Y') and (a.PRGM_TYP_CD = 'A05')))
		                and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(b.PROR_BASE_CD, 'N') = 'L1')
		                      )
		                and   trunc(nvl(b.PLAN_FNSH_YMD,to_date('29991231', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd')
		              group by b.PRJT_TISS_CD, b.DEVP_ASGN_ID
		            ) xi  /* 개발실적(코딩기준) 누적계획  */
		          , ( select  b.PRJT_TISS_CD
		                    , b.DEVP_ASGN_ID
		                    , count(*) as PLAN_CNT
		              from    COTBPRMMT a
		                    , COTBPRMDT b
		              where   a.PRGM_ID = b.PRGM_ID
		                and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || b.PRJT_TISS_CD || '%'))
		                and   ((nvl( #{devpAsgnId} , '*') = '*') or (b.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                and   (((nvl( #{afiSrchYn} , '*') = '*') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                       (( #{afiSrchYn}  = 'Y') and (a.PRGM_TYP_CD = 'A05')))
		                and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(b.PROR_BASE_CD, 'N') = 'L1')
		                      )
		                and   trunc(nvl(b.DVLR_TEST_PLAN_YMD,to_date('29991231', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd')
		              group by b.PRJT_TISS_CD, b.DEVP_ASGN_ID
		            ) xj  /* 개발실적(테스트기준) 누적계획  */
		          , ( select  tb.PRJT_TISS_CD
		                     , tb.DEVP_ASGN_ID
		                     , sum(tb.STTS_CHECK) as FINAL_COUNT
		               from    ( select  b.PRJT_TISS_CD
		                               , b.DEVP_ASGN_ID
		                               , decode(b.CRNT_STTS_CD, '4', 1, '5', 1, '6', 1, 0) as STTS_CHECK
		                         from    COTBPRMMT a
		                               , COTBPRMDT b
		                         where   a.PRGM_ID = b.PRGM_ID
		                           and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                           and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                           and   ((nvl( #{afiSrchNm} , '*') = '*') or ( #{afiSrchNm}  like '%' || b.PRJT_TISS_CD || '%'))
		                           and   ((nvl( #{devpAsgnId} , '*') = '*') or (b.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                           and   (((nvl( #{afiSrchYn} , '*') = '*') and (a.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                  (( #{afiSrchYn}  = 'Y') and (a.PRGM_TYP_CD = 'A05')))
		                           and   ((nvl( #{prorBaseCd} , '*') = '*') or  (nvl(b.PROR_BASE_CD, 'N') = 'L1')
		                                 )
		                           and   ((trunc(nvl(b.ACRL_FNSH_YMD, to_date('20150101', 'yyyymmdd')) ) > to_date('20151115', 'yyyymmdd')) and
		                                  (trunc(nvl(b.ACRL_FNSH_YMD,to_date('29991231', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd'))
		                                 )
		                       ) tb
		               group by tb.PRJT_TISS_CD, tb.DEVP_ASGN_ID
		             ) xk  /* 개발실적(코딩 기준) 생산성 기준 완료  */
		    where   xa.COMN_DTLS_CD_1 = xb.PRJT_TISS_CD
		      and   xb.DEVP_ASGN_ID   = xbb.USER_ID(+)
		      and   xb.PRJT_TISS_CD   = xc.PRJT_TISS_CD(+)
		      and   xb.DEVP_ASGN_ID   = xc.DEVP_ASGN_ID(+)
		      and   xb.PRJT_TISS_CD   = xd.PRJT_TISS_CD(+)
		      and   xb.DEVP_ASGN_ID   = xd.DEVP_ASGN_ID(+)
		      and   xb.PRJT_TISS_CD   = xe.PRJT_TISS_CD(+)
		      and   xb.DEVP_ASGN_ID   = xe.DEVP_ASGN_ID(+)
		      and   xb.PRJT_TISS_CD   = xf.PRJT_TISS_CD(+)
		      and   xb.DEVP_ASGN_ID   = xf.DEVP_ASGN_ID(+)
		      and   xb.PRJT_TISS_CD   = xg.PRJT_TISS_CD(+)
		      and   xb.DEVP_ASGN_ID   = xg.DEVP_ASGN_ID(+)
		      and   xb.PRJT_TISS_CD   = xh.PRJT_TISS_CD(+)
		      and   xb.DEVP_ASGN_ID   = xh.DEVP_ASGN_ID(+)
		      and   xb.PRJT_TISS_CD   = xi.PRJT_TISS_CD(+)
		      and   xb.DEVP_ASGN_ID   = xi.DEVP_ASGN_ID(+)
		      and   xb.PRJT_TISS_CD   = xj.PRJT_TISS_CD(+)
		      and   xb.DEVP_ASGN_ID   = xj.DEVP_ASGN_ID(+)
		      and   xb.PRJT_TISS_CD   = xk.PRJT_TISS_CD(+)
		      and   xb.DEVP_ASGN_ID   = xk.DEVP_ASGN_ID(+)
		    order by xa.SCRN_DSPL_SQNC, xa.SCRN_DSPL_SQNC_1
		]]>
	</select>




	<resultMap id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest02-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO">
	
		<result property="comnDtlsCd" column="COMN_DTLS_CD"/>
		<result property="detlCdNm" column="DETL_CD_NM"/>
		<result property="comnDtlsCd1" column="COMN_DTLS_CD_1"/>
		<result property="detlCdNm1" column="DETL_CD_NM_1"/>
		<result property="useCqy" column="USE_CQY"/>
		<result property="useCqy1" column="USE_CQY_1"/>
		<result property="useCqy2" column="USE_CQY_2"/>
		<result property="useCqy3" column="USE_CQY_3"/>
		<result property="useCqy4" column="USE_CQY_4"/>
		<result property="useCqy5" column="USE_CQY_5"/>
		<result property="useCqy6" column="USE_CQY_6"/>
		<result property="useCqy7" column="USE_CQY_7"/>
		<result property="fxngRa" column="FXNG_RA"/>
		<result property="useCqy8" column="USE_CQY_8"/>
		<result property="useCqy9" column="USE_CQY_9"/>
		<result property="useCqy10" column="USE_CQY_10"/>
		<result property="useCqy11" column="USE_CQY_11"/>
		<result property="fxngRa1" column="FXNG_RA_1"/>
		<result property="useCqy12" column="USE_CQY_12"/>
		<result property="useCqy13" column="USE_CQY_13"/>
		<result property="useCqy14" column="USE_CQY_14"/>
		<result property="useCqy15" column="USE_CQY_15"/>
		<result property="fxngRa2" column="FXNG_RA_2"/>
		<result property="useCqy16" column="USE_CQY_16"/>
		<result property="useCqy17" column="USE_CQY_17"/>
		<result property="useCqy18" column="USE_CQY_18"/>
		<result property="useCqy19" column="USE_CQY_19"/>
		<result property="fxngRa3" column="FXNG_RA_3"/>
		<result property="useCqy20" column="USE_CQY_20"/>
		<result property="useCqy21" column="USE_CQY_21"/>
		<result property="useCqy22" column="USE_CQY_22"/>
		<result property="useCqy23" column="USE_CQY_23"/>
	</resultMap>
	
    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest02 (cod_mtestmt_l04 테스트 진행현황 (WG별) 조회) 
        Description :                                           cod_mtestmt_l04 테스트 진행현황 (WG별) 조회
                                            
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO
		resultMap : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest02-result
    -->
	<select id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest02"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO"  resultMap="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest02-result" useCache="true" flushCache="false">
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest02 */
		<![CDATA[
		    select  /*+ cod_mtestmt_l04$S01_[비대상]테스트 진행현황 (WG별) 조회 */ 
		             xa.COMN_DTLS_CD
		           , xa.DETL_CD_NM
		           , xa.COMN_DTLS_CD_1
		           , xa.DETL_CD_NM_1
		           , xb.TOT_CNT as             USE_CQY   -- "개발팀의뢰"
		           , xb.RE_CNT as              USE_CQY_1 -- "임시보류"
		           , xb.TOT_CNT - xb.RE_CNT as USE_CQY_2 -- "테스트대상"
		           , xb.BEF_TST as             USE_CQY_3 -- "배정전"
		           , xb.FINAL_WORK as          USE_CQY_4 -- "수행완료"
		           , xb.BE_WORK as             USE_CQY_5 -- "수행중"
		           , xb.NONE_WORK as           USE_CQY_6 -- "수행전"
		           , xbb.TESTER_CNT as         USE_CQY_7 -- "수행테스터"
		           , decode((xb.TOT_CNT - xb.RE_CNT), 0, 0, trunc(xb.FINAL_WORK / (xb.TOT_CNT - xb.RE_CNT) * 100, 1)) as FXNG_RA -- "수행율"
		           , 0 as                      USE_CQY_8 -- "수행완료"
		           , 0 as                      USE_CQY_9 -- "성공"
		           , 0 as                      USE_CQY_10 -- "결함"
		           , 0 as                      USE_CQY_11 -- "협의대상"
		           , decode((nvl(xb.SUC, 0) + nvl(xb.FAL, 0)), 0 , 0, trunc(nvl(xb.FAL, 0) / (nvl(xb.SUC, 0) + nvl(xb.FAL, 0)) * 100, 2)) as FXNG_RA_1 -- "결함율"
		           , nvl(xb.FAL, 0) as         USE_CQY_12 -- "조치대상"
		           , nvl(xb.FNAL, 0) as        USE_CQY_13 -- "조치완료"
		           , nvl(xb.BEFIX, 0) as       USE_CQY_14 -- "개발팀 조치중"
		           , nvl(xb.REINS, 0) as       USE_CQY_15 -- "현업 확인중"
		           , decode(nvl(xb.FAL, 0), 0, 0, trunc((nvl(xb.FNAL, 0) + nvl(xb.REINS, 0))/ nvl(xb.FAL, 0) * 100, 1)) as FXNG_RA_2 --"조치율"
		           , xb.FINAL_WORK as          USE_CQY_16 -- "수행완료"
		           , nvl(xb.TSUC, 0) as        USE_CQY_17 -- "통과"
		           , 0 as                      USE_CQY_18 -- "결함"
		           , nvl(xb.TFIX, 0) as        USE_CQY_19 -- "협의대상"
		           , decode(nvl(xb.FINAL_WORK, 0), 0, 0, trunc(nvl(xb.TSUC, 0) / nvl(xb.FINAL_WORK, 0) * 100, 1)) as FXNG_RA_3 -- "통과율"
		           , 0 as                      USE_CQY_20 -- "개발팀확인중"
		           , nvl(xb.TREP, 0) + nvl(xb.BEFIX, 0) as USE_CQY_21 -- "개발팀확인중"
		           , nvl(xb.ERRORCNT, 0) as    USE_CQY_22 -- "배정오류"
		           , 0 as                      USE_CQY_23 -- "비대상"
		    from     ( select  '' as COMN_DTLS_CD
		                     , '' as DETL_CD_NM
		                     , 0  as SCRN_DSPL_SQNC
		                     , a.COMN_DTLS_CD as COMN_DTLS_CD_1
		                     , a.DETL_CD_NM   as DETL_CD_NM_1
		                     , a.SCRN_DSPL_SQNC  as SCRN_DSPL_SQNC_1
		               from    CCCMCDDMT a
		               where   a.COMN_GRP_CD  = 'COR_014'
		               union
		               select  '' as COMN_DTLS_CD
		                     , '' as DETL_CD_NM
		                     , 0  as SCRN_DSPL_SQNC
		                     , 'ZZ' as COMN_DTLS_CD_1
		                     , 'WG정보 누락' as DETL_CD_NM_1
		                     , 99999  as SCRN_DSPL_SQNC_1
		               from    dual
		             ) xa    /* 시스템 정보  */
		           , ( select   nvl(b.WG_CD, 'ZZ') as WG_CD
		                      , count(*) as TOT_CNT
		                      , sum(decode(a.TEST_PSBL_TRGT_YN, '2', 1, 0)) as RE_CNT
		                      , sum(decode(a.TEST_ASGN_ID_CNT, 0, decode(a.TEST_PSBL_TRGT_YN, '1', 1, 0), 0)) as BEF_TST
		                      , sum(a.TEST_ASGN_ID_CNT) as TESTER_CNT
		                      , sum(c.NONE_WORK) as NONE_WORK     /* "수행전" --USE_CQY_6 */
		                      , sum(c.BE_WORK) as BE_WORK         /* "수행중"  --USE_CQY_5 */
		                      , sum(c.FINAL_WORK) as FINAL_WORK   /* "수행완료" --USE_CQY_4 */
		                      , sum(c.ERRORCNT) as ERRORCNT       /* "배정오류" --USE_CQY_22 */
		                      , sum(decode(e.ACT_STATE, 'S', 1, 0)) as SUC
		                      , sum(decode(e.ACT_STATE, 'F', 1, 0)) as FAL  --"조치대상"  --USE_CQY_12
		                      , sum(decode(f.FLOW_STATE, 'S', 1, 0)) as FNAL
		                      , sum(decode(f.FLOW_STATE, 'A', 1, 0)) as BEFIX
		                      , sum(decode(f.FLOW_STATE, 'O', 1, 0)) as REINS
		                      , sum(decode(g.ACT_STATE, 'S', 1, 0)) as TSUC
		                      , sum(decode(g.ACT_STATE, 'F', 1, 0)) as TFAL
		                      , sum(decode(g.ACT_STATE, 'C', 1, 0)) as TFIX
		                      , sum(decode(g.ACT_STATE, 'R', 1, 0)) as TREP
		               from     ( select  sa.PRGM_ID
		                                , nvl(sa.TEST_PSBL_TRGT_YN, '1') as TEST_PSBL_TRGT_YN
		                                , nvl(sb.TEST_ASGN_ID_CNT, 0) as TEST_ASGN_ID_CNT
		                          from    COMTESTMT sa
		                                , ( select  PRGM_ID
		                                          , TEST_STEP_CD
		                                          , count(*) as TEST_ASGN_ID_CNT
		                                    from    COMTESTDT
		                                    where   nvl(DLTN_YN, 'N') <> 'Y'
		                                      and   TEST_STEP_CD =  #{testStepCd} 
		                                    group by PRGM_ID
		                                           , TEST_STEP_CD
		                                  ) sb
		                          where   nvl(sa.DLTN_YN, 'N') <> 'Y'
		                            and   sa.TEST_STEP_CD =  #{testStepCd} 
		                            and   sa.PRGM_ID      = sb.PRGM_ID(+)
		                            and   sa.TEST_STEP_CD = sb.TEST_STEP_CD(+)
		                        ) a   /* 테스트 의뢰 현황  */
		                      , ( select   ca.WG_CD
		                                 , ca.PRGM_ID
		                          from     ( select  sb.WG_CD
		                                           , sb.PRGM_ID
		                                           , sum(decode(nvl(sc.CRNT_STTS_CD, '1'), '5', 0, '6', 0, 1)) as CHECK_VALUE
		                                     from    COTBPRMMT sb
		                                           , COTBPRMDT sc
		                                     where   nvl(sb.DLTN_YN, 'N') <> 'Y'
		                                       and   nvl(sc.DLTN_YN, 'N') <> 'Y'
		                                       and   sb.PRGM_ID = sc.PRGM_ID
		                                       and   ((( #{afiSrchYn}  = '1') and (sb.PRGM_TYP_CD in ('A01', 'A02'))) or
		                                              (( #{afiSrchYn}  = '2') and (sb.PRGM_TYP_CD = 'A03')) or
		                                              (( #{afiSrchYn}  = '3') and (sb.PRGM_TYP_CD = 'A05')))
		                                       and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(sb.PROR_BASE_CD, 'N') = 'L1'))
		                                       and   ((nvl( #{afiSrchDvsnVl} , '*') = '*') or (( #{afiSrchDvsnVl}  = 'Q') and (sb.PRJT_TISS_CD <> 'SQ')))
		                                       and   ((nvl( #{afiSrchDvsnCtn} , '*') = '*') or
		                                              ((nvl( #{afiSrchDvsnCtn} , '*') = 'S') and (nvl(sb.PRNC_YN, 'N') = 'S')) or
		                                              ((nvl( #{afiSrchDvsnCtn} , '*') = 'M') and (nvl(sb.PRNC_YN, 'N') in ('S', 'M')))
		                                             )
		                                     group by sb.WG_CD
		                                            , sb.PRGM_ID
		                                   ) ca
		                          where    ca.CHECK_VALUE = 0
		                        ) b    /* 조건 대상 프로그램 */
		                      , ( select  ca.PRGM_ID
		                                , sum(decode(ca.PTEST_ST, 0, 1, 0)) as NONE_WORK     /* "수행전" --USE_CQY_6 */
		                                , sum(decode(ca.PTEST_ST, 1, 1, 0)) as BE_WORK       /* "수행중"  --USE_CQY_5 */
		                                , sum(decode(ca.PTEST_ST, 2, 1, 0)) as FINAL_WORK    /* "수행완료" --USE_CQY_4 */
		                                , sum(decode(ca.PTEST_ST, 3, 1, 0)) as ERRORCNT      /* "배정오류" --USE_CQY_22 */
		                          from  ( select  tta.PRGM_ID
		                                        , case when (tta.BEWORK + tta.FINALWORK + tta.ERRORCNT) = 0 then 0                        /* 미수행 */
		                                               when (tta.NOWORK + tta.BEWORK > 0) then 1                                          /* 수행중 */
		                                               when ((tta.NOWORK + tta.BEWORK) = 0) and (tta.FINALWORK > 0 ) then 2               /* 완료     */
		                                               when ((tta.NOWORK + tta.BEWORK + tta.FINALWORK) = 0) and (tta.ERRORCNT > 0) then 3 /* 수행오류 */
		                                          end as PTEST_ST
		                                  from    ( select  ta.PRGM_ID
		                                                  , sum(decode(ta.TEST_ST, 0, 1, 0)) as NOWORK       /* 미수행   */
		                                                  , sum(decode(ta.TEST_ST, 1, 1, 0)) as BEWORK       /* 수행중   */
		                                                  , sum(decode(ta.TEST_ST, 2, 1, 0)) as FINALWORK    /* 완료     */
		                                                  , sum(decode(ta.TEST_ST, 3, 1, 0)) as ERRORCNT     /* 수행오류 */
		                                            from    ( select  xa.PRGM_ID
		                                                            , xa.TEST_ASGN_ID
		                                                            , case when (xa.T1 + xa.T2 + xa.T3) = 0 then 0                      /* 미수행   */
		                                                                   when ((xa.T1 + xa.T2 + xa.T3) > 0) and (xa.T0 > 0 ) then 1   /* 수행중   */
		                                                                   when ((xa.T1 + xa.T2) > 0) and (xa.T0 = 0 ) then 2           /* 완료     */
		                                                                   when ((xa.T0 + xa.T1 + xa.T2) = 0) and (xa.T3 > 0 ) then 3   /* 수행오류 */
		                                                              end as TEST_ST
		                                                      from    ( select  /*+ use_hash(a b) */
		                                                                        a.PRGM_ID
		                                                                      , a.TEST_ASGN_ID
		                                                                      , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T0', 1, 0)), 0) as T0
		                                                                      , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T1', 1, 0)), 0) as T1
		                                                                      , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T2', 1, 0)), 0) as T2
		                                                                      , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T3', 1, 0)), 0) as T3
		                                                                from    ( select   /*+ use_hash(sc sa) */
		                                                                                   sa.PRGM_ID
		                                                                                 , sa.TEST_STEP_CD
		                                                                                 , sa.TEST_ASGN_ID
		                                                                                 , sb.FNCT_ID
		                                                                          from     COMTESTDT sa  /* 프로그램 테스터 관리 배정정보 */
		                                                                                 , COTBPRMDT sb
		                                                                                 , COMTESTMT sc  /* 프로그램 테스터 관리 마스터 */
		                                                                          where    nvl(sa.DLTN_YN, 'N') <> 'Y'
		                                                                            and    nvl(sb.DLTN_YN, 'N') <> 'Y'
		                                                                            and    nvl(sb.DSCS_YN, 'N') = 'Y'
		                                                                            and    sa.PRGM_ID      = sb.PRGM_ID
		                                                                            and    sa.TEST_STEP_CD =  #{testStepCd} 
		                                                                            and    sa.PRGM_ID      = sc.PRGM_ID
		                                                                            and    sa.TEST_STEP_CD = sc.TEST_STEP_CD
		                                                                            and    nvl(sc.DLTN_YN, 'N') <> 'Y'
		                                                                            and    nvl(sc.TEST_PSBL_TRGT_YN, '1') <> '2'
		                                                                        ) a
		                                                                      , COTSTERMT b  /* 단위 테스트 관리 */
		                                                                where   a.PRGM_ID      = b.PRGM_ID(+)
		                                                                  and   a.TEST_STEP_CD = b.TEST_STEP_CD(+)
		                                                                  and   a.TEST_ASGN_ID = b.TEST_ASGN_ID(+)
		                                                                  and   a.FNCT_ID      = b.FNCT_ID(+)
		                                                                  and   nvl(b.DLTN_YN(+), 'N') <> 'Y'
		                                                                group by a.PRGM_ID
		                                                                       , a.TEST_ASGN_ID
		                                                              ) xa
		                                                    ) ta
		                                            group by ta.PRGM_ID
		                                          ) tta
		                                ) ca
		                          group by ca.PRGM_ID
		                        ) c  /* 테스트 수행현황  */
		                      , ( select  tta.PRGM_ID
		                          from    ( select  ta.PRGM_ID
		                                          , sum(decode(ta.TEST_ST, 0, 1, 0)) as NOWORK       /* 미수행   */
		                                          , sum(decode(ta.TEST_ST, 1, 1, 0)) as BEWORK       /* 수행중   */
		                                          , sum(decode(ta.TEST_ST, 2, 1, 0)) as FINALWORK    /* 완료     */
		                                          , sum(decode(ta.TEST_ST, 3, 1, 0)) as ERRORCNT     /* 수행오류 */
		                                    from    ( select  xa.PRGM_ID
		                                                    , xa.TEST_ASGN_ID
		                                                    , case when (xa.T1 + xa.T2 + xa.T3) = 0 then 0                      /* 미수행   */
		                                                           when ((xa.T1 + xa.T2 + xa.T3) > 0) and (xa.T0 > 0 ) then 1   /* 수행중   */
		                                                           when ((xa.T1 + xa.T2) > 0) and (xa.T0 = 0 ) then 2           /* 완료     */
		                                                           when ((xa.T0 + xa.T1 + xa.T2) = 0) and (xa.T3 > 0 ) then 3   /* 수행오류 */
		                                                      end as TEST_ST
		                                              from    ( select  /*+ use_hash(a b) */
		                                                                a.PRGM_ID
		                                                              , a.TEST_ASGN_ID
		                                                              , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T0', 1, 0)), 0) as T0
		                                                              , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T1', 1, 0)), 0) as T1
		                                                              , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T2', 1, 0)), 0) as T2
		                                                              , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T3', 1, 0)), 0) as T3
		                                                        from    ( select   /*+ use_hash(sc sa) */
		                                                                           sa.PRGM_ID
		                                                                         , sa.TEST_STEP_CD
		                                                                         , sa.TEST_ASGN_ID
		                                                                         , sb.FNCT_ID
		                                                                  from     COMTESTDT sa  /* 프로그램 테스터 관리 배정정보 */
		                                                                         , COTBPRMDT sb
		                                                                         , COMTESTMT sc  /* 프로그램 테스터 관리 마스터 */
		                                                                  where    nvl(sa.DLTN_YN, 'N') <> 'Y'
		                                                                    and    nvl(sb.DLTN_YN, 'N') <> 'Y'
		                                                                    and    nvl(sb.DSCS_YN, 'N') = 'Y'
		                                                                    and    sa.PRGM_ID      = sb.PRGM_ID
		                                                                    and    sa.TEST_STEP_CD =  #{testStepCd} 
		                                                                    and    sa.PRGM_ID      = sc.PRGM_ID
		                                                                    and    sa.TEST_STEP_CD = sc.TEST_STEP_CD
		                                                                    and    nvl(sc.DLTN_YN, 'N') <> 'Y'
		                                                                    and    nvl(sc.TEST_PSBL_TRGT_YN, '1') <> '2'
		                                                                ) a
		                                                              , COTSTERMT b  /* 단위 테스트 관리 */
		                                                        where   a.PRGM_ID      = b.PRGM_ID(+)
		                                                          and   a.TEST_STEP_CD = b.TEST_STEP_CD(+)
		                                                          and   a.TEST_ASGN_ID = b.TEST_ASGN_ID(+)
		                                                          and   a.FNCT_ID      = b.FNCT_ID(+)
		                                                          and   nvl(b.DLTN_YN(+), 'N') <> 'Y'
		                                                        group by a.PRGM_ID
		                                                               , a.TEST_ASGN_ID
		                                                      ) xa
		                                            ) ta
		                                    group by ta.PRGM_ID
		                                  ) tta
		                          where   ((tta.NOWORK + tta.BEWORK) = 0)
		                            and   (tta.FINALWORK > 0 )
		                        ) d  /* 수행완료 대상(테스트 결과, 결함조치 모수) */
		                      , ( select  za.PRGM_ID
		                                , case when (za.SUC > 0) and ((za.FAL + za.FIX + za.REP) = 0) then 'S'
		                                       when za.FAL > 0 then 'F'
		                                       when (za.FIX > 0) and (za.FAL = 0) then 'C'
		                                       when (za.REP > 0) and (za.FAL = 0) and (za.FIX = 0) then 'R'
		                                  end ACT_STATE
		                          from    ( select  tta.PRGM_ID
		                                          , sum(decode(tta.ACT_STATE, 'S', 1, 0)) as SUC   /* 성공   */
		                                          , sum(decode(tta.ACT_STATE, 'F', 1, 0)) as FAL   /* 결함   */
		                                          , sum(decode(tta.ACT_STATE, 'C', 1, 0)) as FIX   /* 협의대상 */
		                                          , sum(decode(tta.ACT_STATE, 'R', 1, 0)) as REP   /* 개발팀확인중 */
		                                    from    ( select  ta.PRGM_ID
		                                                    , ta.TEST_ASGN_ID
		                                                    , case when (ta.SUC > 0) and ((ta.FAL + ta.MET + ta.REP) = 0) then 'S'
		                                                           when (ta.FAL > 0) then 'F'
		                                                           when (ta.MET > 0) and (ta.FAL = 0) then 'C'
		                                                           when (ta.REP > 0) and (ta.FAL = 0) and (ta.MET = 0) then 'R'
		                                                      end ACT_STATE
		                                              from    ( select  xa.PRGM_ID
		                                                              , xa.TEST_ASGN_ID
		                                                              , nvl(sum(decode(xa.ACT_STATE, 'S', 1, 0)), 0) as SUC
		                                                              , nvl(sum(decode(xa.ACT_STATE, 'F', 1, 0)), 0) as FAL
		                                                              , nvl(sum(decode(xa.ACT_STATE, 'C', 1, 0)), 0) as MET
		                                                              , nvl(sum(decode(xa.ACT_STATE, 'R', 1, 0)), 0) as REP
		                                                        from    ( select  a.PRGM_ID
		                                                                        , a.TEST_ASGN_ID
		                                                                          /* 성공S>실패F>확인중C  */
		                                                                        , case when a.TEST_RSLT_CD = 'T1' then 'S'
		                                                                               when a.TEST_RSLT_CD = 'T2' then decode(b.FULT_CRNT_STTS_CD, 'A1', 'F', 'A9','C', 'R')
		                                                                          end as ACT_STATE
		                                                                  from    COTSTERMT a
		                                                                        , COTSTERDT b
		                                                                  where   nvl(a.DLTN_YN, 'N') <> 'Y'
		                                                                    and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                                                                    and   a.PRGM_ID      = b.PRGM_ID(+)
		                                                                    and   a.TEST_STEP_CD = b.TEST_STEP_CD(+)
		                                                                    and   a.TEST_ASGN_ID = b.TEST_ASGN_ID(+)
		                                                                    and   a.TEST_ID      = b.TEST_ID(+)
		                                                                    and   a.TEST_STEP_CD =  #{testStepCd} 
		                                                                    and   a.TEST_RSLT_CD in ('T1', 'T2')
		                                                                ) xa
		                                                        group by xa.PRGM_ID
		                                                               , xa.TEST_ASGN_ID
		                                                      ) ta
		                                            ) tta
		                                    group by tta.PRGM_ID
		                                  ) za
		                        ) e  /* 테스트 결과  */
		                      , ( select  za.PRGM_ID
		                                , case when (za.FNAL > 0) and ((za.BEFIX + za.REINS) = 0) then 'S'
		                                       when za.BEFIX > 0 then 'A'
		                                       when (za.REINS > 0) and (za.BEFIX = 0) then 'O'
		                                  end FLOW_STATE
		                          from    ( select  tta.PRGM_ID
		                                          , sum(decode(tta.FLOW_STATE, 'S', 1, 0)) as FNAL    /* 조치완료       */
		                                          , sum(decode(tta.FLOW_STATE, 'A', 1, 0)) as BEFIX   /* 개발팀 조치중  */
		                                          , sum(decode(tta.FLOW_STATE, 'O', 1, 0)) as REINS   /* 현업확인중     */
		                                    from    ( select  ta.PRGM_ID
		                                                    , ta.TEST_ASGN_ID
		                                                    , case when (ta.FNAL > 0) and ((ta.BEFIX + ta.REINS) = 0) then 'S'
		                                                           when ta.BEFIX > 0 then 'A'
		                                                           when (ta.REINS > 0) and (ta.BEFIX = 0) then 'O'
		                                                      end FLOW_STATE
		                                              from    ( select   sa.PRGM_ID
		                                                               , sa.TEST_ASGN_ID
		                                                               , nvl(sum(decode(sa.FLOW_STATE, 'S', 1, 0)), 0) as FNAL
		                                                               , nvl(sum(decode(sa.FLOW_STATE, 'A', 1, 0)), 0) as BEFIX
		                                                               , nvl(sum(decode(sa.FLOW_STATE, 'O', 1, 0)), 0) as REINS
		                                                        from    ( select  a.PRGM_ID
		                                                                        , a.TEST_ASGN_ID
		                                                                          /* S 조치완료, A 개발팀 조치중, O 현업확인중 */
		                                                                        , case when nvl(b.FULT_PRSG_STTS_CD, '1') = '5' then 'S'
		                                                                               when nvl(b.FULT_PRSG_STTS_CD, '1') in ('1', '2', '6') then 'A'
		                                                                               when nvl(b.FULT_PRSG_STTS_CD, '1') in ('3', '4') then 'O'
		                                                                          end as FLOW_STATE
		                                                                  from    COTSTERMT a
		                                                                        , COTSTERDT b
		                                                                  where   nvl(a.DLTN_YN, 'N') <> 'Y'
		                                                                    and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                                                                    and   a.PRGM_ID      = b.PRGM_ID
		                                                                    and   a.TEST_STEP_CD = b.TEST_STEP_CD
		                                                                    and   a.TEST_ASGN_ID = b.TEST_ASGN_ID
		                                                                    and   a.TEST_ID      = b.TEST_ID
		                                                                    and   a.TEST_STEP_CD =  #{testStepCd} 
		                                                                    and   a.TEST_RSLT_CD = 'T2'
		                                                                    and   b.FULT_CRNT_STTS_CD = 'A1'
		                                                                    and   b.FULT_PRSG_STTS_CD in ('1', '2', '3', '4', '5', '6')
		                                                                ) sa
		                                                        group by sa.PRGM_ID
		                                                               , sa.TEST_ASGN_ID
		                                                      ) ta
		                                            ) tta
		                                    group by  tta.PRGM_ID
		                                  ) za
		                        ) f  /* 결함조치현황 */
		                      , ( select  za.PRGM_ID
		                                , case when (za.SUC > 0) and ((za.FAL + za.FIX + za.REP) = 0) then 'S'
		                                       when za.FAL > 0 then 'F'
		                                       when (za.FIX > 0) and (za.FAL = 0) then 'C'
		                                       when (za.REP > 0) and (za.FAL = 0) and (za.FIX = 0) then 'R'
		                                  end ACT_STATE
		                          from    ( select  tta.PRGM_ID
		                                          , sum(decode(tta.ACT_STATE, 'S', 1, 0)) as SUC   /* 통과   */
		                                          , sum(decode(tta.ACT_STATE, 'F', 1, 0)) as FAL   /* 결함   */
		                                          , sum(decode(tta.ACT_STATE, 'C', 1, 0)) as FIX   /* 협의대상 */
		                                          , sum(decode(tta.ACT_STATE, 'R', 1, 0)) as REP   /* 개발팀확인중 */
		                                    from    ( select  ta.PRGM_ID
		                                                    , ta.TEST_ASGN_ID
		                                                    , case when (ta.SUC > 0) and ((ta.FAL + ta.MET + ta.REP) = 0) then 'S'
		                                                           when ta.FAL > 0 then 'F'
		                                                           when (ta.MET > 0) and (ta.FAL = 0)  then 'C'
		                                                           when (ta.REP > 0) and (ta.FAL = 0) and (ta.MET = 0) then 'R'
		                                                      end ACT_STATE
		                                              from    ( select  xa.PRGM_ID
		                                                              , xa.TEST_ASGN_ID
		                                                              , nvl(sum(decode(xa.ACT_STATE, 'S', 1, 0)), 0) as SUC
		                                                              , nvl(sum(decode(xa.ACT_STATE, 'F', 1, 0)), 0) as FAL
		                                                              , nvl(sum(decode(xa.ACT_STATE, 'C', 1, 0)), 0) as MET
		                                                              , nvl(sum(decode(xa.ACT_STATE, 'R', 1, 0)), 0) as REP
		                                                        from    ( select  a.PRGM_ID
		                                                                        , a.TEST_ASGN_ID
		                                                                          /* 성공S>실패F>확인중C  */
		                                                                        , case when a.TEST_RSLT_CD = 'T1' then 'S'
		                                                                               when a.TEST_RSLT_CD = 'T2' then decode(b.FULT_CRNT_STTS_CD, 'A1', decode(b.FULT_PRSG_STTS_CD, '5', 'S', 'F'), 'A9','C', 'R')
		                                                                          end as ACT_STATE
		                                                                  from    COTSTERMT a
		                                                                        , COTSTERDT b
		                                                                  where   nvl(a.DLTN_YN, 'N') <> 'Y'
		                                                                    and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                                                                    and   a.PRGM_ID      = b.PRGM_ID(+)
		                                                                    and   a.TEST_STEP_CD = b.TEST_STEP_CD(+)
		                                                                    and   a.TEST_ASGN_ID = b.TEST_ASGN_ID(+)
		                                                                    and   a.TEST_ID      = b.TEST_ID(+)
		                                                                    and   a.TEST_STEP_CD =  #{testStepCd} 
		                                                                    and   a.TEST_RSLT_CD in ('T1', 'T2')
		                                                                ) xa
		                                                        group by xa.PRGM_ID
		                                                               , xa.TEST_ASGN_ID
		                                                      ) ta
		                                            ) tta
		                                    group by tta.PRGM_ID
		                                  ) za
		                        ) g  /* 최종 테스트 결과  */
		               where    a.PRGM_ID = b.PRGM_ID
		                 and    a.PRGM_ID = c.PRGM_ID(+)
		                 and    a.PRGM_ID = d.PRGM_ID(+)
		                 and    d.PRGM_ID = e.PRGM_ID(+)
		                 and    d.PRGM_ID = f.PRGM_ID(+)
		                 and    d.PRGM_ID = g.PRGM_ID(+)
		               group by nvl(b.WG_CD, 'ZZ')
		             ) xb
		           , ( select  ta.WG_CD
		                     , count(*) as TESTER_CNT
		               from    ( select  nvl(b.WG_CD, 'ZZ') as WG_CD
		                               , a.TEST_ASGN_ID
		                         from    COMTESTDT a
		                               , COTBPRMMT b
		                         where   nvl(a.DLTN_YN, 'N') <> 'Y'
		                           and   a.PRGM_ID = b.PRGM_ID
		                           and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                           and   a.TEST_STEP_CD =  #{testStepCd} 
		                           and   ((( #{afiSrchYn}  = '1') and (b.PRGM_TYP_CD in ('A01', 'A02'))) or
		                                  (( #{afiSrchYn}  = '2') and (b.PRGM_TYP_CD = 'A03')) or
		                                  (( #{afiSrchYn}  = '3') and (b.PRGM_TYP_CD = 'A05')))
		                           and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(b.PROR_BASE_CD, 'N') = 'L1'))
		                           and   not exists ( select  ha.PRGM_ID
		                                              from    COTBPRMDT ha
		                                              where   a.PRGM_ID = ha.PRGM_ID
		                                                and   nvl(ha.DLTN_YN, 'N') <> 'Y'
		                                                and   nvl(ha.CRNT_STTS_CD, '1') in ('1', '2', '3', '4')
		                                            )
		                           and   ((nvl( #{afiSrchDvsnCtn} , '*') = '*') or
		                                  ((nvl( #{afiSrchDvsnCtn} , '*') = 'S') and (nvl(b.PRNC_YN, 'N') = 'S')) or
		                                  ((nvl( #{afiSrchDvsnCtn} , '*') = 'M') and (nvl(b.PRNC_YN, 'N') in ('S', 'M')))
		                                 )
		                         group by nvl(b.WG_CD, 'ZZ')
		                                , a.TEST_ASGN_ID
		                       ) ta
		               group by ta.WG_CD
		             ) xbb  /* 테스터 수 */
		    where    xa.COMN_DTLS_CD_1 = xb.WG_CD
		      and    xa.COMN_DTLS_CD_1 = xbb.WG_CD(+)
		    order by xa.SCRN_DSPL_SQNC, xa.SCRN_DSPL_SQNC_1
		]]>
	</select>




	<resultMap id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest03-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO">
	
		<result property="comnDtlsCd" column="COMN_DTLS_CD"/>
		<result property="detlCdNm" column="DETL_CD_NM"/>
		<result property="comnDtlsCd1" column="COMN_DTLS_CD_1"/>
		<result property="detlCdNm1" column="DETL_CD_NM_1"/>
		<result property="useCqy" column="USE_CQY"/>
		<result property="useCqy1" column="USE_CQY_1"/>
		<result property="useCqy2" column="USE_CQY_2"/>
		<result property="useCqy3" column="USE_CQY_3"/>
		<result property="useCqy4" column="USE_CQY_4"/>
		<result property="useCqy5" column="USE_CQY_5"/>
		<result property="useCqy6" column="USE_CQY_6"/>
		<result property="useCqy7" column="USE_CQY_7"/>
		<result property="fxngRa" column="FXNG_RA"/>
		<result property="useCqy8" column="USE_CQY_8"/>
		<result property="useCqy9" column="USE_CQY_9"/>
		<result property="useCqy10" column="USE_CQY_10"/>
		<result property="useCqy11" column="USE_CQY_11"/>
		<result property="fxngRa1" column="FXNG_RA_1"/>
		<result property="useCqy12" column="USE_CQY_12"/>
		<result property="useCqy13" column="USE_CQY_13"/>
		<result property="useCqy14" column="USE_CQY_14"/>
		<result property="useCqy15" column="USE_CQY_15"/>
		<result property="fxngRa2" column="FXNG_RA_2"/>
		<result property="useCqy16" column="USE_CQY_16"/>
		<result property="useCqy17" column="USE_CQY_17"/>
		<result property="useCqy18" column="USE_CQY_18"/>
		<result property="useCqy19" column="USE_CQY_19"/>
		<result property="fxngRa3" column="FXNG_RA_3"/>
		<result property="useCqy20" column="USE_CQY_20"/>
		<result property="useCqy21" column="USE_CQY_21"/>
		<result property="useCqy22" column="USE_CQY_22"/>
		<result property="useCqy23" column="USE_CQY_23"/>
	</resultMap>
	
    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest03 (cod_mtestmt_l03 테스트 진척현황(기능기준)) 
        Description :                                           cod_mtestmt_l03 테스트 진척현황(기능기준)
                                            
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO
		resultMap : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest03-result
    -->
	<select id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest03"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO"  resultMap="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest03-result" useCache="true" flushCache="false">
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest03 */
		<![CDATA[
		    with zc
		    as
		    ( select  tta.PRGM_ID
		            , tta.FNCT_ID
		      from    ( select  ta.PRGM_ID
		                      , ta.FNCT_ID
		                      , sum(decode(ta.TEST_ST, 0, 1, 0)) as NOWORK       /* 미수행 */
		                      , sum(decode(ta.TEST_ST, 1, 1, 0)) as BEWORK       /* 수행중 */
		                      , sum(decode(ta.TEST_ST, 2, 1, 0)) as FINALWORK    /* 완료   */
		                      , sum(decode(ta.TEST_ST, 3, 1, 0)) as ERRORCNT     /* 수행오류 */
		                from    ( select  xa.PRGM_ID
		                                , xa.FNCT_ID
		                                , xa.TEST_ASGN_ID
		                                , case when (xa.T1 + xa.T2 + xa.T3) = 0 then 0                      /* 미수행   */
		                                       when ((xa.T1 + xa.T2 + xa.T3) > 0) and (xa.T0 > 0 ) then 1   /* 수행중   */
		                                       when ((xa.T1 + xa.T2) > 0) and (xa.T0 = 0 ) then 2           /* 완료     */
		                                       when ((xa.T0 + xa.T1 + xa.T2) = 0) and (xa.T3 > 0 ) then 3   /* 수행오류 */
		                                  end as TEST_ST
		                          from    ( select  /*+ use_hash(a b) */
		                                            a.PRGM_ID
		                                          , a.FNCT_ID
		                                          , a.TEST_ASGN_ID
		                                          , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T0', 1, 0)), 0) as T0
		                                          , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T1', 1, 0)), 0) as T1
		                                          , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T2', 1, 0)), 0) as T2
		                                          , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T3', 1, 0)), 0) as T3
		                                    from    ( select   /*+ use_hash(sc sa) */
		                                                       sa.PRGM_ID
		                                                     , sa.TEST_STEP_CD
		                                                     , sa.TEST_ASGN_ID
		                                                     , sb.FNCT_ID
		                                              from     COMTESTDT sa
		                                                     , COTBPRMDT sb
		                                                     , COMTESTMT sc
		                                              where    nvl(sa.DLTN_YN, 'N') <> 'Y'
		                                                and    nvl(sb.DLTN_YN, 'N') <> 'Y'
		                                                and    nvl(sb.DSCS_YN, 'N') = 'Y'
		                                                and    sa.PRGM_ID      = sb.PRGM_ID
		                                                and    sa.PRGM_ID      = sc.PRGM_ID
		                                                and    sa.TEST_STEP_CD = sc.TEST_STEP_CD
		                                                and    nvl(sc.DLTN_YN, 'N') <> 'Y'
		                                                and    nvl(sc.TEST_PSBL_TRGT_YN, '1') <> '2'
		                                                and    sa.TEST_STEP_CD =  #{testStepCd} 
		                                                and    ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(sb.PROR_BASE_CD, 'N') = 'L1'))
		                                            ) a
		                                          , COTSTERMT b
		                                    where   a.PRGM_ID      = b.PRGM_ID(+)
		                                      and   a.TEST_STEP_CD = b.TEST_STEP_CD(+)
		                                      and   a.TEST_ASGN_ID = b.TEST_ASGN_ID(+)
		                                      and   a.FNCT_ID      = b.FNCT_ID(+)
		                                      and   nvl(b.DLTN_YN(+), 'N') <> 'Y'
		                                    group by a.PRGM_ID
		                                           , a.FNCT_ID
		                                           , a.TEST_ASGN_ID
		                                  ) xa
		                        ) ta
		                group by ta.PRGM_ID
		                       , ta.FNCT_ID
		              ) tta
		      where   (tta.NOWORK + tta.BEWORK) = 0
		        and   tta.FINALWORK > 0
		    )
		        select  /*+ cod_mtestmt_l03$S01_[비대상]테스트 진척현황(기능기준) */
		                 xa.COMN_DTLS_CD
		               , xa.DETL_CD_NM
		               , xa.COMN_DTLS_CD_1
		               , xa.DETL_CD_NM_1
		               , xb.TOT_CNT             as USE_CQY   -- "개발팀의뢰"
		               , xb.RE_CNT              as USE_CQY_1 -- "임시보류"
		               , xb.TOT_CNT - xb.RE_CNT as USE_CQY_2 -- "테스트대상"
		               , xb.BEF_TST             as USE_CQY_3 -- "배정전"
		               , nvl(xc.FINAL_WORK, 0)  as USE_CQY_4 -- "수행완료"
		               , nvl(xc.BE_WORK, 0)     as USE_CQY_5 -- "수행중"
		               , nvl(xc.NONE_WORK, 0)   as USE_CQY_6 -- "수행전"
		               , nvl(xbb.TESTER_CNT, 0) as USE_CQY_7 -- "수행테스터"
		               , decode((xb.TOT_CNT - xb.RE_CNT - xc.ERRORCNT), 0, 0, trunc(xc.FINAL_WORK / (xb.TOT_CNT - xb.RE_CNT - xc.ERRORCNT) * 100, 1)) as FXNG_RA -- "수행율"
		               , xc.FINAL_WORK          as USE_CQY_8 -- "수행완료"
		               , nvl(xd.SUC, 0)         as USE_CQY_9 -- "성공"
		               , nvl(xd.FAL, 0)         as USE_CQY_10 -- "결함"
		               , nvl(xd.FIX, 0)         as USE_CQY_11 -- "협의대상"
		               , decode((nvl(xd.SUC, 0) + nvl(xd.FAL, 0)), 0 , 0, trunc(nvl(xd.FAL, 0) / (nvl(xd.SUC, 0) + nvl(xd.FAL, 0)) * 100, 2)) as FXNG_RA_1 -- "결함율"
		               , nvl(xd.FAL, 0)         as USE_CQY_12 -- "조치대상"
		               , nvl(xe.FNAL, 0)        as USE_CQY_13 -- "조치완료"
		               , nvl(xe.BEFIX, 0)       as USE_CQY_14 -- "개발팀 조치중"
		               , nvl(xe.REINS, 0)       as USE_CQY_15 -- "현업 확인중"
		               , decode(nvl(xd.FAL, 0), 0, 0, trunc((nvl(xe.FNAL, 0) + nvl(xe.REINS, 0))/ nvl(xd.FAL, 0) * 100, 1)) as FXNG_RA_2 -- "조치율"
		               , xc.FINAL_WORK          as USE_CQY_16 -- "수행완료"
		               , nvl(xf.SUC, 0)         as USE_CQY_17 -- "통과"
		               , nvl(xf.FAL, 0)         as USE_CQY_18 -- "결함"
		               , nvl(xf.FIX, 0)         as USE_CQY_19 -- "협의대상"
		               , decode(nvl(xc.FINAL_WORK, 0), 0, 0, trunc(nvl(xf.SUC, 0) / nvl(xc.FINAL_WORK, 0) * 100, 1)) as FXNG_RA_3 -- "통과율"
		               , nvl(xd.REP, 0)         as USE_CQY_20 -- "개발팀확인중"  --
		               , nvl(xf.REP, 0) +  nvl(xe.BEFIX, 0) as USE_CQY_21 -- "개발팀확인중"
		               , nvl(xc.ERRORCNT, 0)    as USE_CQY_22 -- "비대상"
		               , xc.FINAL_WORK - nvl(xf.SUC, 0) - nvl(xf.FAL, 0) - nvl(xf.FIX, 0) - nvl(xf.REP, 0) as USE_CQY_23 -- "비대상"
		        from     ( select  a.COMN_DTLS_CD
		                         , a.DETL_CD_NM
		                         , a.SCRN_DSPL_SQNC
		                         , b.COMN_DTLS_CD as COMN_DTLS_CD_1
		                         , b.DETL_CD_NM   as DETL_CD_NM_1
		                         , b.SCRN_DSPL_SQNC  as SCRN_DSPL_SQNC_1
		                   from    CCCMCDDMT a
		                         , CCCMCDDMT b
		                   where   a.COMN_GRP_CD  = 'COR_025'
		                     and   Length(a.COMN_DTLS_CD) = 1
		                     and   b.COMN_GRP_CD  = 'COR_025'
		                     and   Length(b.COMN_DTLS_CD) = 2
		                     and   a.COMN_DTLS_CD = substr(b.COMN_DTLS_CD, 1, 1)
		                     and   ((nvl( #{afiSrchDvsnVl} , '*') = '*') or (( #{afiSrchDvsnVl}  = 'Q') and (b.COMN_DTLS_CD <> 'SQ')))
		                 ) xa    /* 시스템 정보  */
		               , ( select   b.PRJT_TISS_CD
		                          , count(*) as TOT_CNT
		                          , sum(decode(a.TEST_PSBL_TRGT_YN, '2', 1, 0)) as RE_CNT
		                          , sum(decode(a.TEST_ASGN_ID, null, decode(a.TEST_PSBL_TRGT_YN, '1', 1, 0), 0)) as BEF_TST
		                   from     ( select  sa.PRGM_ID
		                                    , nvl(sa.TEST_PSBL_TRGT_YN, '1') as TEST_PSBL_TRGT_YN
		                                    , max(sb.TEST_ASGN_ID) as TEST_ASGN_ID
		                              from    COMTESTMT sa
		                                    , COMTESTDT sb
		                              where   nvl(sa.DLTN_YN, 'N') <> 'Y'
		                                and   nvl(sb.DLTN_YN(+), 'N') <> 'Y'
		                                and   sa.PRGM_ID      = sb.PRGM_ID(+)
		                                and   sa.TEST_STEP_CD = sb.TEST_STEP_CD(+)
		                                and   sa.TEST_STEP_CD =  #{testStepCd} 
		                              group by sa.PRGM_ID
		                                     , nvl(sa.TEST_PSBL_TRGT_YN, '1')
		                            ) a
		                          , COTBPRMMT b
		                          , COTBPRMDT c
		                   where    a.PRGM_ID = b.PRGM_ID
		                     and    nvl(b.DLTN_YN, 'N') <> 'Y'
		                     and    nvl(c.DLTN_YN, 'N') <> 'Y'
		                     and    a.PRGM_ID = c.PRGM_ID
		                     and    nvl(c.DSCS_YN, 'N') = 'Y'
		                     and    (((nvl( #{afiSrchYn} , '*') = '*') and (b.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                             (( #{afiSrchYn}  = 'Y') and (b.PRGM_TYP_CD = 'A05')))
		                     and    ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(c.PROR_BASE_CD, 'N') = 'L1'))
		                     and    ((nvl( #{afiSrchCndtCtn} , '*') = '*') or
		                             ((nvl( #{afiSrchCndtCtn} , '*') = 'S') and (nvl(b.PRNC_YN, 'N') = 'S')) or
		                             ((nvl( #{afiSrchCndtCtn} , '*') = 'M') and (nvl(b.PRNC_YN, 'N') in ('S', 'M')))
		                            )
		                   group by b.PRJT_TISS_CD
		                 ) xb  /* 테스트 의뢰 현황  */
		               , ( select  ta.PRJT_TISS_CD
		                         , count(*) as TESTER_CNT
		                   from    ( select  b.PRJT_TISS_CD
		                                   , a.TEST_ASGN_ID
		                             from    COMTESTDT a
		                                   , COTBPRMMT b
		                                   , COTBPRMDT c
		                             where   nvl(a.DLTN_YN, 'N') <> 'Y'
		                               and   a.PRGM_ID = b.PRGM_ID
		                               and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                               and   a.TEST_STEP_CD =  #{testStepCd} 
		                               and   (((nvl( #{afiSrchYn} , '*') = '*') and (b.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                      (( #{afiSrchYn}  = 'Y') and (b.PRGM_TYP_CD = 'A05')))
		                               and   ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(c.PROR_BASE_CD, 'N') = 'L1'))
		                               and   nvl(c.DLTN_YN, 'N') <> 'Y'
		                               and    a.PRGM_ID = c.PRGM_ID
		                               and    a.PRGM_ID = c.PRGM_ID
		                               and    ((nvl( #{afiSrchCndtCtn} , '*') = '*') or
		                                       ((nvl( #{afiSrchCndtCtn} , '*') = 'S') and (nvl(b.PRNC_YN, 'N') = 'S')) or
		                                       ((nvl( #{afiSrchCndtCtn} , '*') = 'M') and (nvl(b.PRNC_YN, 'N') in ('S', 'M')))
		                                      )
		                             group by b.PRJT_TISS_CD
		                                    , a.TEST_ASGN_ID
		                           ) ta
		                   group by ta.PRJT_TISS_CD
		                 ) xbb  /* 테스터 수 */
		               , ( select  ga.PRJT_TISS_CD
		                         , sum(decode(ga.PTEST_ST, 0, 1, 0)) as NONE_WORK
		                         , sum(decode(ga.PTEST_ST, 1, 1, 0)) as BE_WORK
		                         , sum(decode(ga.PTEST_ST, 2, 1, 0)) as FINAL_WORK
		                         , sum(decode(ga.PTEST_ST, 3, 1, 0)) as ERRORCNT
		                   from    ( select  ttb.PRJT_TISS_CD
		                                   , tta.PRGM_ID
		                                   , tta.FNCT_ID
		                                   , case when (tta.BEWORK + tta.FINALWORK + tta.ERRORCNT) = 0 then 0          /* 미수행 */
		                                          when (tta.NOWORK + tta.BEWORK > 0) then 1  /* 수행중 */
		                                          when ((tta.NOWORK + tta.BEWORK) = 0) and (tta.FINALWORK > 0 ) then 2               /* 완료     */
		                                          when ((tta.NOWORK + tta.BEWORK + tta.FINALWORK) = 0) and (tta.ERRORCNT > 0) then 3 /* 수행오류 */
		                                     end as PTEST_ST
		                             from    ( select
		                                               ta.PRGM_ID
		                                             , ta.FNCT_ID
		                                             , sum(decode(ta.TEST_ST, 0, 1, 0)) as NOWORK       /* 미수행 */
		                                             , sum(decode(ta.TEST_ST, 1, 1, 0)) as BEWORK       /* 수행중 */
		                                             , sum(decode(ta.TEST_ST, 2, 1, 0)) as FINALWORK    /* 완료   */
		                                             , sum(decode(ta.TEST_ST, 3, 1, 0)) as ERRORCNT     /* 수행오류 */
		                                       from    ( select  xa.PRGM_ID
		                                                       , xa.FNCT_ID
		                                                       , xa.TEST_ASGN_ID
		                                                       , case when (xa.T1 + xa.T2 + xa.T3) = 0 then 0                      /* 미수행   */
		                                                              when ((xa.T1 + xa.T2 + xa.T3) > 0) and (xa.T0 > 0 ) then 1   /* 수행중   */
		                                                              when ((xa.T1 + xa.T2) > 0) and (xa.T0 = 0 ) then 2           /* 완료     */
		                                                              when ((xa.T0 + xa.T1 + xa.T2) = 0) and (xa.T3 > 0 ) then 3   /* 수행오류 */
		                                                         end as TEST_ST
		                                                 from    ( select  a.PRGM_ID
		                                                                 , a.FNCT_ID
		                                                                 , a.TEST_ASGN_ID
		                                                                 , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T0', 1, 0)), 0) as T0
		                                                                 , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T1', 1, 0)), 0) as T1
		                                                                 , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T2', 1, 0)), 0) as T2
		                                                                 , nvl(sum(decode(nvl(b.TEST_RSLT_CD, 'T0'), 'T3', 1, 0)), 0) as T3
		                                                           from    ( select   sa.PRGM_ID
		                                                                            , sa.TEST_STEP_CD
		                                                                            , sa.TEST_ASGN_ID
		                                                                            , sb.FNCT_ID
		                                                                     from     COMTESTDT sa
		                                                                            , COTBPRMDT sb
		                                                                            , COMTESTMT sc
		                                                                     where    nvl(sa.DLTN_YN, 'N') <> 'Y'
		                                                                       and    nvl(sb.DLTN_YN, 'N') <> 'Y'
		                                                                       and    nvl(sb.DSCS_YN, 'N') = 'Y'
		                                                                       and    sa.PRGM_ID      = sb.PRGM_ID
		                                                                       and    sa.PRGM_ID      = sc.PRGM_ID
		                                                                       and    sa.TEST_STEP_CD = sc.TEST_STEP_CD
		                                                                       and    nvl(sc.DLTN_YN, 'N') <> 'Y'
		                                                                       and    nvl(sc.TEST_PSBL_TRGT_YN, '1') <> '2'
		                                                                       and    sa.TEST_STEP_CD =  #{testStepCd} 
		                                                                       and    ((nvl( #{prorBaseCd} , '*') = '*') or (nvl(sb.PROR_BASE_CD, 'N') = 'L1'))
		                                                                   ) a
		                                                                 , COTSTERMT b
		                                                           where   a.PRGM_ID      = b.PRGM_ID(+)
		                                                             and   a.TEST_STEP_CD = b.TEST_STEP_CD(+)
		                                                             and   a.TEST_ASGN_ID = b.TEST_ASGN_ID(+)
		                                                             and   a.FNCT_ID      = b.FNCT_ID(+)
		                                                             and   nvl(b.DLTN_YN(+), 'N') <> 'Y'
		                                                           group by a.PRGM_ID
		                                                                  , a.FNCT_ID
		                                                                  , a.TEST_ASGN_ID
		                                                         ) xa
		                                               ) ta
		                                       group by ta.PRGM_ID
		                                              , ta.FNCT_ID
		                                     ) tta
		                                   , COTBPRMMT ttb
		                             where   tta.PRGM_ID = ttb.PRGM_ID
		                               and   nvl(ttb.DLTN_YN, 'N') <> 'Y'
		                               and   (((nvl( #{afiSrchYn} , '*') = '*') and (ttb.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                      (( #{afiSrchYn}  = 'Y') and (ttb.PRGM_TYP_CD = 'A05')))
		                               and   ((nvl( #{afiSrchCndtCtn} , '*') = '*') or
		                                      ((nvl( #{afiSrchCndtCtn} , '*') = 'S') and (nvl(ttb.PRNC_YN, 'N') = 'S')) or
		                                      ((nvl( #{afiSrchCndtCtn} , '*') = 'M') and (nvl(ttb.PRNC_YN, 'N') in ('S', 'M')))
		                                     )
		                           ) ga
		                   group by ga.PRJT_TISS_CD
		                 ) xc  /* 테스트 수행현황  */
		               , ( select  ga.PRJT_TISS_CD
		                         , sum(decode(ga.ACT_STATE, 'S', 1, 0)) as SUC
		                         , sum(decode(ga.ACT_STATE, 'F', 1, 0)) as FAL
		                         , sum(decode(ga.ACT_STATE, 'C', 1, 0)) as FIX
		                         , sum(decode(ga.ACT_STATE, 'R', 1, 0)) as REP
		                   from    ( select  zb.PRJT_TISS_CD
		                                   , za.PRGM_ID
		                                   , za.FNCT_ID
		                                   , case when (za.SUC > 0) and ((za.FAL + za.FIX + za.REP) = 0) then 'S'
		                                          when za.FAL > 0 then 'F'
		                                          when (za.FIX > 0) and (za.FAL = 0) then 'C'
		                                          when (za.REP > 0) and (za.FAL = 0) and (za.FIX = 0) then 'R'
		                                     end ACT_STATE
		                             from    ( select  tta.PRGM_ID
		                                             , tta.FNCT_ID
		                                             , sum(decode(tta.ACT_STATE, 'S', 1, 0)) as SUC   /* 성공   */
		                                             , sum(decode(tta.ACT_STATE, 'F', 1, 0)) as FAL   /* 결함   */
		                                             , sum(decode(tta.ACT_STATE, 'C', 1, 0)) as FIX   /* 협의대상 */
		                                             , sum(decode(tta.ACT_STATE, 'R', 1, 0)) as REP   /* 개발팀확인중 */
		                                       from    ( select  ta.PRGM_ID
		                                                       , ta.FNCT_ID
		                                                       , ta.TEST_ASGN_ID
		                                                       , case when (ta.SUC > 0) and ((ta.FAL + ta.MET + ta.REP) = 0) then 'S'
		                                                              when (ta.FAL > 0) then 'F'
		                                                              when (ta.MET > 0) and (ta.FAL = 0) then 'C'
		                                                              when (ta.REP > 0) and (ta.FAL = 0) and (ta.MET = 0) then 'R'
		                                                         end ACT_STATE
		                                                 from    ( select  xa.PRGM_ID
		                                                                 , xa.FNCT_ID
		                                                                 , xa.TEST_ASGN_ID
		                                                                 , nvl(sum(decode(xa.ACT_STATE, 'S', 1, 0)), 0) as SUC
		                                                                 , nvl(sum(decode(xa.ACT_STATE, 'F', 1, 0)), 0) as FAL
		                                                                 , nvl(sum(decode(xa.ACT_STATE, 'C', 1, 0)), 0) as MET
		                                                                 , nvl(sum(decode(xa.ACT_STATE, 'R', 1, 0)), 0) as REP
		                                                           from    ( select  a.PRGM_ID
		                                                                           , a.FNCT_ID
		                                                                           , b.TEST_ASGN_ID
		                                                                             /* 성공S>실패F>확인중C  */
		                                                                           , case when a.TEST_RSLT_CD = 'T1' then 'S'
		                                                                                  when a.TEST_RSLT_CD = 'T2' then decode(b.FULT_CRNT_STTS_CD, 'A1', 'F', 'A9', 'C', 'R')
		                                                                             end as ACT_STATE
		                                                                     from    COTSTERMT a
		                                                                           , COTSTERDT b
		                                                                     where   nvl(a.DLTN_YN, 'N') <> 'Y'
		                                                                       and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                                                                       and   a.PRGM_ID      = b.PRGM_ID(+)
		                                                                       and   a.TEST_STEP_CD = b.TEST_STEP_CD(+)
		                                                                       and   a.TEST_ASGN_ID = b.TEST_ASGN_ID(+)
		                                                                       and   a.TEST_ID      = b.TEST_ID(+)
		                                                                       and   a.TEST_STEP_CD =  #{testStepCd} 
		                                                                       and   a.TEST_RSLT_CD in ('T1', 'T2')
		                                                                   ) xa
		                                                           group by xa.PRGM_ID
		                                                                  , xa.FNCT_ID
		                                                                  , xa.TEST_ASGN_ID
		                                                         ) ta
		                                               ) tta
		                                       group by tta.PRGM_ID
		                                              , tta.FNCT_ID
		                                     ) za
		                                   , COTBPRMMT zb
		                                   , zc  /* 수행완료 모수를 위한 서브쿼리 */
		                             where   za.PRGM_ID = zb.PRGM_ID
		                               and   za.PRGM_ID = zc.PRGM_ID
		                               and   zb.PRGM_ID = zc.PRGM_ID -- CHAN
		                               and   za.FNCT_ID = zc.FNCT_ID
		                               and   nvl(zb.DLTN_YN, 'N') <> 'Y'
		                               and   (((nvl( #{afiSrchYn} , '*') = '*') and (zb.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                      (( #{afiSrchYn}  = 'Y') and (zb.PRGM_TYP_CD = 'A05')))
		                               and    ((nvl( #{afiSrchCndtCtn} , '*') = '*') or
		                                       ((nvl( #{afiSrchCndtCtn} , '*') = 'S') and (nvl(zb.PRNC_YN, 'N') = 'S')) or
		                                       ((nvl( #{afiSrchCndtCtn} , '*') = 'M') and (nvl(zb.PRNC_YN, 'N') in ('S', 'M')))
		                                      )
		                           ) ga
		                   group by ga.PRJT_TISS_CD
		                 ) xd  /* 테스트 결과  */
		               , ( select  ga.PRJT_TISS_CD
		                         , sum(decode(ga.FLOW_STATE, 'S', 1, 0)) as FNAL
		                         , sum(decode(ga.FLOW_STATE, 'A', 1, 0)) as BEFIX
		                         , sum(decode(ga.FLOW_STATE, 'O', 1, 0)) as REINS
		                   from    ( select  zb.PRJT_TISS_CD
		                                   , za.PRGM_ID
		                                   , za.FNCT_ID
		                                   , case when (za.FNAL > 0) and ((za.BEFIX + za.REINS) = 0) then 'S'
		                                          when za.BEFIX > 0 then 'A'
		                                          when (za.REINS > 0) and (za.BEFIX = 0) then 'O'
		                                     end FLOW_STATE
		                             from    ( select  tta.PRGM_ID
		                                             , tta.FNCT_ID
		                                             , sum(decode(tta.FLOW_STATE, 'S', 1, 0)) as FNAL    /* 조치완료       */
		                                             , sum(decode(tta.FLOW_STATE, 'A', 1, 0)) as BEFIX   /* 개발팀 조치중  */
		                                             , sum(decode(tta.FLOW_STATE, 'O', 1, 0)) as REINS   /* 현업확인중     */
		                                       from    ( select  ta.PRGM_ID
		                                                       , ta.FNCT_ID
		                                                       , ta.TEST_ASGN_ID
		                                                       , case when (ta.FNAL > 0) and ((ta.BEFIX + ta.REINS) = 0) then 'S'
		                                                              when ta.BEFIX > 0 then 'A'
		                                                              when (ta.REINS > 0) and (ta.BEFIX = 0) then 'O'
		                                                         end FLOW_STATE
		                                                 from    ( select   sa.PRGM_ID
		                                                                  , sa.FNCT_ID
		                                                                  , sa.TEST_ASGN_ID
		                                                                  , nvl(sum(decode(sa.FLOW_STATE, 'S', 1, 0)), 0) as FNAL
		                                                                  , nvl(sum(decode(sa.FLOW_STATE, 'A', 1, 0)), 0) as BEFIX
		                                                                  , nvl(sum(decode(sa.FLOW_STATE, 'O', 1, 0)), 0) as REINS
		                                                           from    ( select  a.PRGM_ID
		                                                                           , a.FNCT_ID
		                                                                           , a.TEST_ASGN_ID
		                                                                             /* S 조치완료, A 개발팀 조치중, O 현업확인중 */
		                                                                           , case when nvl(b.FULT_PRSG_STTS_CD, '1') = '5' then 'S'
		                                                                                  when nvl(b.FULT_PRSG_STTS_CD, '1') in ('1', '2', '6') then 'A'  /* 박신영 책임 보장 쿼리 */
		                                                                                  when nvl(b.FULT_PRSG_STTS_CD, '1') in ('3', '4') then 'O'
		                                                                             end as FLOW_STATE
		                                                                     from    COTSTERMT a
		                                                                           , COTSTERDT b
		                                                                     where   nvl(a.DLTN_YN, 'N') <> 'Y'
		                                                                       and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                                                                       and   a.PRGM_ID      = b.PRGM_ID
		                                                                       and   a.TEST_STEP_CD = b.TEST_STEP_CD
		                                                                       and   a.TEST_ASGN_ID = b.TEST_ASGN_ID
		                                                                       and   a.TEST_ID      = b.TEST_ID
		                                                                       and   a.TEST_STEP_CD =  #{testStepCd} 
		                                                                       and   a.TEST_RSLT_CD = 'T2'
		                                                                       and   b.FULT_CRNT_STTS_CD = 'A1'
		                                                                       and   b.FULT_PRSG_STTS_CD in ('1', '2', '3', '4', '5', '6')
		                                                                   ) sa
		                                                           group by sa.PRGM_ID
		                                                                  , sa.FNCT_ID
		                                                                  , sa.TEST_ASGN_ID
		                                                         ) ta
		                                               ) tta
		                                       group by  tta.PRGM_ID
		                                               , tta.FNCT_ID
		                                     ) za
		                                   , COTBPRMMT zb
		                                   , zc  /* 수행완료 모수를 위한 서브쿼리 */
		                             where   za.PRGM_ID = zb.PRGM_ID
		                               and   za.PRGM_ID = zc.PRGM_ID
		                               and   zb.PRGM_ID = zc.PRGM_ID -- CHAN
		                               and   za.FNCT_ID = zc.FNCT_ID
		                               and   nvl(zb.DLTN_YN, 'N') <> 'Y'
		                               and   (((nvl( #{afiSrchYn} , '*') = '*') and (zb.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                     (( #{afiSrchYn}  = 'Y') and (zb.PRGM_TYP_CD = 'A05')))
		                               and   ((nvl( #{afiSrchCndtCtn} , '*') = '*') or
		                                      ((nvl( #{afiSrchCndtCtn} , '*') = 'S') and (nvl(zb.PRNC_YN, 'N') = 'S')) or
		                                      ((nvl( #{afiSrchCndtCtn} , '*') = 'M') and (nvl(zb.PRNC_YN, 'N') in ('S', 'M')))
		                                     )
		                           ) ga
		                   group by ga.PRJT_TISS_CD
		                 ) xe /* 결함조치현황 */
		               , ( select  ga.PRJT_TISS_CD
		                         , sum(decode(ga.ACT_STATE, 'S', 1, 0)) as SUC
		                         , sum(decode(ga.ACT_STATE, 'F', 1, 0)) as FAL
		                         , sum(decode(ga.ACT_STATE, 'C', 1, 0)) as FIX
		                         , sum(decode(ga.ACT_STATE, 'R', 1, 0)) as REP
		                   from    ( select  zb.PRJT_TISS_CD
		                                   , za.PRGM_ID
		                                   , za.FNCT_ID
		                                   , case when (za.SUC > 0) and ((za.FAL + za.FIX + za.REP) = 0) then 'S'
		                                          when za.FAL > 0 then 'F'
		                                          when (za.FIX > 0) and (za.FAL = 0) then 'C'
		                                          when (za.REP > 0) and (za.FAL = 0) and (za.FIX = 0) then 'R'
		                                     end ACT_STATE
		                             from    ( select  tta.PRGM_ID
		                                             , tta.FNCT_ID
		                                             , sum(decode(tta.ACT_STATE, 'S', 1, 0)) as SUC   /* 통과   */
		                                             , sum(decode(tta.ACT_STATE, 'F', 1, 0)) as FAL   /* 결함   */
		                                             , sum(decode(tta.ACT_STATE, 'C', 1, 0)) as FIX   /* 협의대상 */
		                                             , sum(decode(tta.ACT_STATE, 'R', 1, 0)) as REP   /* 개발팀확인중 */
		                                       from    ( select  ta.PRGM_ID
		                                                       , ta.FNCT_ID
		                                                       , ta.TEST_ASGN_ID
		                                                       , case when (ta.SUC > 0) and ((ta.FAL + ta.MET + ta.REP) = 0) then 'S'
		                                                              when ta.FAL > 0 then 'F'
		                                                              when (ta.MET > 0) and (ta.FAL = 0) then 'C'
		                                                              when (ta.REP > 0) and (ta.FAL = 0) and (ta.MET = 0) then 'R'
		                                                         end ACT_STATE
		                                                 from    ( select  xa.PRGM_ID
		                                                                 , xa.FNCT_ID
		                                                                 , xa.TEST_ASGN_ID
		                                                                 , nvl(sum(decode(xa.ACT_STATE, 'S', 1, 0)), 0) as SUC
		                                                                 , nvl(sum(decode(xa.ACT_STATE, 'F', 1, 0)), 0) as FAL
		                                                                 , nvl(sum(decode(xa.ACT_STATE, 'C', 1, 0)), 0) as MET
		                                                                 , nvl(sum(decode(xa.ACT_STATE, 'R', 1, 0)), 0) as REP
		                                                           from    ( select  a.PRGM_ID
		                                                                           , a.FNCT_ID
		                                                                           , a.TEST_ASGN_ID
		                                                                             /* 성공S>실패F>확인중C  */
		                                                                           , case when a.TEST_RSLT_CD = 'T1' then 'S'
		                                                                                  when a.TEST_RSLT_CD = 'T2' then decode(b.FULT_CRNT_STTS_CD, 'A1', decode(b.FULT_PRSG_STTS_CD, '5', 'S', 'F'), 'A9', 'C', 'R')
		                                                                             end as ACT_STATE
		                                                                     from    COTSTERMT a
		                                                                           , COTSTERDT b
		                                                                     where   nvl(a.DLTN_YN, 'N') <> 'Y'
		                                                                       and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                                                                       and   a.PRGM_ID      = b.PRGM_ID(+)
		                                                                       and   a.TEST_STEP_CD = b.TEST_STEP_CD(+)
		                                                                       and   a.TEST_ASGN_ID = b.TEST_ASGN_ID(+)
		                                                                       and   a.TEST_ID      = b.TEST_ID(+)
		                                                                       and   a.TEST_STEP_CD =  #{testStepCd} 
		                                                                       and   a.TEST_RSLT_CD in ('T1', 'T2')
		                                                                   ) xa
		                                                           group by xa.PRGM_ID
		                                                                  , xa.FNCT_ID
		                                                                  , xa.TEST_ASGN_ID
		                                                         ) ta
		                                               ) tta
		                                       group by tta.PRGM_ID
		                                              , tta.FNCT_ID
		                                     ) za
		                                   , COTBPRMMT zb
		                                   , zc  /* 수행완료 모수를 위한 서브쿼리 */
		                             where   za.PRGM_ID = zb.PRGM_ID
		                               and   za.PRGM_ID = zc.PRGM_ID
		                               and   zb.PRGM_ID = zc.PRGM_ID -- CHAN
		                               and   za.FNCT_ID = zc.FNCT_ID
		                               and   nvl(zb.DLTN_YN, 'N') <> 'Y'
		                               and   (((nvl( #{afiSrchYn} , '*') = '*') and (zb.PRGM_TYP_CD in ('A01', 'A02', 'A03'))) or
		                                      (( #{afiSrchYn}  = 'Y') and (zb.PRGM_TYP_CD = 'A05')))
		                               and   ((nvl( #{afiSrchCndtCtn} , '*') = '*') or
		                                      ((nvl( #{afiSrchCndtCtn} , '*') = 'S') and (nvl(zb.PRNC_YN, 'N') = 'S')) or
		                                      ((nvl( #{afiSrchCndtCtn} , '*') = 'M') and (nvl(zb.PRNC_YN, 'N') in ('S', 'M')))
		                                     )
		                           ) ga
		                   group by ga.PRJT_TISS_CD
		                 ) xf  /* 최종 테스트 결과  */
		        where    xa.COMN_DTLS_CD_1 = xb.PRJT_TISS_CD
		          and    xa.COMN_DTLS_CD_1 = xbb.PRJT_TISS_CD(+)
		          and    xa.COMN_DTLS_CD_1 = xc.PRJT_TISS_CD(+)
		          and    xa.COMN_DTLS_CD_1 = xd.PRJT_TISS_CD(+)
		          and    xa.COMN_DTLS_CD_1 = xe.PRJT_TISS_CD(+)
		          and    xa.COMN_DTLS_CD_1 = xf.PRJT_TISS_CD(+)
		        order by xa.SCRN_DSPL_SQNC, xa.SCRN_DSPL_SQNC_1
		]]>
	</select>




	<resultMap id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest04-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO">
	
		<result property="comnDtlsCd" column="COMN_DTLS_CD"/>
		<result property="detlCdNm" column="DETL_CD_NM"/>
		<result property="comnDtlsCd1" column="COMN_DTLS_CD_1"/>
		<result property="detlCdNm1" column="DETL_CD_NM_1"/>
		<result property="useCqy" column="USE_CQY"/>
		<result property="useCqy1" column="USE_CQY_1"/>
		<result property="useCqy2" column="USE_CQY_2"/>
		<result property="useCqy3" column="USE_CQY_3"/>
		<result property="useCqy4" column="USE_CQY_4"/>
		<result property="useCqy5" column="USE_CQY_5"/>
		<result property="fxngRa" column="FXNG_RA"/>
		<result property="useCqy6" column="USE_CQY_6"/>
		<result property="useCqy7" column="USE_CQY_7"/>
		<result property="fxngRa1" column="FXNG_RA_1"/>
		<result property="useCqy8" column="USE_CQY_8"/>
		<result property="useCqy9" column="USE_CQY_9"/>
		<result property="fxngRa2" column="FXNG_RA_2"/>
		<result property="useCqy10" column="USE_CQY_10"/>
		<result property="useCqy11" column="USE_CQY_11"/>
		<result property="useCqy12" column="USE_CQY_12"/>
		<result property="useCqy13" column="USE_CQY_13"/>
		<result property="useCqy14" column="USE_CQY_14"/>
		<result property="fxngRa3" column="FXNG_RA_3"/>
		<result property="useCqy15" column="USE_CQY_15"/>
		<result property="useCqy16" column="USE_CQY_16"/>
		<result property="useCqy17" column="USE_CQY_17"/>
		<result property="useCqy18" column="USE_CQY_18"/>
	</resultMap>
	
    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest04 (cod_tbprmmt_l07 개발현황(WG별)) 
        Description :                                           cod_tbprmmt_l07 개발현황(WG별)
                                            
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO
		resultMap : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest04-result
    -->
	<select id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest04"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO"  resultMap="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest04-result" useCache="true" flushCache="false">
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest04 */
		<![CDATA[
		  select  /*+ cod_tbprmmt_l07$S01_[비대상]개발현황(WG별) */ 
		            xa.COMN_DTLS_CD
		          , xa.DETL_CD_NM
		          , xa.COMN_DTLS_CD_1
		          , xa.DETL_CD_NM_1
		          , xb.A01 as USE_CQY
		          , xb.A02 as USE_CQY_1
		          , xb.A03 as USE_CQY_2
		          , xb.A01 + xb.A02 + xb.A03 as USE_CQY_3
		          , xc.DEV_FINAL as USE_CQY_4
		          , xc.TOTAL_CNT - xc.DEV_FINAL as USE_CQY_5
		          , decode(xc.TOTAL_CNT, 0, 0, trunc(xc.DEV_FINAL / xc.TOTAL_CNT * 100, 1)) as FXNG_RA
		          , xc.AL_FINAL as USE_CQY_6
		          , xc.DEV_FINAL - xc.AL_FINAL  as USE_CQY_7
		          , decode(xc.DEV_FINAL, 0, 0, trunc(xc.AL_FINAL / xc.DEV_FINAL * 100, 1)) as FXNG_RA_1
		          , xd.DEV_FINAL as USE_CQY_8
		          , xd.TOTAL_CNT - xd.DEV_FINAL as USE_CQY_9
		          , decode(xd.TOTAL_CNT, 0, 0, trunc(xd.DEV_FINAL / xd.TOTAL_CNT * 100, 1)) as FXNG_RA_2
		          , xe.PLAN_CNT as USE_CQY_10
		          , xf.PLAN_CNT as USE_CQY_11
		          , xg.PLAN_CNT as USE_CQY_12
		          , xh.PLAN_CNT as USE_CQY_13
		          , xi.PLAN_CNT as USE_CQY_14
		          , 0 as FXNG_RA_3
		          , 0 as USE_CQY_15
		          , 0 as USE_CQY_16
		          , 0 as USE_CQY_17
		          , 0 as USE_CQY_18
		    from     ( select  '' as COMN_DTLS_CD
		                     , '' as DETL_CD_NM
		                     , 0  as SCRN_DSPL_SQNC
		                     , a.COMN_DTLS_CD as COMN_DTLS_CD_1
		                     , a.DETL_CD_NM   as DETL_CD_NM_1
		                     , a.SCRN_DSPL_SQNC  as SCRN_DSPL_SQNC_1
		               from    CCCMCDDMT a
		               where   a.COMN_GRP_CD  = 'COR_014'
		               union
		               select  '' as COMN_DTLS_CD
		                     , '' as DETL_CD_NM
		                     , 0  as SCRN_DSPL_SQNC
		                     , 'ZZ' as COMN_DTLS_CD_1
		                     , 'WG정보 누락' as DETL_CD_NM_1
		                     , 99999  as SCRN_DSPL_SQNC_1
		               from    dual
		             ) xa    -- 시스템 정보 
		         , ( select  nvl(WG_CD, 'ZZ') as WG_CD
		                    , sum(decode(PRGM_TYP_CD, 'A01', 1, 0)) as A01
		                    , sum(decode(PRGM_TYP_CD, 'A02', 1, 0)) as A02
		                    , sum(decode(PRGM_TYP_CD, 'A03', 1, 0)) as A03
		              from    COTBPRMMT
		              where   nvl(DLTN_YN, 'N') <> 'Y'
		                and   ((( #{prgmTypCd}  = '1') and (PRGM_TYP_CD in ('A01', 'A02'))) or
		                       (( #{prgmTypCd}  = '2') and (PRGM_TYP_CD = 'A03')) or
		                       (( #{prgmTypCd}  = '3') and (PRGM_TYP_CD = 'A05')))
		                and   ((nvl( #{prncYn} , '*') = '*') or (nvl(PROR_BASE_CD, 'N') = 'L1'))
		                and   ((nvl( #{afiSrchYn} , '*') = '*') or (( #{afiSrchYn}  = 'Q') and (PRJT_TISS_CD <> 'SQ')))
		              group by nvl(WG_CD, 'ZZ')
		            ) xb  --  프로그램 수 
		         , (  select  tta.WG_CD
		                    , sum(tta.DEV_FINAL) as DEV_FINAL
		                    , sum(tta.AL_FINAL) as AL_FINAL
		                    , sum(tta.RE_FINAL) as RE_FINAL
		                    , sum(tta.TOTAL_CNT) as TOTAL_CNT
		              from    ( select  ta.WG_CD
		                              , decode( ta.CRNT_STTS_CD, '4', 1, '5', 1, '6', 1, 0) as DEV_FINAL
		                              , decode( ta.CRNT_STTS_CD, '5', 1, '6', 1, 0) as AL_FINAL
		                              , decode( ta.CRNT_STTS_CD, '6', 1, 0) as RE_FINAL
		                              , 1 as TOTAL_CNT
		                        from  ( select  nvl(a.WG_CD, 'ZZ') as WG_CD
		                                      , a.PRGM_ID
		                                      , nvl(min(b.CRNT_STTS_CD), '1') as CRNT_STTS_CD
		                                from    COTBPRMMT a
		                                      , COTBPRMDT b
		                                where   a.PRGM_ID = b.PRGM_ID(+)
		                                  and   nvl(b.DLTN_YN(+), 'N') <> 'Y'
		                                  and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                                  and   ((( #{prgmTypCd}  = '1') and (a.PRGM_TYP_CD in ('A01', 'A02'))) or
		                                         (( #{prgmTypCd}  = '2') and (a.PRGM_TYP_CD = 'A03')) or
		                                         (( #{prgmTypCd}  = '3') and (a.PRGM_TYP_CD = 'A05')))
		                                  and   ((nvl( #{prncYn} , '*') = '*') or (nvl(a.PROR_BASE_CD, 'N') = 'L1')
		                                        )
		                                  and   trunc(nvl(b.DVLR_TEST_FNSH_YMD,to_date('20151116', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd')
		                                  and   ((nvl( #{afiSrchYn} , '*') = '*') or (( #{afiSrchYn}  = 'Q') and (a.PRJT_TISS_CD <> 'SQ')))
		                                group by nvl(a.WG_CD, 'ZZ')
		                                       , a.PRGM_ID
		                              ) ta
		                      ) tta
		              group by  tta.WG_CD
		           ) xc  -- 개발진척(테스트 기준), AL 테스트 진척 
		         , (  select  tta.WG_CD
		                    , sum(tta.DEV_FINAL) as DEV_FINAL
		                    , sum(tta.TOTAL_CNT) as TOTAL_CNT
		              from    ( select  ta.WG_CD
		                              , decode( ta.CRNT_STTS_CD, '3', 1, '4', 1, '5', 1, '6', 1, 0) as DEV_FINAL
		                              , 1 as TOTAL_CNT
		                        from  ( select  nvl(a.WG_CD, 'ZZ') as WG_CD
		                                      , a.PRGM_ID
		                                      , nvl(min(b.CRNT_STTS_CD), '1') as CRNT_STTS_CD
		                                from    COTBPRMMT a
		                                      , COTBPRMDT b
		                                 where   a.PRGM_ID = b.PRGM_ID(+)
		                                  and   nvl(b.DLTN_YN(+), 'N') <> 'Y'
		                                  and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                                  and   ((( #{prgmTypCd}  = '1') and (a.PRGM_TYP_CD in ('A01', 'A02'))) or
		                                         (( #{prgmTypCd}  = '2') and (a.PRGM_TYP_CD = 'A03')) or
		                                         (( #{prgmTypCd}  = '3') and (a.PRGM_TYP_CD = 'A05')))
		                                  and   ((nvl( #{prncYn} , '*') = '*') or (nvl(a.PROR_BASE_CD, 'N') = 'L1')
		                                        )
		                                  and   trunc(nvl(b.ACRL_FNSH_YMD,to_date('20151116', 'yyyymmdd'))) <= to_date( #{baseYmd} , 'yyyymmdd')
		                                  and   ((nvl( #{afiSrchYn} , '*') = '*') or (( #{afiSrchYn}  = 'Q') and (a.PRJT_TISS_CD <> 'SQ')))
		                                group by nvl(a.WG_CD, 'ZZ')
		                                       , a.PRGM_ID
		                              ) ta
		                      ) tta
		             group by  tta.WG_CD
		           ) xd  -- 개발진척(코딩기준) 
		         , ( select  ta.WG_CD
		                   , count(*) as PLAN_CNT
		             from    ( select  nvl(a.WG_CD, 'ZZ') as WG_CD
		                             , a.PRGM_ID
		                             , max(nvl(b.PLAN_FNSH_YMD, to_date('29991231', 'yyyymmdd'))) as PLAN_FNSH_YMD
		                       from    COTBPRMMT a
		                             , COTBPRMDT b
		                       where   a.PRGM_ID = b.PRGM_ID(+)
		                         and   nvl(b.DLTN_YN(+), 'N') <> 'Y'
		                         and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                         and   ((( #{prgmTypCd}  = '1') and (a.PRGM_TYP_CD in ('A01', 'A02'))) or
		                                (( #{prgmTypCd}  = '2') and (a.PRGM_TYP_CD = 'A03')) or
		                                (( #{prgmTypCd}  = '3') and (a.PRGM_TYP_CD = 'A05')))
		                         and   ((nvl( #{prncYn} , '*') = '*') or (nvl(a.PROR_BASE_CD, 'N') = 'L1')
		                               )
		                         and   ((nvl( #{afiSrchYn} , '*') = '*') or (( #{afiSrchYn}  = 'Q') and (a.PRJT_TISS_CD <> 'SQ')))
		                       group by nvl(a.WG_CD, 'ZZ')
		                              , a.PRGM_ID
		                     ) ta
		             where   trunc(ta.PLAN_FNSH_YMD) <= to_date( #{baseYmd} , 'yyyymmdd')
		             group by ta.WG_CD
		           ) xe  -- 개발진척(코딩기준) 누적계획
		         , ( select  ta.WG_CD
		                   , count(*) as PLAN_CNT
		             from    ( select  nvl(a.WG_CD, 'ZZ') as WG_CD
		                             , a.PRGM_ID
		                             , max(nvl(b.DVLR_TEST_PLAN_YMD, to_date('29991231', 'yyyymmdd'))) as DVLR_TEST_PLAN_YMD
		                       from    COTBPRMMT a
		                             , COTBPRMDT b
		                       where   a.PRGM_ID = b.PRGM_ID(+)
		                         and   nvl(b.DLTN_YN(+), 'N') <> 'Y'
		                         and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                         and   ((( #{prgmTypCd}  = '1') and (a.PRGM_TYP_CD in ('A01', 'A02'))) or
		                                (( #{prgmTypCd}  = '2') and (a.PRGM_TYP_CD = 'A03')) or
		                                (( #{prgmTypCd}  = '3') and (a.PRGM_TYP_CD = 'A05')))
		                         and   ((nvl( #{prncYn} , '*') = '*') or (nvl(a.PROR_BASE_CD, 'N') = 'L1')
		                               )
		                         and   ((nvl( #{afiSrchYn} , '*') = '*') or (( #{afiSrchYn}  = 'Q') and (a.PRJT_TISS_CD <> 'SQ')))
		                       group by nvl(a.WG_CD, 'ZZ')
		                              , a.PRGM_ID
		                     ) ta
		             where   trunc(ta.DVLR_TEST_PLAN_YMD) <= to_date( #{baseYmd} , 'yyyymmdd')
		             group by ta.WG_CD
		           ) xf -- 개발진척(테스트 기준), AL 테스트 진척 누적계획 
		         , ( select  ta.WG_CD
		                   , count(*) as PLAN_CNT
		             from    ( select  nvl(a.WG_CD, 'ZZ')  as WG_CD
		                             , a.PRGM_ID
		                             , max(nvl(b.ACRL_FNSH_YMD, to_date('29991231', 'yyyymmdd'))) as ACRL_FNSH_YMD
		                       from    COTBPRMMT a
		                             , COTBPRMDT b
		                       where   a.PRGM_ID = b.PRGM_ID(+)
		                         and   nvl(b.DLTN_YN(+), 'N') <> 'Y'
		                         and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                         and   ((( #{prgmTypCd}  = '1') and (a.PRGM_TYP_CD in ('A01', 'A02'))) or
		                                (( #{prgmTypCd}  = '2') and (a.PRGM_TYP_CD = 'A03')) or
		                                (( #{prgmTypCd}  = '3') and (a.PRGM_TYP_CD = 'A05')))
		                         and   ((nvl( #{prncYn} , '*') = '*') or (nvl(a.PROR_BASE_CD, 'N') = 'L1')
		                               )
		                         and   ((nvl( #{afiSrchYn} , '*') = '*') or (( #{afiSrchYn}  = 'Q') and (a.PRJT_TISS_CD <> 'SQ')))
		                       group by nvl(a.WG_CD, 'ZZ')
		                              , a.PRGM_ID
		                     ) ta
		             where   trunc(ta.ACRL_FNSH_YMD) = to_date( #{baseYmd} , 'yyyymmdd')
		             group by ta.WG_CD
		           ) xg  -- 개발진척(코딩기준) 당일실적 
		         , ( select  ta.WG_CD
		                   , count(*) as PLAN_CNT
		             from    ( select  nvl(a.WG_CD, 'ZZ') as WG_CD
		                             , a.PRGM_ID
		                             , max(nvl(b.DVLR_TEST_FNSH_YMD, to_date('29991231', 'yyyymmdd'))) as DVLR_TEST_FNSH_YMD
		                       from    COTBPRMMT a
		                             , COTBPRMDT b
		                       where   a.PRGM_ID = b.PRGM_ID(+)
		                         and   nvl(b.DLTN_YN(+), 'N') <> 'Y'
		                         and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                         and   ((( #{prgmTypCd}  = '1') and (a.PRGM_TYP_CD in ('A01', 'A02'))) or
		                                (( #{prgmTypCd}  = '2') and (a.PRGM_TYP_CD = 'A03')) or
		                                (( #{prgmTypCd}  = '3') and (a.PRGM_TYP_CD = 'A05')))
		                         and   ((nvl( #{prncYn} , '*') = '*') or (nvl(a.PROR_BASE_CD, 'N') = 'L1')
		                               )
		                         and   ((nvl( #{afiSrchYn} , '*') = '*') or (( #{afiSrchYn}  = 'Q') and (a.PRJT_TISS_CD <> 'SQ')))
		                       group by nvl(a.WG_CD, 'ZZ')
		                              , a.PRGM_ID
		                     ) ta
		             where   trunc(ta.DVLR_TEST_FNSH_YMD) = to_date( #{baseYmd} , 'yyyymmdd')
		             group by ta.WG_CD
		           ) xh  -- 개발진척(테스트기준) 당일실적 
		         , ( select  ta.WG_CD
		                   , count(*) as PLAN_CNT
		             from    ( select  nvl(a.WG_CD, 'ZZ') as WG_CD
		                             , a.PRGM_ID
		                             , max(nvl(b.DVLR_TEST_FNSH_YMD, to_date('29991231', 'yyyymmdd'))) as DVLR_TEST_FNSH_YMD
		                       from    COTBPRMMT a
		                             , COTBPRMDT b
		                       where   a.PRGM_ID = b.PRGM_ID
		                         and   nvl(b.DLTN_YN, 'N') <> 'Y'
		                         and   nvl(a.DLTN_YN, 'N') <> 'Y'
		                         and   ((( #{prgmTypCd}  = '1') and (a.PRGM_TYP_CD in ('A01', 'A02'))) or
		                                (( #{prgmTypCd}  = '2') and (a.PRGM_TYP_CD = 'A03')) or
		                                (( #{prgmTypCd}  = '3') and (a.PRGM_TYP_CD = 'A05')))
		                         and   ((nvl( #{prncYn} , '*') = '*') or (nvl(a.PROR_BASE_CD, 'N') = 'L1')
		                               )
		                         and   b.CRNT_STTS_CD in ('5', '6')
		                         and   ((nvl( #{afiSrchYn} , '*') = '*') or (( #{afiSrchYn}  = 'Q') and (a.PRJT_TISS_CD <> 'SQ')))
		                       group by nvl(a.WG_CD, 'ZZ')
		                              , a.PRGM_ID
		                     ) ta
		             where   trunc(ta.DVLR_TEST_FNSH_YMD) = to_date( #{baseYmd} , 'yyyymmdd')
		             group by ta.WG_CD
		           ) xi  -- 개발진척(테스트기준) AL당일실적 
		    where   xa.COMN_DTLS_CD_1 = xb.WG_CD
		      and   xa.COMN_DTLS_CD_1 = xc.WG_CD(+)
		      and   xa.COMN_DTLS_CD_1 = xd.WG_CD(+)
		      and   xa.COMN_DTLS_CD_1 = xe.WG_CD(+)
		      and   xa.COMN_DTLS_CD_1 = xf.WG_CD(+)
		      and   xa.COMN_DTLS_CD_1 = xg.WG_CD(+)
		      and   xa.COMN_DTLS_CD_1 = xh.WG_CD(+)
		      and   xa.COMN_DTLS_CD_1 = xi.WG_CD(+)
		    order by xa.SCRN_DSPL_SQNC, xa.SCRN_DSPL_SQNC_1
		]]>
	</select>




	<resultMap id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest05-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO">
	
		<result property="treqOprnSystCd" column="TREQ_OPRN_SYST_CD"/>
		<result property="comnCdNm" column="COMN_CD_NM"/>
		<result property="trgtSystCd" column="TRGT_SYST_CD"/>
		<result property="comnCdNm1" column="COMN_CD_NM1"/>
		<result property="userNm" column="USER_NM"/>
		<result property="userId" column="USER_ID"/>
		<result property="prsnCnt1" column="PRSN_CNT1"/>
		<result property="prsnCnt2" column="PRSN_CNT2"/>
		<result property="prsnCnt3" column="PRSN_CNT3"/>
		<result property="prsnCnt4" column="PRSN_CNT4"/>
		<result property="prsnCnt5" column="PRSN_CNT5"/>
		<result property="prsnCnt6" column="PRSN_CNT6"/>
		<result property="prsnCnt7" column="PRSN_CNT7"/>
		<result property="prsnCnt8" column="PRSN_CNT8"/>
		<result property="prsnCnt9" column="PRSN_CNT9"/>
		<result property="prsnCnt10" column="PRSN_CNT10"/>
		<result property="prsnCnt11" column="PRSN_CNT11"/>
		<result property="prsnCnt12" column="PRSN_CNT12"/>
		<result property="prsnCnt13" column="PRSN_CNT13"/>
		<result property="afiInqrRa1" column="AFI_INQR_RA1"/>
		<result property="afiInqrRa2" column="AFI_INQR_RA2"/>
		<result property="prsnCnt14" column="PRSN_CNT14"/>
		<result property="prsnCnt15" column="PRSN_CNT15"/>
		<result property="gridRowSqnc1" column="GRID_ROW_SQNC1"/>
		<result property="gridRowSqnc2" column="GRID_ROW_SQNC2"/>
	</resultMap>
	
    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest05 (cod_tsterdt_l90 : 결함조치현황_DAM) 
        Description :                                           cod_tsterdt_l90 : 결함조치현황_DAM
                                            
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO
		resultMap : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest05-result
    -->
	<select id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest05"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtSummaryDVO"  resultMap="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest05-result" useCache="true" flushCache="false">
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtSummaryDAO-listTbprmmtDevelTest05 */
		<![CDATA[
		 select  /*+ cod_tsterdt_l90$S01_[비대상]결함조치현황_DAM */
		           total.comn_dtls_cd as treq_oprn_syst_cd
		         , total.detl_cd_nm as comn_cd_nm
		         , total.comn_dtls_cd_1 as trgt_syst_cd
		         , total.detl_cd_nm_1 as comn_cd_nm1
		         , '' as user_nm
		         , '' as user_id
		         , tday.c_cnt as prsn_cnt1           -- 당일발생
		         , total.c_cmpl as prsn_cnt2         -- 당일조치
		         , total.c_cnfm as prsn_cnt3         -- 당일현업확인
		         , null as prsn_cnt4                 -- 기각확인
		         , total.all_cnt as prsn_cnt5        -- 누적건수
		         , total.all_cmpl as prsn_cnt6       -- 누적조치
		         , total.all_cancel_cnfm as prsn_cnt7 -- 누적기각(확정)
		         , total.all_remain as prsn_cnt8     -- 잔여소계
		         , total.all_stop as prsn_cnt9       -- 판단대기
		         , total.all_ing as prsn_cnt10       -- 조치중
		         , total.all_req as prsn_cnt11       -- 재조치요청
		         , total.all_cancel_req as prsn_cnt12 -- 기각재검토
		         , total.all_cancel_consult as prsn_cnt13 -- 누적기각(협의요)*/
		         , total.all_percent as afi_inqr_ra1 -- 조치율
		         , null as afi_inqr_ra2              -- 여분
		         , total.all_remain_cnt as prsn_cnt14 -- 잔여
		         , total.all_cnfm_cmpl as prsn_cnt15 -- 확인완료
		         , total.scrn_dspl_sqnc as grid_row_sqnc1
		         , total.scrn_dspl_sqnc_1 as grid_row_sqnc2
		      from (
		            select c.comn_dtls_cd
		                 , c.detl_cd_nm
		                 , c.comn_dtls_cd_1
		                 , c.detl_cd_nm_1
		                 , count(a.PRGM_ID) as c_cnt    -- 당일발생
		--                 , sum(case when a.acrl_fnsh_ymd is null then 0 else 1 end) as c_cmpl   -- 당일조치
		--                 , sum(case when a.ACWR_CNFR_FINS_DD is null then 0 else 1 end) c_cnfm  -- 당일현업확인
		                 , c.scrn_dspl_sqnc
		                 , c.scrn_dspl_sqnc_1
		              from cotsterdt a
		                 , COTBPRMMT b
		                 , (select  a.COMN_DTLS_CD
		                         , a.DETL_CD_NM
		                         , a.SCRN_DSPL_SQNC
		                         , b.COMN_DTLS_CD as COMN_DTLS_CD_1
		                         , b.DETL_CD_NM   as DETL_CD_NM_1
		                         , b.SCRN_DSPL_SQNC  as SCRN_DSPL_SQNC_1
		                    from    CCCMCDDMT a
		                         , CCCMCDDMT b
		                    where   a.COMN_GRP_CD  = 'COR_025'
		                     and   Length(a.COMN_DTLS_CD) = 1
		                     and   b.COMN_GRP_CD  = 'COR_025'
		                     and   Length(b.COMN_DTLS_CD) = 2
		                     and   a.COMN_DTLS_CD = substr(b.COMN_DTLS_CD, 1, 1)   ) c
		             where a.TEST_STEP_CD =  #{testStepCd} 
		               and nvl(a.DLTN_YN, 'N') = 'N'
		               and trunc(a.FRST_RGST_DT) = to_date( #{baseYmd} , 'yyyymmdd')
		               and b.PRGM_ID = a.PRGM_ID
		               and c.comn_dtls_cd_1 = b.prjt_tiss_cd
		               and ( (nvl( #{prorBaseCd} , '0') = 'S' and nvl(b.PRNC_YN, '0') =  #{prorBaseCd} ) or
		                     (nvl( #{prorBaseCd} , '0') = 'M' and nvl(b.PRNC_YN, '0') in ( #{prorBaseCd} , 'S')) or
		                     (nvl( #{prorBaseCd} , '0') = 'L1' and nvl(b.PROR_BASE_CD, '0') =  #{prorBaseCd} ) or
		                     (nvl( #{prorBaseCd} , '0') = '0')
		                   )
		               and ( (nvl( #{afiSrchYn} , 'N') = 'N' and b.PRGM_TYP_CD in ('A01', 'A02', 'A03')) or
		                     (nvl( #{afiSrchYn} , 'N') = 'Y' and b.PRGM_TYP_CD = 'A05')
		                   )
		            group by c.comn_dtls_cd
		                 , c.detl_cd_nm
		                 , c.comn_dtls_cd_1
		                 , c.detl_cd_nm_1
		                 , c.scrn_dspl_sqnc
		                 , c.scrn_dspl_sqnc_1) tday ,
		            (
		            select c.comn_dtls_cd
		                 , c.detl_cd_nm
		                 , c.comn_dtls_cd_1
		                 , c.detl_cd_nm_1
		                 , sum(case when a.acrl_fnsh_ymd = to_date( #{baseYmd} , 'yyyymmdd') then 1 else 0 end) as c_cmpl -- 당일조치
		                 , sum(case when a.ACWR_CNFR_FINS_DD = to_date( #{baseYmd} , 'yyyymmdd') then 1 else 0 end) as c_cnfm -- 당일협업확인
		                 , count(a.PRGM_ID) as all_cnt  -- 누적건수
		                 , sum(case when a.FULT_PRSG_STTS_CD in ('3', '5') then 1 else 0 end) as all_cmpl -- 누적조치
		                 , sum(case when a.fult_prsg_stts_cd = '7' and d.test_rslt_cd in ('T1', 'T3') then 1 else 0 end) as all_cancel_cnfm -- 누적기각(확정)
		                 , count(a.PRGM_ID) - sum(case when a.FULT_PRSG_STTS_CD in ('3', '5') then 1 else 0 end) -
		                     sum(case when a.fult_prsg_stts_cd = '7' and d.test_rslt_cd in ('T1', 'T3') then 1 else 0 end) as all_remain -- 잔여소계
		                 , sum(case when a.FULT_PRSG_STTS_CD is null then 1 else 0 end) as all_stop -- 판단대기
		                 , sum(case when a.FULT_PRSG_STTS_CD in ('1', '2') then 1 else 0 end) as all_ing -- 조치중
		                 , sum(case when a.FULT_PRSG_STTS_CD = '6' then 1 else 0 end) as all_req -- 재조치요청
		                 , sum(case when a.FULT_PRSG_STTS_CD = '8' then 1 else 0 end) as all_cancel_req -- 기각재검토
		                 , sum(case when a.fult_prsg_stts_cd = '7' and d.test_rslt_cd = 'T2' then 1 else 0 end) as all_cancel_consult   -- 기각(협의요)*/
		                 , trunc(((sum(case when a.FULT_PRSG_STTS_CD in ('3', '5') then 1 else 0 end) +
		                         sum(case when a.fult_prsg_stts_cd = '7' and d.test_rslt_cd in ('T1', 'T3') then 1 else 0 end)) * 100 / count(a.PRGM_ID)), 1) as all_percent-- 조치율
		                 , sum(case when a.FULT_PRSG_STTS_CD = '3' then 1 else 0 end) as all_remain_cnt -- 잔여
		                 , sum(case when a.FULT_PRSG_STTS_CD = '5' then 1 else 0 end) as all_cnfm_cmpl-- 확인완료
		                 , c.scrn_dspl_sqnc
		                 , c.scrn_dspl_sqnc_1
		              from cotsterdt a
		                 , COTBPRMMT b
		                 , (select  a.COMN_DTLS_CD
		                         , a.DETL_CD_NM
		                         , a.SCRN_DSPL_SQNC
		                         , b.COMN_DTLS_CD as COMN_DTLS_CD_1
		                         , b.DETL_CD_NM   as DETL_CD_NM_1
		                         , b.SCRN_DSPL_SQNC  as SCRN_DSPL_SQNC_1
		                    from    CCCMCDDMT a
		                         , CCCMCDDMT b
		                    where   a.COMN_GRP_CD  = 'COR_025'
		                     and   Length(a.COMN_DTLS_CD) = 1
		                     and   b.COMN_GRP_CD  = 'COR_025'
		                     and   Length(b.COMN_DTLS_CD) = 2
		                     and a.COMN_GRP_CD = b.COMN_GRP_CD
		                     and   a.COMN_DTLS_CD = substr(b.COMN_DTLS_CD, 1, 1) ) c
		                 , COTSTERMT d
		             where a.TEST_STEP_CD =  #{testStepCd} 
		               and nvl(a.DLTN_YN, 'N') = 'N'
		               and b.PRGM_ID = a.PRGM_ID
		               and c.comn_dtls_cd_1 = b.prjt_tiss_cd
		               and ( (nvl( #{prorBaseCd} , '0') = 'S' and nvl(b.PRNC_YN, '0') =  #{prorBaseCd} ) or
		                     (nvl( #{prorBaseCd} , '0') = 'M' and nvl(b.PRNC_YN, '0') in ( #{prorBaseCd} , 'S')) or
		                     (nvl( #{prorBaseCd} , '0') = 'L1' and nvl(b.PROR_BASE_CD, '0') =  #{prorBaseCd} ) or
		                     (nvl( #{prorBaseCd} , '0') = '0')
		                   )
		               and ( (nvl( #{afiSrchYn} , 'N') = 'N' and b.PRGM_TYP_CD in ('A01', 'A02', 'A03')) or
		                     (nvl( #{afiSrchYn} , 'N') = 'Y' and b.PRGM_TYP_CD = 'A05')
		                   )
		               and d.PRGM_ID(+) = a.PRGM_ID
		               and d.TEST_STEP_CD(+) = a.TEST_STEP_CD
		               and d.TEST_ASGN_ID(+) = a.TEST_ASGN_ID
		               and d.TEST_ID(+) = a.TEST_ID
		            group by c.comn_dtls_cd
		                 , c.detl_cd_nm
		                 , c.comn_dtls_cd_1
		                 , c.detl_cd_nm_1
		                 , c.scrn_dspl_sqnc
		                 , c.scrn_dspl_sqnc_1) total
		     where tday.comn_dtls_cd(+) = total.comn_dtls_cd
		       and tday.detl_cd_nm(+) = total.detl_cd_nm
		       and tday.comn_dtls_cd_1(+) = total.comn_dtls_cd_1
		       and tday.detl_cd_nm_1(+) = total.detl_cd_nm_1
		    order by total.scrn_dspl_sqnc, total.scrn_dspl_sqnc_1
		]]>
	</select>



</mapper>