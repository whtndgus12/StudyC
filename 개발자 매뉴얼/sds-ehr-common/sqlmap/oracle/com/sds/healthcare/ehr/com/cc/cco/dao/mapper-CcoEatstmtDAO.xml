<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    SQL File Name : mapper_CcoEatstmtDAO_sql.xml 
    Description : -->
<mapper namespace="CcoEatstmtDAO">




    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoEatstmtDAO-insertEatstmt03 (테스터 테스트 데이터 저장) 
        Description :                                           cod_eatstmt_i03 테스터 테스트 데이터 저장
                                            
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoEatstmtDVO
    -->	
	<insert id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoEatstmtDAO-insertEatstmt03"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoEatstmtDVO"  >
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoEatstmtDAO-insertEatstmt03 */
		    insert  /*+ cod_eatstmt_i03$I01_[비대상]테스터 테스트 데이터 저장 */
		    into    COTSTERMT
		                           (PRGM_ID
		                           , TEST_STEP_CD
		                           , TEST_ASGN_ID
		                           , TEST_ID
		                           , FNCT_ID
		                           , TEST_DT
		                           , TEST_RSLT_CD
		                           , RMRK_CTN
		                           , DLTN_YN
		                           , INTG_TEST_RFRC_YN
		                           , FRST_RGSR_ID
		                           , FRST_RGST_IP
		                           , FRST_RGST_DT
		                           , FRST_RGST_CLNT_PRGM_ID
		                           , FRST_RGST_SRVR_PRGM_ID
		                           , LAST_UPDR_ID
		                           , LAST_UPDT_IP
		                           , LAST_UPDT_DT
		                           , LAST_UPDT_CLNT_PRGM_ID
		                           , LAST_UPDT_SRVR_PRGM_ID
		                            )
		                      values( #{prgmId} 
		                           ,  #{testStepCd} 
		                           ,  #{testAsgnId} 
		                           ,  #{testId} 
		                           ,  #{fnctId} 
		                           , to_date( #{testDt} , 'yyyymmdd')
		                           ,  #{testRsltCd} 
		                           ,  #{rmrkCtn} 
		                           ,  #{dltnYn} 
		                           ,  #{intgTestRfrcYn} 
		                           ,  #{gvUserId} 
		                           ,  #{gvUserIp} 
		                           , sysdate
		                           ,  #{gvClntPrgmId} 
		                           ,  #{gvSrvrPrgmId} 
		                           ,  #{gvUserId} 
		                           ,  #{gvUserIp} 
		                           , sysdate
		                           ,  #{gvClntPrgmId} 
		                           ,  #{gvSrvrPrgmId} 
		                            )
	</insert>




    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoEatstmtDAO-updateEatstmt04 (테스터 테스트 데이터 저장) 
        Description :                                           cod_eatstmt_u04 테스터 테스트 데이터 저장
                                            
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoEatstmtDVO
    -->	
	<update id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoEatstmtDAO-updateEatstmt04"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoEatstmtDVO"  >
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoEatstmtDAO-updateEatstmt04 */
		    update  /*+ cod_eatstmt_u04$I01_[비대상]테스터 테스트 데이터 저장 */
		            COTSTERMT
		    set
		            FNCT_ID               =  #{fnctId} 
		          , TEST_DT               = to_date( #{testDt} , 'yyyymmdd')
		          , TEST_RSLT_CD          =  #{testRsltCd} 
		          , RMRK_CTN              =  #{rmrkCtn} 
		          , DLTN_YN               =  #{dltnYn} 
		          , INTG_TEST_RFRC_YN     =  #{intgTestRfrcYn} 
		          , LAST_UPDR_ID          =  #{gvUserId} 
		          , LAST_UPDT_IP          =  #{gvUserIp} 
		          , LAST_UPDT_DT          = sysdate
		          , LAST_UPDT_CLNT_PRGM_ID     =  #{gvClntPrgmId} 
		          , LAST_UPDT_SRVR_PRGM_ID     =  #{gvSrvrPrgmId} 
		    where   PRGM_ID               =  #{prgmId} 
		      and   TEST_STEP_CD          =  #{testStepCd} 
		      and   TEST_ASGN_ID          =  #{testAsgnId} 
		      and   TEST_ID               =  #{testId} 
	</update>


	<resultMap id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoEatstmtDAO-selectOneEatstmtTestId-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoEatstmtDVO">
	
		<result property="testId" column="TEST_ID"/>
	</resultMap>
	
    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoEatstmtDAO-selectOneEatstmtTestId (단위테스트 관리 채번 프로그램) 
        Description :                                           cod_eatstmt_s01 단위테스트 관리 채번 프로그램
                                            
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoEatstmtDVO
		resultMap : com-sds-healthcare-ehr-com-cc-cco-dao-CcoEatstmtDAO-selectOneEatstmtTestId-result
    -->
	<select id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoEatstmtDAO-selectOneEatstmtTestId"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoEatstmtDVO"  resultMap="com-sds-healthcare-ehr-com-cc-cco-dao-CcoEatstmtDAO-selectOneEatstmtTestId-result" useCache="true" flushCache="false">
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoEatstmtDAO-selectOneEatstmtTestId */
		<![CDATA[
		    select  /*+ cod_eatstmt_s01$S01_[비대상]단위테스트 관리 채번 프로그램 */
		            'T' || lpad(to_number(substr(nvl(max(TEST_ID), '000000'), 2, 5)) +1, 5, '0') as TEST_ID
		    from    COTSTERMT
		    where   PRGM_ID       =  #{prgmId} 
		      and   TEST_STEP_CD  =  #{testStepCd} 
		      and   TEST_ASGN_ID  =  #{testAsgnId} 
		]]>
	</select>




	<resultMap id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoEatstmtDAO-listEatstmt03-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoEatstmtDVO">
	
		<result property="prgmId" column="PRGM_ID"/>
		<result property="fnctId" column="FNCT_ID"/>
		<result property="fnctNm" column="FNCT_NM"/>
		<result property="fnctDetlCtn" column="FNCT_DETL_CTN"/>
		<result property="rmrkCtn" column="RMRK_CTN"/>
		<result property="devpAsgnId" column="DEVP_ASGN_ID"/>
		<result property="userNm" column="USER_NM"/>
		<result property="afiRturVl" column="AFI_RTUR_VL"/>
		<result property="testStepCd" column="TEST_STEP_CD"/>
		<result property="testAsgnId" column="TEST_ASGN_ID"/>
		<result property="testId" column="TEST_ID"/>
		<result property="fultId" column="FULT_ID"/>
		<result property="fultDscrCtn" column="FULT_DSCR_CTN"/>
		<result property="fultTypeCd" column="FULT_TYPE_CD"/>
		<result property="detlCdNm2" column="DETL_CD_NM_2"/>
		<result property="atchId" column="ATCH_ID"/>
		<result property="testDt" column="TEST_DT"/>
		<result property="testRsltCd" column="TEST_RSLT_CD"/>
		<result property="afiRturVl2" column="AFI_RTUR_VL_2"/>
		<result property="afiRturVl1" column="AFI_RTUR_VL_1"/>
		<result property="fultCrntSttsCd" column="FULT_CRNT_STTS_CD"/>
		<result property="detlCdNm" column="DETL_CD_NM"/>
		<result property="rmrkCtn1" column="RMRK_CTN_1"/>
		<result property="fultPrsgSttsCd" column="FULT_PRSG_STTS_CD"/>
		<result property="atchResnCtn" column="ATCH_RESN_CTN"/>
		<result property="detlCdNm1" column="DETL_CD_NM_1"/>
		<result property="mngpId" column="MNGP_ID"/>
		<result property="userNm1" column="USER_NM_1"/>
		<result property="planStrtYmd" column="PLAN_STRT_YMD"/>
		<result property="planFnshYmd" column="PLAN_FNSH_YMD"/>
		<result property="rgsrId" column="RGSR_ID"/>
		<result property="userNm2" column="USER_NM_2"/>
		<result property="rgstYmd" column="RGST_YMD"/>
		<result property="acrlStrtYmd" column="ACRL_STRT_YMD"/>
		<result property="acrlFnshYmd" column="ACRL_FNSH_YMD"/>
		<result property="acwrCnfrFinsDd" column="ACWR_CNFR_FINS_DD"/>
		<result property="reMngnRqstDt" column="RE_MNGN_RQST_DT"/>
		<result property="rjctYmd" column="RJCT_YMD"/>
		<result property="mdfcHxCtn" column="MDFC_HX_CTN"/>
		<result property="fultMngnNtm" column="FULT_MNGN_NTM"/>
		<result property="detlCdNm3" column="DETL_CD_NM_3"/>
		<result property="intgTestRfrcYn" column="INTG_TEST_RFRC_YN"/>
		<result property="fnctDvsnNm" column="FNCT_DVSN_NM"/>
		<result property="lnkdYn" column="LNKD_YN"/>
		<result property="reRevwRqstYmd" column="RE_REVW_RQST_YMD"/>
		<result property="afiSrchYn" column="AFI_SRCH_YN"/>
	</resultMap>
	
    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoEatstmtDAO-listEatstmt03 (프로그램 기능별 단위테스트 정보 조회) 
        Description :                                           cod_eatstmt_l03 프로그램 기능별 단위테스트 정보 조회
                                            
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoEatstmtDVO
		resultMap : com-sds-healthcare-ehr-com-cc-cco-dao-CcoEatstmtDAO-listEatstmt03-result
    -->
	<select id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoEatstmtDAO-listEatstmt03"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoEatstmtDVO"  resultMap="com-sds-healthcare-ehr-com-cc-cco-dao-CcoEatstmtDAO-listEatstmt03-result" useCache="true" flushCache="false">
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoEatstmtDAO-listEatstmt03 */
		<![CDATA[
		    select  /*+ cod_eatstmt_l03$S01_[비대상]프로그램 기능별 단위테스트 정보 조회 */ 
		            a.PRGM_ID
		          , a.FNCT_ID
		          , a.FNCT_NM
		          , a.FNCT_DETL_CTN
		          , a.RMRK_CTN
		          , a.DEVP_ASGN_ID
		          , b.USER_NM
		          , decode(a.CRNT_STTS_CD, '4',decode( #{testStepCd} , 'D3', '비대상', '대상') , '5', '대상', '6', '대상', '비대상') as AFI_RTUR_VL
		          , c.TEST_STEP_CD
		          , c.TEST_ASGN_ID
		          , c.TEST_ID
		          , c.FULT_ID
		          , c.FULT_DSCR_CTN
		          , c.FULT_TYPE_CD
		          , h.DETL_CD_NM as DETL_CD_NM_2
		          , c.ATCH_ID
		          , to_char(c.TEST_DT, 'YYYYMMDD') as TEST_DT
		          , nvl(c.TEST_RSLT_CD, 'T0') as TEST_RSLT_CD
		          , case when EXISTS( select  FILE_ID
		                              from    COSCFNADT
		                              where   PRGM_ID = c.PRGM_ID
		                                and   ATCH_ID = c.ATCH_ID
		                            )
		                 then 'Y'
		                 else 'N'
		            end as AFI_RTUR_VL_2
		          , case when c.TEST_RSLT_CD = 'T1' then '성공'
		                 when c.TEST_RSLT_CD = 'T2' then decode(c.FULT_CRNT_STTS_CD, 'A1', '실패', 'A9', '협의필요', '개발팀 확인중')
		                 when c.TEST_RSLT_CD = 'T3' then '비대상'
		            else ''
		            end as AFI_RTUR_VL_1
		          , c.FULT_CRNT_STTS_CD
		          , d.DETL_CD_NM
		          , c.RMRK_CTN as RMRK_CTN_1
		          , c.FULT_PRSG_STTS_CD
		          , ( select  ATCH_RESN_CTN
		              from    COSCFNAMT
		              where   PRGM_ID      = c.PRGM_ID
		                and   ATCH_ID      = c.ATCH_ID
		                and   ATCH_DVSN_CD = 'A4'
		            ) ATCH_RESN_CTN
		          , e.DETL_CD_NM as DETL_CD_NM_1
		          , c.MNGP_ID
		          , f.USER_NM as USER_NM_1
		          , to_char(c.PLAN_STRT_YMD, 'YYYYMMDD') as PLAN_STRT_YMD
		          , to_char(c.PLAN_FNSH_YMD, 'YYYYMMDD') as PLAN_FNSH_YMD
		          , c.RGSR_ID
		          , g.USER_NM as USER_NM_2
		          , to_char(c.RGST_YMD, 'YYYYMMDD') as RGST_YMD
		          , to_char(c.ACRL_STRT_YMD, 'YYYYMMDD') as ACRL_STRT_YMD
		          , to_char(c.ACRL_FNSH_YMD, 'YYYYMMDD') as ACRL_FNSH_YMD
		          , to_char(c.ACWR_CNFR_FINS_DD, 'YYYYMMDD') as ACWR_CNFR_FINS_DD
		          , to_char(c.RE_MNGN_RQST_DT, 'YYYYMMDD') as RE_MNGN_RQST_DT
		          , to_char(c.RJCT_YMD, 'YYYYMMDD') as RJCT_YMD
		          , c.MDFC_HX_CTN
		          , c.FULT_MNGN_NTM
		          , i.DETL_CD_NM as DETL_CD_NM_3
		          , nvl(c.INTG_TEST_RFRC_YN, 'N') as INTG_TEST_RFRC_YN
		          , a.FNCT_DVSN_NM
		          , nvl(a.LNKD_YN, 'N') as LNKD_YN
		          , to_char(c.RE_REVW_RQST_YMD, 'YYYYMMDD') as RE_REVW_RQST_YMD
		          , 'U' as AFI_SRCH_YN
		    from    COTBPRMDT a
		          , CCUSRDPHT b
		          , ( select xa.PRGM_ID
		                   , xa.TEST_STEP_CD
		                   , xa.TEST_ASGN_ID
		                   , xa.TEST_ID
		                   , xa.FNCT_ID
		                   , xa.TEST_DT
		                   , xa.TEST_RSLT_CD
		                   , xb.FULT_ID
		                   , xb.FULT_CRNT_STTS_CD
		                   , xb.FULT_DSCR_CTN
		                   , xb.MNGP_ID
		                   , xb.ACWR_CNFR_FINS_DD
		                   , xb.FULT_TYPE_CD
		                   , xb.ATCH_ID
		                   , xa.RMRK_CTN
		                   , xb.FULT_PRSG_STTS_CD
		                   , xb.PLAN_STRT_YMD
		                   , xb.PLAN_FNSH_YMD
		                   , xb.ACRL_STRT_YMD
		                   , xb.ACRL_FNSH_YMD
		                   , xb.RE_MNGN_RQST_DT
		                   , xb.RJCT_YMD
		                   , xb.MDFC_HX_CTN
		                   , xb.FULT_MNGN_NTM
		                   , xb.RGSR_ID
		                   , xb.RGST_YMD
		                   , nvl(xa.INTG_TEST_RFRC_YN, 'N') as INTG_TEST_RFRC_YN
		                   , xb.RE_REVW_RQST_YMD
		              from   COTSTERMT xa
		                   , COTSTERDT xb
		              where  nvl(xa.DLTN_YN, 'N') <> 'Y'
		                and  nvl(xb.DLTN_YN, 'N') <> 'Y'
		                and  xa.PRGM_ID           = xb.PRGM_ID(+)
		                and  xa.TEST_STEP_CD      = xb.TEST_STEP_CD(+)
		                and  xa.TEST_ASGN_ID      = xb.TEST_ASGN_ID(+)
		                and  xa.TEST_ID           = xb.TEST_ID(+)
		                and  xa.PRGM_ID           =  #{prgmId} 
		                and  xa.TEST_STEP_CD      =  #{testStepCd} 
		                and  xa.TEST_ASGN_ID      =  #{testAsgnId} 
		            ) c
		          , CCCMCDDMT d
		          , CCCMCDDMT e
		          , CCUSRDPHT f
		          , CCUSRDPHT g
		          , CCCMCDDMT h
		          , CCCMCDDMT i
		    where   nvl(a.DLTN_YN, 'N') <> 'Y'
		      and   nvl(a.DSCS_YN, 'N') = 'Y'
		      and   a.PRGM_ID           =  #{prgmId} 
		      and   a.DEVP_ASGN_ID      = b.USER_ID(+)
		      and   a.PRGM_ID  = c.PRGM_ID(+)
		      and   a.FNCT_ID  = c.FNCT_ID(+)
		      and   d.COMN_GRP_CD(+)    = 'COR_011'
		      and   c.FULT_CRNT_STTS_CD = d.COMN_DTLS_CD(+)
		      and   e.COMN_GRP_CD(+)    = 'COR_030'
		      and   c.FULT_PRSG_STTS_CD = e.COMN_DTLS_CD(+)
		      and   c.MNGP_ID           = f.USER_ID(+)
		      and   c.RGSR_ID           = g.USER_ID(+)
		      and   h.COMN_GRP_CD(+)    = 'COR_013'
		      and   c.FULT_TYPE_CD = h.COMN_DTLS_CD(+)
		      and   i.COMN_GRP_CD(+)    = 'COR_030'
		      and   c.FULT_PRSG_STTS_CD = i.COMN_DTLS_CD(+)
		    order by   a.PRIN_SQNC
		]]>
	</select>



</mapper>