<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    SQL File Name : mapper_CcoFitGapSumryDAO_sql.xml 
    Description :                                      FitGap결과서 요구내용분류별 진행현황(건수), (건수&FP), (건수&FP RATIO )
                  -->
<mapper namespace="CcoFitGapSumryDAO">


	<resultMap id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapSumry-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoFitGapSumryDVO">
	
		<result property="systId" column="SYST_ID"/>
		<result property="detlCdNm1" column="DETL_CD_NM1"/>
		<result property="sbSystId" column="SB_SYST_ID"/>
		<result property="detlCdNm2" column="DETL_CD_NM2"/>
		<result property="fxngRa1" column="FXNG_RA_1"/>
		<result property="fxngRa2" column="FXNG_RA_2"/>
		<result property="fxngRa3" column="FXNG_RA_3"/>
		<result property="fxngRa4" column="FXNG_RA_4"/>
		<result property="fxngRa5" column="FXNG_RA_5"/>
		<result property="fxngRa6" column="FXNG_RA_6"/>
		<result property="fxngRa7" column="FXNG_RA_7"/>
		<result property="fxngRa8" column="FXNG_RA_8"/>
		<result property="fxngRa9" column="FXNG_RA_9"/>
		<result property="fxngRa10" column="FXNG_RA_10"/>
		<result property="fxngRa11" column="FXNG_RA_11"/>
		<result property="fxngRa12" column="FXNG_RA_12"/>
		<result property="fxngRa13" column="FXNG_RA_13"/>
		<result property="fxngRa14" column="FXNG_RA_14"/>
		<result property="fxngRa15" column="FXNG_RA_15"/>
		<result property="fxngRa16" column="FXNG_RA_16"/>
		<result property="fxngRa17" column="FXNG_RA_17"/>
		<result property="fxngRa18" column="FXNG_RA_18"/>
		<result property="fxngRa19" column="FXNG_RA_19"/>
		<result property="fxngRa20" column="FXNG_RA_20"/>
		<result property="fxngRa21" column="FXNG_RA_21"/>
		<result property="fxngRa22" column="FXNG_RA_22"/>
		<result property="fxngRa23" column="FXNG_RA_23"/>
		<result property="fxngRa24" column="FXNG_RA_24"/>
		<result property="fxngRa25" column="FXNG_RA_25"/>
		<result property="fxngRa26" column="FXNG_RA_26"/>
		<result property="fxngRa27" column="FXNG_RA_27"/>
		<result property="fxngRa28" column="FXNG_RA_28"/>
		<result property="fxngRa29" column="FXNG_RA_29"/>
		<result property="fxngRa30" column="FXNG_RA_30"/>
		<result property="fxngRa31" column="FXNG_RA_31"/>
		<result property="fxngRa32" column="FXNG_RA_32"/>
		<result property="fxngRa33" column="FXNG_RA_33"/>
		<result property="fxngRa34" column="FXNG_RA_34"/>
		<result property="fxngRa35" column="FXNG_RA_35"/>
		<result property="fxngRa36" column="FXNG_RA_36"/>
		<result property="fxngRa37" column="FXNG_RA_37"/>
		<result property="fxngRa38" column="FXNG_RA_38"/>
		<result property="fxngRa39" column="FXNG_RA_39"/>
		<result property="fxngRa40" column="FXNG_RA_40"/>
		<result property="fxngRa41" column="FXNG_RA_41"/>
		<result property="fxngRa42" column="FXNG_RA_42"/>
		<result property="fxngRa43" column="FXNG_RA_43"/>
		<result property="fxngRa44" column="FXNG_RA_44"/>
		<result property="fxngRa45" column="FXNG_RA_45"/>
		<result property="fxngRa46" column="FXNG_RA_46"/>
		<result property="fxngRa47" column="FXNG_RA_47"/>
		<result property="fxngRa48" column="FXNG_RA_48"/>
		<result property="fxngRa49" column="FXNG_RA_49"/>
		<result property="fxngRa50" column="FXNG_RA_50"/>
		<result property="fxngRa51" column="FXNG_RA_51"/>
		<result property="fxngRa52" column="FXNG_RA_52"/>
		<result property="fxngRa53" column="FXNG_RA_53"/>
		<result property="fxngRa54" column="FXNG_RA_54"/>
		<result property="fxngRa55" column="FXNG_RA_55"/>
		<result property="fxngRa56" column="FXNG_RA_56"/>
		<result property="fxngRa57" column="FXNG_RA_57"/>
		<result property="fxngRa58" column="FXNG_RA_58"/>
		<result property="fxngRa59" column="FXNG_RA_59"/>
		<result property="fxngRa60" column="FXNG_RA_60"/>
		<result property="fxngRa61" column="FXNG_RA_61"/>
		<result property="fxngRa62" column="FXNG_RA_62"/>
		<result property="fxngRa63" column="FXNG_RA_63"/>
		<result property="fxngRa64" column="FXNG_RA_64"/>
		<result property="fxngRa65" column="FXNG_RA_65"/>
		<result property="fxngRa66" column="FXNG_RA_66"/>
		<result property="fxngRa67" column="FXNG_RA_67"/>
		<result property="fxngRa68" column="FXNG_RA_68"/>
		<result property="fxngRa69" column="FXNG_RA_69"/>
		<result property="fxngRa70" column="FXNG_RA_70"/>
		<result property="fxngRa71" column="FXNG_RA_71"/>
		<result property="fxngRa72" column="FXNG_RA_72"/>
	</resultMap>
	
    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapSumry () 
        Description :                       
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoFitGapSumryDVO
		resultMap : com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapSumry-result
    -->
	<select id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapSumry"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoFitGapSumryDVO"  resultMap="com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapSumry-result" useCache="true" flushCache="false">
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapSumry */
			<![CDATA[
		                 select  
							          C1.COMN_DTLS_CD as SYST_ID 												-- 시스템ID
							        , C1.COMN_DTLS_CD || '--' || C1.DETL_CD_NM  as DETL_CD_NM1
							        , C2.COMN_DTLS_CD  as SB_SYST_ID                               			-- 서브시스템ID
				                    , C2.DETL_CD_NM     as DETL_CD_NM2
				                    -- 기능적용(config적용) 
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,'1',1,0),0))  as FXNG_RA_1  -- 검토중
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,'2',1,0),0))  as FXNG_RA_2  -- 검토완료
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,'3',1,0),0))  as FXNG_RA_3  -- 상호확인
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,'4',1,0),0))  as FXNG_RA_4  -- 이관
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,'5',1,0),0))  as FXNG_RA_5  -- 상호확인(취소)
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,null,1,0),0)) as FXNG_RA_6  -- 빈값 
				                   ,( sum(decode(GD.DMND_CTN_CLSF_CD, '01',1,0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,'4',1,0),0)) ) as FXNG_RA_7  -- 소계(이관제외)
				                    -- 기능개발(필수고시법적용) 
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,'1',1,0),0))  as FXNG_RA_8  -- 검토중
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,'2',1,0),0))  as FXNG_RA_9  -- 검토완료
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,'3',1,0),0))  as FXNG_RA_10  -- 상호확인
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,'4',1,0),0))  as FXNG_RA_11  -- 이관
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,'5',1,0),0))  as FXNG_RA_12  -- 상호확인(취소)
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,null,1,0),0)) as FXNG_RA_13  -- 빈값
				                   ,( sum(decode(GD.DMND_CTN_CLSF_CD, '02',1,0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,'4',1,0),0)) ) as FXNG_RA_14  -- 소계                   
				                   -- 기능개발(추가기능) 
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,'1',1,0),0))  as FXNG_RA_15  -- 검토중
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,'2',1,0),0))  as FXNG_RA_16  -- 검토완료
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,'3',1,0),0))  as FXNG_RA_17  -- 상호확인
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,'4',1,0),0))  as FXNG_RA_18  -- 이관
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,'5',1,0),0))  as FXNG_RA_19  -- 상호확인(취소)
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,null,1,0),0)) as FXNG_RA_20  -- 빈값
				                   , ( sum(decode(GD.DMND_CTN_CLSF_CD, '03',1,0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,'4',1,0),0)) ) as FXNG_RA_21  -- 소계
				                   -- 연계(인터페이스)
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,'1',1,0),0))  as FXNG_RA_22  -- 검토중
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,'2',1,0),0))  as FXNG_RA_23  -- 검토완료
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,'3',1,0),0))  as FXNG_RA_24  -- 상호확인
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,'4',1,0),0))  as FXNG_RA_25  -- 이관
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,'5',1,0),0))  as FXNG_RA_26  -- 상호확인(취소)
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,null,1,0),0)) as FXNG_RA_27  -- 빈값
				                   , ( sum(decode(GD.DMND_CTN_CLSF_CD, '04',1,0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,'4',1,0),0)) ) as FXNG_RA_28  -- 소계                   
				                   -- 솔루션 Core연결
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,'1',1,0),0))  as FXNG_RA_29  -- 검토중
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,'2',1,0),0))  as FXNG_RA_30  -- 검토완료
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,'3',1,0),0))  as FXNG_RA_31  -- 상호확인
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,'4',1,0),0))  as FXNG_RA_32  -- 이관
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,'5',1,0),0))  as FXNG_RA_33  -- 상호확인(취소)
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,null,1,0),0)) as FXNG_RA_34  -- 빈값
				                   , ( sum(decode(GD.DMND_CTN_CLSF_CD, '05',1,0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,'4',1,0),0)) ) as FXNG_RA_35  -- 소계                                      
				                   -- 총계(검토중)
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,'1',1,0),0)) + 
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,'1',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,'1',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,'1',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,'1',1,0),0)) + 
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,'1',1,0),0)) + 
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,'1',1,0),0)) + 
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,'1',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,'1',1,0),0)) as FXNG_RA_36  -- 총계(검토중)
				                   -- 총계(검토완료)
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,'2',1,0),0)) + 
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,'2',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,'2',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,'2',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,'2',1,0),0)) + 
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,'2',1,0),0)) + 
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,'2',1,0),0)) + 
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,'2',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,'2',1,0),0)) as FXNG_RA_37  -- 총계(검토완료)
				                   -- 총계(상호확인)
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,'3',1,0),0)) + 
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,'3',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,'3',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,'3',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,'3',1,0),0)) + 
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,'3',1,0),0)) + 
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,'3',1,0),0)) + 
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,'3',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,'3',1,0),0)) as FXNG_RA_38  -- 총계(상호확인)                     
				                   -- 총계(이관)
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,'4',1,0),0)) + 
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,'4',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,'4',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,'4',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,'4',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,'4',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,'4',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,'4',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,'4',1,0),0)) as FXNG_RA_39  -- 총계(이관)                                          
				                   -- 총계(상호확인(취소))
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,'5',1,0),0)) + 
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,'5',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,'5',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,'5',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,'5',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,'5',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,'5',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,'5',1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,'5',1,0),0)) as FXNG_RA_40  -- 총계(상호확인(취소))
				                   -- 총계(빈값)
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,null,1,0),0)) + 
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,null,1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,null,1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,null,1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,null,1,0),0)) + 
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,null,1,0),0)) + 
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,null,1,0),0)) + 
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,null,1,0),0)) +
				                     sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,null,1,0),0)) as FXNG_RA_41  -- 총계(빈값)
				                   -- 소계합(이관은 제외 한다.)
				                   , (
				                   		( -- 총계(검토중)
				                   		  sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,'1',1,0),0)) + 
				                     	  sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,'1',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,'1',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,'1',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,'1',1,0),0)) +	
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,'1',1,0),0)) +	
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,'1',1,0),0)) +	
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,'1',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,'1',1,0),0))
				                   		)
				                   		+
				                   		( -- 총계(검토완료)
				                   		  sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,'2',1,0),0)) + 
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,'2',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,'2',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,'2',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,'2',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,'2',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,'2',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,'2',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,'2',1,0),0))
				                   		)
				                   		+
				                   		( -- 총계(상호확인) 
				                   		  sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,'3',1,0),0)) + 
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,'3',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,'3',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,'3',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,'3',1,0),0)) +	
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,'3',1,0),0)) +	
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,'3',1,0),0)) +	
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,'3',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,'3',1,0),0)) 
				                   		)
				                   		+
				                   		( -- 총계(상호확인(취소))
				                   		  sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,'5',1,0),0)) + 
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,'5',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,'5',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,'5',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,'5',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,'5',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,'5',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,'5',1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,'5',1,0),0)) 
				                   		)
				                   		+ 
				                   		( -- 총계(빈값)
				                   		  sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,null,1,0),0)) + 
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,null,1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,null,1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,null,1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,null,1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,null,1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,null,1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,null,1,0),0)) +
				                          sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,null,1,0),0))
				                   		)
				                     )  as FXNG_RA_42  -- 소계합
				                   -- Null(빈값일 경우 : 요구내용분류값)   
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, null, 1, 0)) as FXNG_RA_43
				                   -- 총합계(이관제외 항목 )
				                   , (( -- 계 : 검토중
				                       sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,'1',1,0),0)) + 
		  		                       sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,'1',1,0),0)) +
				                       sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,'1',1,0),0)) +
				                       sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,'1',1,0),0)) +
				                       sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,'1',1,0),0)) + 
				                       sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,'1',1,0),0)) + 
				                       sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,'1',1,0),0)) + 
				                       sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,'1',1,0),0)) + 
				                       sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,'1',1,0),0))
				                     )
				                     +
				                     ( -- 계 : 검토완료
				                       sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,'2',1,0),0)) + 
				                       sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,'2',1,0),0)) +
				                       sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,'2',1,0),0)) +
				                       sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,'2',1,0),0)) +
				                       sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,'2',1,0),0)) +
				                       sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,'2',1,0),0)) +
				                       sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,'2',1,0),0)) +
				                       sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,'2',1,0),0)) +
				                       sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,'2',1,0),0)) 
				                     )  
				                     +
				                     ( -- 계 : 상호확인
					                   sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,'3',1,0),0)) + 
					                   sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,'3',1,0),0)) +
					                   sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,'3',1,0),0)) +
					                   sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,'3',1,0),0)) +
					                   sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,'3',1,0),0)) +
					                   sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,'3',1,0),0)) +
					                   sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,'3',1,0),0)) +
					                   sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,'3',1,0),0)) +
					                   sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,'3',1,0),0)) 
				                     )
				                    +
				                    (  -- 계 : 상호확인(취소)
				                       sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,'5',1,0),0)) + 
					                   sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,'5',1,0),0)) +
					                   sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,'5',1,0),0)) +
					                   sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,'5',1,0),0)) +
					                   sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,'5',1,0),0)) +
					                   sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,'5',1,0),0)) +
					                   sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,'5',1,0),0)) +
					                   sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,'5',1,0),0)) +
					                   sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,'5',1,0),0)) 
					                )
					                +
					                ( -- 계 : 빈값
					                  sum(decode(GD.DMND_CTN_CLSF_CD, '01',decode(GD.PRSS_CD,null,1,0),0)) + 
				                      sum(decode(GD.DMND_CTN_CLSF_CD, '02',decode(GD.PRSS_CD,null,1,0),0)) +
				                      sum(decode(GD.DMND_CTN_CLSF_CD, '03',decode(GD.PRSS_CD,null,1,0),0)) +
				                      sum(decode(GD.DMND_CTN_CLSF_CD, '04',decode(GD.PRSS_CD,null,1,0),0)) +
				                      sum(decode(GD.DMND_CTN_CLSF_CD, '05',decode(GD.PRSS_CD,null,1,0),0)) +
				                      sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,null,1,0),0)) +
				                      sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,null,1,0),0)) +
				                      sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,null,1,0),0)) +
				                      sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,null,1,0),0))
					                )
					                +
					                ( sum(decode(GD.DMND_CTN_CLSF_CD, null,1 ,0)) )
					              ) as FXNG_RA_44
				                   -- 추가기능(변경)
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,'1',1,0),0))  as FXNG_RA_45  -- 검토중
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,'2',1,0),0))  as FXNG_RA_46  -- 검토완료
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,'3',1,0),0))  as FXNG_RA_47  -- 상호확인
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,'4',1,0),0))  as FXNG_RA_48  -- 이관
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,'5',1,0),0))  as FXNG_RA_49  -- 상호확인(취소)
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,null,1,0),0)) as FXNG_RA_50  -- 빈값
				                   , ( sum(decode(GD.DMND_CTN_CLSF_CD, '06',1,0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '06',decode(GD.PRSS_CD,'4',1,0),0)) ) as FXNG_RA_51  -- 소계                                      			              
				                   -- 추가기능(신규)
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,'1',1,0),0))  as FXNG_RA_52  -- 검토중
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,'2',1,0),0))  as FXNG_RA_53  -- 검토완료
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,'3',1,0),0))  as FXNG_RA_54  -- 상호확인
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,'4',1,0),0))  as FXNG_RA_55  -- 이관
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,'5',1,0),0))  as FXNG_RA_56  -- 상호확인(취소)
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,null,1,0),0)) as FXNG_RA_57  -- 빈값
				                   , ( sum(decode(GD.DMND_CTN_CLSF_CD, '07',1,0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '07',decode(GD.PRSS_CD,'4',1,0),0)) ) as FXNG_RA_58  -- 소계                                      			              		                   
				                   -- 산정불가
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,'1',1,0),0))  as FXNG_RA_59  -- 검토중
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,'2',1,0),0))  as FXNG_RA_60  -- 검토완료
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,'3',1,0),0))  as FXNG_RA_61  -- 상호확인
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,'4',1,0),0))  as FXNG_RA_62  -- 이관
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,'5',1,0),0))  as FXNG_RA_63  -- 상호확인(취소)
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,null,1,0),0)) as FXNG_RA_64  -- 빈값
				                   , ( sum(decode(GD.DMND_CTN_CLSF_CD, '08',1,0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '08',decode(GD.PRSS_CD,'4',1,0),0)) ) as FXNG_RA_65  -- 소계                                      			              		                   		                   
				                   -- 동계(DW)
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,'1',1,0),0))  as FXNG_RA_66  -- 검토중
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,'2',1,0),0))  as FXNG_RA_67  -- 검토완료
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,'3',1,0),0))  as FXNG_RA_68  -- 상호확인
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,'4',1,0),0))  as FXNG_RA_69  -- 이관
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,'5',1,0),0))  as FXNG_RA_70  -- 상호확인(취소)
				                   , sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,null,1,0),0)) as FXNG_RA_71  -- 빈값
				                   , ( sum(decode(GD.DMND_CTN_CLSF_CD, '09',1,0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '09',decode(GD.PRSS_CD,'4',1,0),0)) ) as FXNG_RA_72  -- 소계                                      			              		                   		                   
				                from  CCCMCDDMT C1         -- 시스템 공통코드
				                    , CCCMCDDMT C2         -- 서브 시스템 공통코드
				                    , CORFITGDT GD         -- FITGAP 결과서
						        where NVL(GD.DLTN_YN,'N') = 'N'
								 AND  C1.COMN_GRP_CD    = 'COR_062'
								 AND  C1.COMN_DTLS_CD   = GD.SYST_ID
								 AND  C2.COMN_GRP_CD    = 'COR_063'
								 AND  C2.COMN_DTLS_CD   = GD.SB_SYST_ID
				                  /*and C2.COMN_DTLS_CD not in ('0109', '0110', '0111', '0112', '0113', '0114')*/
							    group 
							       by C1.COMN_DTLS_CD
							        , C1.DETL_CD_NM 
							        , C2.COMN_DTLS_CD
				                    , C2.DETL_CD_NM
				                order 
				                   by C1.DETL_CD_NM
						              , C2.DETL_CD_NM
				]]>
	</select>




	<resultMap id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapFpSumry-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoFitGapSumryDVO">
	
		<result property="systId" column="SYST_ID"/>
		<result property="detlCdNm1" column="DETL_CD_NM1"/>
		<result property="sbSystId" column="SB_SYST_ID"/>
		<result property="detlCdNm2" column="DETL_CD_NM2"/>
		<result property="fxngRa1" column="FXNG_RA_1"/>
		<result property="fxngRa2" column="FXNG_RA_2"/>
		<result property="fxngRa3" column="FXNG_RA_3"/>
		<result property="fxngRa4" column="FXNG_RA_4"/>
		<result property="fxngRa5" column="FXNG_RA_5"/>
		<result property="fxngRa6" column="FXNG_RA_6"/>
		<result property="fxngRa7" column="FXNG_RA_7"/>
		<result property="fxngRa8" column="FXNG_RA_8"/>
		<result property="fxngRa9" column="FXNG_RA_9"/>
		<result property="fxngRa10" column="FXNG_RA_10"/>
		<result property="fxngRa11" column="FXNG_RA_11"/>
		<result property="fxngRa12" column="FXNG_RA_12"/>
		<result property="fxngRa13" column="FXNG_RA_13"/>
		<result property="fxngRa14" column="FXNG_RA_14"/>
		<result property="fxngRa15" column="FXNG_RA_15"/>
		<result property="fxngRa16" column="FXNG_RA_16"/>
		<result property="fxngRa17" column="FXNG_RA_17"/>
		<result property="fxngRa18" column="FXNG_RA_18"/>
		<result property="fxngRa19" column="FXNG_RA_19"/>
		<result property="fxngRa20" column="FXNG_RA_20"/>
	</resultMap>
	
    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapFpSumry () 
        Description :                       
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoFitGapSumryDVO
		resultMap : com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapFpSumry-result
    -->
	<select id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapFpSumry"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoFitGapSumryDVO"  resultMap="com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapFpSumry-result" useCache="true" flushCache="false">
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapFpSumry */
				<![CDATA[
						select   
							          C1.COMN_DTLS_CD                          as SYST_ID     -- 시스템ID
							        , C1.COMN_DTLS_CD || '--' || C1.DETL_CD_NM as DETL_CD_NM1
							        , C2.COMN_DTLS_CD                          as SB_SYST_ID  -- 서브시스템ID
				                    , C2.DETL_CD_NM                            as DETL_CD_NM2
				                    -- 기능적용(config적용) 
				                    ,( sum(decode(GD.DMND_CTN_CLSF_CD, '01', 1, 0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '01', decode(GD.PRSS_CD, '4', 1, 0), 0)) ) as FXNG_RA_1  -- 건수(이관제외)
									, nvl(sum(decode(GD.DMND_CTN_CLSF_CD, '01', decode(GD.FP_VRSN_NO, null, 0, GD.FP_VRSN_NO ))), 0) as FXNG_RA_2 
									-- 기능개발(필수고시법적용) 
									,( sum(decode(GD.DMND_CTN_CLSF_CD, '02', 1, 0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '02', decode(GD.PRSS_CD, '4', 1, 0), 0)) ) as FXNG_RA_3  -- 건수(이관제외)
									, nvl(sum(decode(GD.DMND_CTN_CLSF_CD, '02', decode(GD.FP_VRSN_NO, null, 0, GD.FP_VRSN_NO ))), 0) as FXNG_RA_4 
				                   -- 기능개발(추가기능) 
				                   , ( sum(decode(GD.DMND_CTN_CLSF_CD, '03', 1, 0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '03', decode(GD.PRSS_CD, '4', 1, 0), 0)) ) as FXNG_RA_5  -- 건수(이관제외)
				                   , nvl(sum(decode(GD.DMND_CTN_CLSF_CD, '03', decode(GD.FP_VRSN_NO, null, 0, GD.FP_VRSN_NO ))), 0) as FXNG_RA_6 
				                   -- 연계(인터페이스)
				                   , ( sum(decode(GD.DMND_CTN_CLSF_CD, '04', 1, 0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '04', decode(GD.PRSS_CD, '4', 1, 0), 0)) ) as FXNG_RA_7  -- 건수(이관제외)
				                   , nvl(sum(decode(GD.DMND_CTN_CLSF_CD, '04', decode(GD.FP_VRSN_NO, null, 0, GD.FP_VRSN_NO ))), 0) as FXNG_RA_8 		                   
				                   -- 솔루션 Core연결
				                   , ( sum(decode(GD.DMND_CTN_CLSF_CD, '05', 1, 0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '05', decode(GD.PRSS_CD, '4', 1, 0), 0)) ) as FXNG_RA_9  -- 건수(이관제외)
				                   , nvl(sum(decode(GD.DMND_CTN_CLSF_CD, '05', decode(GD.FP_VRSN_NO, null, 0, GD.FP_VRSN_NO ))), 0) as FXNG_RA_10 		                   		                   
				                   -- 계(건수)
				                   , (
				                   		( sum(decode(GD.DMND_CTN_CLSF_CD, '01', 1, 0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '01', decode(GD.PRSS_CD, '4', 1, 0), 0)) ) +
				                   		( sum(decode(GD.DMND_CTN_CLSF_CD, '02', 1, 0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '02', decode(GD.PRSS_CD, '4', 1, 0), 0)) ) +
				                   		( sum(decode(GD.DMND_CTN_CLSF_CD, '03', 1, 0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '03', decode(GD.PRSS_CD, '4', 1, 0), 0)) ) +
				                   		( sum(decode(GD.DMND_CTN_CLSF_CD, '04', 1, 0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '04', decode(GD.PRSS_CD, '4', 1, 0), 0)) ) +
				                   		( sum(decode(GD.DMND_CTN_CLSF_CD, '05', 1, 0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '05', decode(GD.PRSS_CD, '4', 1, 0), 0)) ) +
				                   		( sum(decode(GD.DMND_CTN_CLSF_CD, '06', 1, 0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '06', decode(GD.PRSS_CD, '4', 1, 0), 0)) ) +
				                   		( sum(decode(GD.DMND_CTN_CLSF_CD, '07', 1, 0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '07', decode(GD.PRSS_CD, '4', 1, 0), 0)) ) +
				                   		( sum(decode(GD.DMND_CTN_CLSF_CD, '08', 1, 0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '08', decode(GD.PRSS_CD, '4', 1, 0), 0)) ) +
				                   		( sum(decode(GD.DMND_CTN_CLSF_CD, '09', 1, 0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '09', decode(GD.PRSS_CD, '4', 1, 0), 0)) ) 
				                     ) as FXNG_RA_11
				                  -- 계(FP)
				                  , (
				                  	  nvl(sum(decode(GD.DMND_CTN_CLSF_CD, '01', decode(GD.FP_VRSN_NO, null, 0, GD.FP_VRSN_NO ))), 0) +
				                  	  nvl(sum(decode(GD.DMND_CTN_CLSF_CD, '02', decode(GD.FP_VRSN_NO, null, 0, GD.FP_VRSN_NO ))), 0) +
				                  	  nvl(sum(decode(GD.DMND_CTN_CLSF_CD, '03', decode(GD.FP_VRSN_NO, null, 0, GD.FP_VRSN_NO ))), 0) +
				                  	  nvl(sum(decode(GD.DMND_CTN_CLSF_CD, '04', decode(GD.FP_VRSN_NO, null, 0, GD.FP_VRSN_NO ))), 0) +
				                  	  nvl(sum(decode(GD.DMND_CTN_CLSF_CD, '05', decode(GD.FP_VRSN_NO, null, 0, GD.FP_VRSN_NO ))), 0) +	
				                  	  nvl(sum(decode(GD.DMND_CTN_CLSF_CD, '06', decode(GD.FP_VRSN_NO, null, 0, GD.FP_VRSN_NO ))), 0) +	
				                  	  nvl(sum(decode(GD.DMND_CTN_CLSF_CD, '07', decode(GD.FP_VRSN_NO, null, 0, GD.FP_VRSN_NO ))), 0) +	
				                  	  nvl(sum(decode(GD.DMND_CTN_CLSF_CD, '08', decode(GD.FP_VRSN_NO, null, 0, GD.FP_VRSN_NO ))), 0) +
				                  	  nvl(sum(decode(GD.DMND_CTN_CLSF_CD, '09', decode(GD.FP_VRSN_NO, null, 0, GD.FP_VRSN_NO ))), 0) 
				                    ) as FXNG_RA_12
				                  -- 추가기능(변경)
				                  , ( sum(decode(GD.DMND_CTN_CLSF_CD, '06', 1, 0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '06', decode(GD.PRSS_CD, '4', 1, 0), 0)) ) as FXNG_RA_13  -- 건수(이관제외)
				                  , nvl(sum(decode(GD.DMND_CTN_CLSF_CD, '06', decode(GD.FP_VRSN_NO, null, 0, GD.FP_VRSN_NO ))), 0) as FXNG_RA_14
				                  -- 추가기능(신규)
				                  , ( sum(decode(GD.DMND_CTN_CLSF_CD, '07', 1, 0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '07', decode(GD.PRSS_CD, '4', 1, 0), 0)) ) as FXNG_RA_15  -- 건수(이관제외)
				                  , nvl(sum(decode(GD.DMND_CTN_CLSF_CD, '07', decode(GD.FP_VRSN_NO, null, 0, GD.FP_VRSN_NO ))), 0) as FXNG_RA_16
				                  -- 산정불가
				                  , ( sum(decode(GD.DMND_CTN_CLSF_CD, '08', 1, 0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '08', decode(GD.PRSS_CD, '4', 1, 0), 0)) ) as FXNG_RA_17  -- 건수(이관제외)
				                  , nvl(sum(decode(GD.DMND_CTN_CLSF_CD, '08', decode(GD.FP_VRSN_NO, null, 0, GD.FP_VRSN_NO ))), 0) as FXNG_RA_18  
				                  -- 통계(DW)
				                  , ( sum(decode(GD.DMND_CTN_CLSF_CD, '09', 1, 0)) - sum(decode(GD.DMND_CTN_CLSF_CD, '09', decode(GD.PRSS_CD, '4', 1, 0), 0)) ) as FXNG_RA_19  -- 건수(이관제외)
				                  , nvl(sum(decode(GD.DMND_CTN_CLSF_CD, '09', decode(GD.FP_VRSN_NO, null, 0, GD.FP_VRSN_NO ))), 0) as FXNG_RA_20  
				                from  CCCMCDDMT C1         -- 시스템 공통코드
				                    , CCCMCDDMT C2         -- 서브 시스템 공통코드
				                    /*, CORFITGDT GD */        
				                    , (
				                        select A.SYST_ID 
				                             , A.SB_SYST_ID
				                             , A.DMND_CTN_CLSF_CD 
				                             , A.PRSS_CD
				                             , decode(A.FP_VRSN_NO, null, 0
				                                                  , '-', 0
				                                                  , '+', 0
				                                                  , '.', 0
				                                                  , to_number(A.FP_VRSN_NO)) as FP_VRSN_NO
				                         from  CORFITGDT A
				                        where  NVL(A.DLTN_YN,'N') = 'N') GD         -- FITGAP 결과서
						        where C1.COMN_GRP_CD    = 'COR_062'
								 AND  C1.COMN_DTLS_CD   = GD.SYST_ID
								 AND  C2.COMN_GRP_CD    = 'COR_063'
								 AND  C2.COMN_DTLS_CD   = GD.SB_SYST_ID
							    group 
							       by C1.COMN_DTLS_CD
							        , C1.DETL_CD_NM 
							        , C2.COMN_DTLS_CD
				                    , C2.DETL_CD_NM
				                order 
				                   by C1.DETL_CD_NM
								      , C2.DETL_CD_NM
		   ]]>
	</select>




	<resultMap id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapFpRatioSumry-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoFitGapSumryDVO">
	
		<result property="systId" column="SYST_ID"/>
		<result property="detlCdNm1" column="DETL_CD_NM1"/>
		<result property="sbSystId" column="SB_SYST_ID"/>
		<result property="detlCdNm2" column="DETL_CD_NM2"/>
		<result property="fxngRa1" column="FXNG_RA_1"/>
		<result property="fxngRa2" column="FXNG_RA_2"/>
		<result property="fxngRa3" column="FXNG_RA_3"/>
		<result property="fxngRa4" column="FXNG_RA_4"/>
		<result property="fxngRa5" column="FXNG_RA_5"/>
		<result property="fxngRa6" column="FXNG_RA_6"/>
		<result property="fxngRa7" column="FXNG_RA_7"/>
		<result property="fxngRa8" column="FXNG_RA_8"/>
		<result property="fxngRa9" column="FXNG_RA_9"/>
		<result property="fxngRa10" column="FXNG_RA_10"/>
		<result property="fxngRa11" column="FXNG_RA_11"/>
		<result property="fxngRa12" column="FXNG_RA_12"/>
		<result property="fxngRa13" column="FXNG_RA_13"/>
		<result property="fxngRa14" column="FXNG_RA_14"/>
		<result property="fxngRa15" column="FXNG_RA_15"/>
		<result property="fxngRa16" column="FXNG_RA_16"/>
		<result property="fxngRa17" column="FXNG_RA_17"/>
		<result property="fxngRa18" column="FXNG_RA_18"/>
		<result property="fxngRa19" column="FXNG_RA_19"/>
		<result property="fxngRa20" column="FXNG_RA_20"/>
		<result property="fxngRa21" column="FXNG_RA_21"/>
		<result property="fxngRa22" column="FXNG_RA_22"/>
	</resultMap>
	
    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapFpRatioSumry () 
        Description :                       
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoFitGapSumryDVO
		resultMap : com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapFpRatioSumry-result
    -->
	<select id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapFpRatioSumry"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoFitGapSumryDVO"  resultMap="com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapFpRatioSumry-result" useCache="true" flushCache="false">
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapFpRatioSumry */
		<![CDATA[
			  select 
		        	  C1.COMN_DTLS_CD                                    as SYST_ID     -- 시스템ID
		        	, C1.COMN_DTLS_CD || '--' || C1.DETL_CD_NM  as DETL_CD_NM1
		       		, C2.COMN_DTLS_CD                                    as SB_SYST_ID  -- 서브시스템ID
			        , C2.DETL_CD_NM                                         as DETL_CD_NM2  
			        -- 1~10% : 건수
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 10 then 1 else 0 end) as FXNG_RA_1
			        -- 1~10% : FP           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 10 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_2                    
			        -- 11~20% : 건수           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 10 and GD.FIT_GAP_ID_RAT <= 20 then 1 else 0 end) as FXNG_RA_3
			        -- 11~20% : FP                              
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 10 and GD.FIT_GAP_ID_RAT <= 20 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_4
			        -- 21~30% : 건수           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 20 and GD.FIT_GAP_ID_RAT <= 30 then 1 else 0 end) as FXNG_RA_5
			        -- 21~30% : FP                              
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 20 and GD.FIT_GAP_ID_RAT <= 30 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_6                   
			        -- 31~40% : 건수           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 30 and GD.FIT_GAP_ID_RAT <= 40 then 1 else 0 end) as FXNG_RA_7
			        -- 31~40% : FP                              
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 30 and GD.FIT_GAP_ID_RAT <= 40 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_8                                      
			        -- 41~50% : 건수           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 40 and GD.FIT_GAP_ID_RAT <= 50 then 1 else 0 end) as FXNG_RA_9
			        -- 41~50% : FP                              
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 40 and GD.FIT_GAP_ID_RAT <= 50 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_10                                                         
			        -- 51~60% : 건수           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 50 and GD.FIT_GAP_ID_RAT <= 60 then 1 else 0 end) as FXNG_RA_11
			        -- 51~60% : FP                              
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 50 and GD.FIT_GAP_ID_RAT <= 60 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_12                                                                            
			        -- 61~70% : 건수           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 60 and GD.FIT_GAP_ID_RAT <= 70 then 1 else 0 end) as FXNG_RA_13
			        -- 61~70% : FP                              
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 60 and GD.FIT_GAP_ID_RAT <= 70 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_14                                                                            
			        -- 71~80% : 건수           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 70 and GD.FIT_GAP_ID_RAT <= 80 then 1 else 0 end) as FXNG_RA_15
			        -- 71~80% : FP                              
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 70 and GD.FIT_GAP_ID_RAT <= 80 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_16                                                                            
			        -- 81~90% : 건수           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 80 and GD.FIT_GAP_ID_RAT <= 90 then 1 else 0 end) as FXNG_RA_17
			        -- 81~90% : FP                              
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 80 and GD.FIT_GAP_ID_RAT <= 90 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_18
			        -- 91~100% : 건수           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 90 and GD.FIT_GAP_ID_RAT <= 100 then 1 else 0 end) as FXNG_RA_19
			        -- 91~100% : FP                              
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 90 and GD.FIT_GAP_ID_RAT <= 100 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_20                                                                                                                                                        
			        -- 계 : 건수           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 100 then 1 else 0 end) as FXNG_RA_21
			        -- 계 : FP                              
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 100 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_22                                                                                                                                                                           
			    from  CCCMCDDMT C1         -- 시스템 공통코드
			        , CCCMCDDMT C2         -- 서브 시스템 공통코드
			        ,(
					  select 
					      A1.SYST_ID
					     ,A1.SB_SYST_ID  
					     ,A1.BSWR_NM
					     ,A1.FIT_GAP_ID
					     ,A1.FP_VRSN_NO
					     ,decode(A1.DMND_PROR_VL ,null, 0, 0, 0, (A1.DMND_PROR_VL / A2.TOT_CNT) * 100) as FIT_GAP_ID_RAT
					    from CORFITGDT A1
					        ,(
							  select 
							       a.SYST_ID                          as SYST_ID                          /* 시스템ID   */
							     , a.SB_SYST_ID                       as SB_SYST_ID                       /* 서브시스템ID   */
							     , a.BSWR_NM                          as BSWR_NM                          /* 업무명   */
							     , count(*) as TOT_CNT
							  from CORFITGDT a  /* FITGAP 결과서 */
			     			 where NVL(A.DLTN_YN,'N') = 'N'
							  group by  a.SYST_ID,a.SB_SYST_ID, a.BSWR_NM
					         )A2
					  where  A1.SYST_ID    = A2.SYST_ID
					    and  A1.SB_SYST_ID = A2.SB_SYST_ID
					    and  A1.BSWR_NM    = A2.BSWR_NM
			   			and  A1.DLTN_YN    = 'N'
					  ) GD
			    where C1.COMN_GRP_CD    = 'COR_062'
				 AND  C1.COMN_DTLS_CD   = GD.SYST_ID
				 AND  C2.COMN_GRP_CD    = 'COR_063'
				 AND  C2.COMN_DTLS_CD   = GD.SB_SYST_ID
			      /*and C2.COMN_DTLS_CD not in ('0109', '0110', '0111', '0112', '0113', '0114')*/
			 group 
			    by   C1.COMN_DTLS_CD
			       , C1.DETL_CD_NM 
			       , C2.COMN_DTLS_CD
			       , C2.DETL_CD_NM
			 order 
			    by   C1.DETL_CD_NM
				    , C2.DETL_CD_NM
		]]>
	</select>




	<resultMap id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapFpRatioAccumulateSumry-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoFitGapSumryDVO">
	
		<result property="systId" column="SYST_ID"/>
		<result property="detlCdNm1" column="DETL_CD_NM1"/>
		<result property="sbSystId" column="SB_SYST_ID"/>
		<result property="detlCdNm2" column="DETL_CD_NM2"/>
		<result property="fxngRa1" column="FXNG_RA_1"/>
		<result property="fxngRa2" column="FXNG_RA_2"/>
		<result property="fxngRa3" column="FXNG_RA_3"/>
		<result property="fxngRa4" column="FXNG_RA_4"/>
		<result property="fxngRa5" column="FXNG_RA_5"/>
		<result property="fxngRa6" column="FXNG_RA_6"/>
		<result property="fxngRa7" column="FXNG_RA_7"/>
		<result property="fxngRa8" column="FXNG_RA_8"/>
		<result property="fxngRa9" column="FXNG_RA_9"/>
		<result property="fxngRa10" column="FXNG_RA_10"/>
		<result property="fxngRa11" column="FXNG_RA_11"/>
		<result property="fxngRa12" column="FXNG_RA_12"/>
		<result property="fxngRa13" column="FXNG_RA_13"/>
		<result property="fxngRa14" column="FXNG_RA_14"/>
		<result property="fxngRa15" column="FXNG_RA_15"/>
		<result property="fxngRa16" column="FXNG_RA_16"/>
		<result property="fxngRa17" column="FXNG_RA_17"/>
		<result property="fxngRa18" column="FXNG_RA_18"/>
		<result property="fxngRa19" column="FXNG_RA_19"/>
		<result property="fxngRa20" column="FXNG_RA_20"/>
		<result property="fxngRa21" column="FXNG_RA_21"/>
		<result property="fxngRa22" column="FXNG_RA_22"/>
	</resultMap>
	
    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapFpRatioAccumulateSumry () 
        Description :                       
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoFitGapSumryDVO
		resultMap : com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapFpRatioAccumulateSumry-result
    -->
	<select id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapFpRatioAccumulateSumry"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoFitGapSumryDVO"  resultMap="com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapFpRatioAccumulateSumry-result" useCache="true" flushCache="false">
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoFitGapSumryDAO-listFitGapFpRatioAccumulateSumry */
		<![CDATA[
		 select  
		        	  C1.COMN_DTLS_CD                                    as SYST_ID     -- 시스템ID
		        	, C1.COMN_DTLS_CD || '--' || C1.DETL_CD_NM  as DETL_CD_NM1
		       		, C2.COMN_DTLS_CD                                    as SB_SYST_ID  -- 서브시스템ID
			        , C2.DETL_CD_NM                                         as DETL_CD_NM2  
			        -- 0~10% : 건수
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 10 then 1 else 0 end) as FXNG_RA_1
			        -- 0~10% : FP           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 10 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_2                    
			        -- 0~20% : 건수           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 20 then 1 else 0 end) as FXNG_RA_3
			        -- 0~20% : FP                              
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 20 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_4
			        -- 0~30% : 건수           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 30 then 1 else 0 end) as FXNG_RA_5
			        -- 0~30% : FP                              
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 30 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_6                   
			        -- 0~40% : 건수           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 40 then 1 else 0 end) as FXNG_RA_7
			        -- 0~40% : FP                              
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 40 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_8                                      
			        -- 0~50% : 건수           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 50 then 1 else 0 end) as FXNG_RA_9
			        -- 0~50% : FP                              
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 50 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_10                                                         
			        -- 0~60% : 건수           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 60 then 1 else 0 end) as FXNG_RA_11
			        -- 0~60% : FP                              
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 60 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_12                                                                            
			        -- 0~70% : 건수           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 70 then 1 else 0 end) as FXNG_RA_13
			        -- 0~70% : FP                              
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 70 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_14                                                                            
			        -- 0~80% : 건수           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 80 then 1 else 0 end) as FXNG_RA_15
			        -- 0~80% : FP                              
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 80 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_16                                                                            
			        -- 0~90% : 건수           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 90 then 1 else 0 end) as FXNG_RA_17
			        -- 0~90% : FP                              
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 90 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_18
			        -- 0~100% : 건수           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 100 then 1 else 0 end) as FXNG_RA_19
			        -- 0~100% : FP                              
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 100 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_20                                                                                                                                                        
			        -- 계 : 건수           
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 100 then 1 else 0 end) as FXNG_RA_21
			        -- 계 : FP                              
			        , sum(case when GD.FIT_GAP_ID_RAT = null then 0 
			                   when GD.FIT_GAP_ID_RAT > 0 and GD.FIT_GAP_ID_RAT <= 100 then to_number(nvl(GD.FP_VRSN_NO, 0)) else 0 end) as FXNG_RA_22                                                                                                                                                                           
			    from  CCCMCDDMT C1         -- 시스템 공통코드
			        , CCCMCDDMT C2         -- 서브 시스템 공통코드
			        ,(
					  select 
					      A1.SYST_ID
					     ,A1.SB_SYST_ID  
					     ,A1.BSWR_NM
					     ,A1.FIT_GAP_ID
					     ,A1.FP_VRSN_NO
					     ,decode(A1.DMND_PROR_VL ,null, 0, 0, 0, (A1.DMND_PROR_VL / A2.TOT_CNT) * 100) as FIT_GAP_ID_RAT
					    from CORFITGDT A1
					        ,(
							  select 
							       a.SYST_ID                          as SYST_ID                          /* 시스템ID   */
							     , a.SB_SYST_ID                       as SB_SYST_ID                       /* 서브시스템ID   */
							     , a.BSWR_NM                          as BSWR_NM                          /* 업무명   */
							     , count(*) as TOT_CNT
							  from CORFITGDT a  /* FITGAP 결과서 */
			     			 where NVL(A.DLTN_YN,'N') = 'N'
							  group by  a.SYST_ID,a.SB_SYST_ID, a.BSWR_NM
					         )A2
					  where  A1.SYST_ID    = A2.SYST_ID
					    and  A1.SB_SYST_ID = A2.SB_SYST_ID
					    and  A1.BSWR_NM    = A2.BSWR_NM
			   			and  A1.DLTN_YN    = 'N'
					  ) GD
			    where C1.COMN_GRP_CD    = 'COR_062'
				 AND  C1.COMN_DTLS_CD   = GD.SYST_ID
				 AND  C2.COMN_GRP_CD    = 'COR_063'
				 AND  C2.COMN_DTLS_CD   = GD.SB_SYST_ID
			      /*and C2.COMN_DTLS_CD not in ('0109', '0110', '0111', '0112', '0113', '0114')*/
			 group 
			    by   C1.COMN_DTLS_CD
			       , C1.DETL_CD_NM 
			       , C2.COMN_DTLS_CD
			       , C2.DETL_CD_NM
			 order 
			    by   C1.DETL_CD_NM
				    , C2.DETL_CD_NM
		]]> 
	</select>



</mapper>