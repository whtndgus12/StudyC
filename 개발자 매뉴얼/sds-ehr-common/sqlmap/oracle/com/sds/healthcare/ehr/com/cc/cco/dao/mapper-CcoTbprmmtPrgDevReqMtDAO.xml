<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    SQL File Name : mapper_CcoTbprmmtPrgDevReqMtDAO_sql.xml 
    Description : -->
<mapper namespace="CcoTbprmmtPrgDevReqMtDAO">


	<resultMap id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-listPrgDevReq-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtPrgDevReqMtDVO">
	
		<result property="afiLvelVl" column="AFI_LVEL_VL"/>
		<result property="detlCdNm1" column="DETL_CD_NM1"/>
		<result property="detlCdNm2" column="DETL_CD_NM2"/>
		<result property="detlCdNm3" column="DETL_CD_NM3"/>
		<result property="prgmId" column="PRGM_ID"/>
		<result property="prgmNm" column="PRGM_NM"/>
		<result property="fnctDvsnNm" column="FNCT_DVSN_NM"/>
		<result property="fnctId" column="FNCT_ID"/>
		<result property="fnctNm" column="FNCT_NM"/>
		<result property="fnctDetlCtn" column="FNCT_DETL_CTN"/>
		<result property="crntSttsCd" column="CRNT_STTS_CD"/>
		<result property="planStrtYmd" column="PLAN_STRT_YMD"/>
		<result property="planFnshYmd" column="PLAN_FNSH_YMD"/>
		<result property="acrlStrtYmd" column="ACRL_STRT_YMD"/>
		<result property="acrlFnshYmd" column="ACRL_FNSH_YMD"/>
		<result property="prncYn" column="PRNC_YN"/>
		<result property="detlCdNm4" column="DETL_CD_NM4"/>
		<result property="detlCdNm5" column="DETL_CD_NM5"/>
		<result property="mngmAsgnId" column="MNGM_ASGN_ID"/>
		<result property="userNm" column="USER_NM"/>
		<result property="acwrAsgnId" column="ACWR_ASGN_ID"/>
		<result property="userNm1" column="USER_NM1"/>
		<result property="prinSqnc" column="PRIN_SQNC"/>
		<result property="prorBaseCd" column="PROR_BASE_CD"/>
		<result property="detlCdNm6" column="DETL_CD_NM6"/>
		<result property="devpAsgnId" column="DEVP_ASGN_ID"/>
		<result property="userNm2" column="USER_NM2"/>
		<result property="fnctBassCtn" column="FNCT_BASS_CTN"/>
		<result property="fnctRgstStepCd" column="FNCT_RGST_STEP_CD"/>
		<result property="rmrkCtn" column="RMRK_CTN"/>
		<result property="dscsYn" column="DSCS_YN"/>
		<result property="rflcYnCd" column="RFLC_YN_CD"/>
		<result property="frstRgstDt" column="FRST_RGST_DT"/>
		<result property="devpRflcCtn" column="DEVP_RFLC_CTN"/>
		<result property="antpMnshVl" column="ANTP_MNSH_VL"/>
		<result property="afiInqrCndtNm1" column="AFI_INQR_CNDT_NM1"/>
		<result property="testDt" column="TEST_DT"/>
		<result property="detlCdNm7" column="DETL_CD_NM7"/>
		<result property="testDt1" column="TEST_DT1"/>
		<result property="detlCdNm8" column="DETL_CD_NM8"/>
		<result property="afiInqrCndtNm2" column="AFI_INQR_CNDT_NM2"/>
		<result property="afiInqrCndtNm3" column="AFI_INQR_CNDT_NM3"/>
		<result property="afiInqrCndtNm4" column="AFI_INQR_CNDT_NM4"/>
		<result property="testDt2" column="TEST_DT2"/>
		<result property="detlCdNm9" column="DETL_CD_NM9"/>
		<result property="afiInqrCndtNm5" column="AFI_INQR_CNDT_NM5"/>
		<result property="dltnYn" column="DLTN_YN"/>
		<result property="testId" column="TEST_ID"/>
		<result property="testId1" column="TEST_ID1"/>
		<result property="fnctPrvcCd" column="FNCT_PRVC_CD"/>
		<result property="bsdvCd" column="BSDV_CD"/>
		<result property="prjtTissCd" column="PRJT_TISS_CD"/>
		<result property="detlCdNm10" column="DETL_CD_NM_10"/>
		<result property="detlCdNm11" column="DETL_CD_NM_11"/>
		<result property="mdfcYn" column="MDFC_YN"/>
		<result property="rqstMddvCd" column="RQST_MDDV_CD"/>
		<result property="mdrqCtn" column="MDRQ_CTN"/>
		<result property="afiInqrCndtNm6" column="AFI_INQR_CNDT_NM6"/>
		<result property="afiRsltAnncCtn" column="AFI_RSLT_ANNC_CTN"/>
		<result property="dvlrTestPlanYmd" column="DVLR_TEST_PLAN_YMD"/>
		<result property="dvlrTestFnshYmd" column="DVLR_TEST_FNSH_YMD"/>
		<result property="dvlrCnfrYn" column="DVLR_CNFR_YN"/>
		<result property="detlCdNm12" column="DETL_CD_NM_12"/>
		<result property="mngrRevwFinsDt" column="MNGR_REVW_FINS_DT"/>
		<result property="lnkdYn" column="LNKD_YN"/>
	</resultMap>
	
    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-listPrgDevReq (cod_tbprmmt_l02$S01_프로그램개발요건 목록관리 조회) 
        Description :                                           cod_tbprmmt_l02$S01_프로그램개발요건 목록관리 조회
                                            
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtPrgDevReqMtDVO
		resultMap : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-listPrgDevReq-result
    -->
	<select id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-listPrgDevReq"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtPrgDevReqMtDVO"  resultMap="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-listPrgDevReq-result" useCache="true" flushCache="false">
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-listPrgDevReq */
		<![CDATA[
		    select  /*+ cod_tbprmmt_l02$S01_프로그램개발요건 목록관리 조회 */ 
		            0 as AFI_LVEL_VL
		          , b.DETL_CD_NM as DETL_CD_NM1   -- 화면 조직 대분류
		          , c.DETL_CD_NM as DETL_CD_NM2   -- 화면 조직 소분류
		          , d.DETL_CD_NM as DETL_CD_NM3   -- 화면 업무분류
		          , a.PRGM_ID                     -- 프로그램ID
		          , a.PRGM_NM                     -- 프로그램명
		          , e.FNCT_DVSN_NM                -- 기능구분명
		          , e.FNCT_ID                     -- 기능ID
		          , e.FNCT_NM                     -- 기능명
		          , e.FNCT_DETL_CTN               -- 기능상세내용
		          , e.CRNT_STTS_CD                -- 기능 현재상태코드
		          , to_char(e.PLAN_STRT_YMD , 'yyyymmdd') as PLAN_STRT_YMD  -- 기능 계획시작일자
		          , to_char(e.PLAN_FNSH_YMD , 'yyyymmdd') as PLAN_FNSH_YMD  -- 기능 계획종료일자
		          , to_char(e.ACRL_STRT_YMD , 'yyyymmdd') as ACRL_STRT_YMD  -- 기능 실적시작일자
		          , to_char(e.ACRL_FNSH_YMD , 'yyyymmdd') as ACRL_FNSH_YMD  -- 기능 실적종료일자
		          , a.PRNC_YN                           -- 화면 주요여부
		          , f.DETL_CD_NM as DETL_CD_NM4         -- 워킹그룹명
		          , g.DETL_CD_NM as DETL_CD_NM5         -- 프로그램타입명
		          , a.MNGM_ASGN_ID                      -- AL ID
		          , h.USER_NM                           -- AL명
		          , a.ACWR_ASGN_ID                      -- 현업담당자ID
		          , i.USER_NM as USER_NM1               -- 현업담당자명
		          , e.PRIN_SQNC                         -- 기능 출력순서
		          , e.PROR_BASE_CD                      -- 우선순위기준코드
		          , j.DETL_CD_NM as DETL_CD_NM6         -- 우선순위기준명
		          , e.DEVP_ASGN_ID                      -- 개발담당자ID
		          , k.USER_NM as USER_NM2               -- 개발담당자명
		          , e.FNCT_BASS_CTN                     -- 기능근거내용
		          , e.FNCT_RGST_STEP_CD                 -- 기능등록단계코드
		          , e.RMRK_CTN                          -- 비고내용
		          , e.DSCS_YN                           -- 협의여부
		          , e.RFLC_YN_CD                        -- 반영여부코드
		          , to_char(e.FRST_RGST_DT , 'yyyymmdd') as FRST_RGST_DT  -- 등록일자
		          , e.DEVP_RFLC_CTN       -- 개발반영내용
		          , e.ANTP_MNSH_VL        -- 예상공수값
		          , '' as AFI_INQR_CNDT_NM1
		          , to_char(l.TEST_DT , 'yyyymmdd') as TEST_DT
		          , l.TEST_RSLT_CD as DETL_CD_NM7
		          , to_char(n.TEST_DT , 'yyyymmdd') as TEST_DT1
		          , n.TEST_RSLT_CD as DETL_CD_NM8
		          , '' as AFI_INQR_CNDT_NM2
		          , '0/0/0/0' as AFI_INQR_CNDT_NM3
		          , '0/0' as AFI_INQR_CNDT_NM4
		          , to_char(p.TEST_DT , 'yyyymmdd') as TEST_DT2
		          , q.DETL_CD_NM as DETL_CD_NM9
		          , '0/0' as AFI_INQR_CNDT_NM5
		          , e.DLTN_YN
		          , l.TEST_ID
		          , n.TEST_ID as TEST_ID1
		          , e.FNCT_PRVC_CD
		          , e.BSDV_CD
		          , e.PRJT_TISS_CD
		          , w.DETL_CD_NM as DETL_CD_NM_10
		          , x.DETL_CD_NM as DETL_CD_NM_11
		          , e.MDFC_YN
		          , e.RQST_MDDV_CD
		          , e.MDRQ_CTN
		          , '0/0/0/0' as AFI_INQR_CNDT_NM6
		          , ( select  max(xa.FILE_PATH_NM || xa.FILE_ID || '+=' || xa.FILE_NM)
		              from    COSCFNADT xa
		              where   xa.PRGM_ID = a.PRGM_ID
		                and   xa.ATCH_DVSN_CD = 'A1'
		            ) as AFI_RSLT_ANNC_CTN
		          , to_char(e.DVLR_TEST_PLAN_YMD, 'yyyymmdd') as DVLR_TEST_PLAN_YMD
		          , to_char(e.DVLR_TEST_FNSH_YMD, 'yyyymmdd') as DVLR_TEST_FNSH_YMD
		          , a.DVLR_CNFR_YN
		          , y.DETL_CD_NM as DETL_CD_NM_12
		          , to_char(e.MNGR_REVW_FINS_DT, 'yyyymmdd') as MNGR_REVW_FINS_DT
		          , nvl(e.LNKD_YN, 'N') as LNKD_YN
		    from    COTBPRMMT a
		          , CCCMCDDMT b
		          , CCCMCDDMT c
		          , CCCMCDDMT d
		          , ( select  xa.PRGM_ID
		                    , xa.FNCT_ID
		                    , xa.FNCT_DVSN_NM
		                    , xa.FNCT_NM
		                    , xa.FNCT_DETL_CTN
		                    , xa.CRNT_STTS_CD
		                    , xa.PLAN_STRT_YMD
		                    , xa.PLAN_FNSH_YMD
		                    , xa.ACRL_STRT_YMD
		                    , xa.ACRL_FNSH_YMD
		                    , xa.PRIN_SQNC
		                    , xa.PROR_BASE_CD
		                    , xa.DEVP_ASGN_ID
		                    , xa.FNCT_BASS_CTN
		                    , xa.FNCT_RGST_STEP_CD
		                    , xa.RMRK_CTN
		                    , xa.DSCS_YN
		                    , xa.RFLC_YN_CD
		                    , xa.FRST_RGST_DT
		                    , xa.DEVP_RFLC_CTN
		                    , xa.ANTP_MNSH_VL
		                    , xa.DLTN_YN
		                    , xa.BSDV_CD
		                    , xa.FNCT_PRVC_CD
		                    , xa.PRJT_TISS_CD
		                    , xa.MDFC_YN
		                    , xc.ISS_DVSN_CD as RQST_MDDV_CD
		                    , xa.MDRQ_CTN
		                    , xa.DVLR_TEST_PLAN_YMD
		                    , xa.DVLR_TEST_FNSH_YMD
		                    , xa.MNGR_REVW_FINS_DT
		                    , xa.LNKD_YN
		              from    COTBPRMDT xa
		                    , COPJTISDT xb
		                    , COPJTISMT xc
		              where   xa.PRGM_ID = xb.PRGM_ID(+)
		                and   xa.FNCT_ID = xb.FNCT_ID(+)
		                and   xb.ISS_NO  = xc.ISS_NO(+)
		                and   xc.RFLC_YN_CD(+) in ('R1', 'R3')
		                and   nvl(xb.DLTN_YN(+), 'N') <> 'Y'
		                and   nvl(xc.DLTN_YN(+), 'N') <> 'Y'
		                      /* 기능ID/명  */
		                and   ((nvl( #{fnctNm} ,'*') = '*') or (upper(xa.FNCT_ID) like '%' || upper(#{fnctNm}) || '%') or (upper(xa.FNCT_NM) like '%' || upper(#{fnctNm}) || '%'))
		                      /* 기능업무구분 */
		                and   ((nvl( #{chrcCdVl2} ,'*') = '*') or ( #{chrcCdVl2}  like '%' || xa.PRJT_TISS_CD || '%'))
		                      /* 상태 */
		                and   ((nvl( #{chrcCdVl3} ,'*') = '*') or ( #{chrcCdVl3}  like '%' || xa.CRNT_STTS_CD || '%'))
		                      /* 기능개발자 */
		                and   ((nvl( #{devpAsgnId1} ,'*') = '*') or (xa.DEVP_ASGN_ID =  #{devpAsgnId1} ))
		                      /* 협의여부 */
		                and   ((nvl( #{dscsYn} ,'*') = '*') or (xa.DSCS_YN = 'Y'))
		                      /* 삭제여부 ALL 0, N   1, Y   2 */
		                and   (( #{dltnYn}  = '0') or (( #{dltnYn}  = '1') and (nvl(xa.DLTN_YN, 'N') <> 'Y')) or (( #{dltnYn}  = '2') and (nvl(xa.DLTN_YN, 'N') = 'Y')))
		                      /* 기능상세설명 */
		                and   ((nvl( #{fnctDetlCtn} ,'*') = '*') or (xa.FNCT_DETL_CTN like '%' ||  #{fnctDetlCtn}  || '%'))
		                      /* 등록단계 */
		                and   ((nvl( #{chrcCdVl4} ,'*') = '*') or ( #{chrcCdVl4}  like '%' || nvl(xa.FNCT_RGST_STEP_CD, 'NA') || '%'))
		                      /*  출처 */
		                and   ((nvl( #{chrcCdVl5} ,'*') = '*') or ( #{chrcCdVl5}  like '%' || nvl(xa.FNCT_PRVC_CD, 'NA') || '%'))
		                      /* 근거 */
		                and   ((nvl( #{fnctBassCtn} ,'*') = '*') or (xa.FNCT_BASS_CTN like '%' ||  #{fnctBassCtn}  || '%'))
		                      /*  반영여부     */
		                and   ((nvl( #{chrcCdVl6} ,'*') = '*') or ( #{chrcCdVl6}  like '%' || nvl(xa.RFLC_YN_CD, 'NA') || '%'))
		                      /* 우선순위      */
		                and   ((nvl( #{chrcCdVl7} ,'*') = '*') or ( #{chrcCdVl7}  like '%' || nvl(xa.PROR_BASE_CD, 'NA') || '%'))
		                      /* 예상M/D      */
		                and   ((nvl( #{afiInqrCndtNm} , '*') = '*') or ( (xa.ANTP_MNSH_VL >= to_number( #{afiInqrCndtNm} )) and (xa.ANTP_MNSH_VL <= to_number( #{afiInqrCndtNm1} ))))
		                      /* 기능등록일   */
		                and   ((nvl( #{fromInqrYmd} , '*') = '*') or
		                       ((trunc(xa.FRST_RGST_DT) >= to_date( #{fromInqrYmd} , 'YYYYMMDD')) and
		                        (trunc(xa.FRST_RGST_DT) <= to_date( #{toInqrYmd} , 'YYYYMMDD')))
		                      )
		                      /* 계획시작일 */
		                and   ((nvl( #{fromInqrYmd1} , '*') = '*') or
		                       ((trunc(xa.PLAN_STRT_YMD) >= to_date( #{fromInqrYmd1} , 'YYYYMMDD')) and
		                        (trunc(xa.PLAN_STRT_YMD) <= to_date( #{toInqrYmd1} , 'YYYYMMDD')))
		                      )
		                      /* 계획종료일 */
		                and   ((nvl( #{fromInqrYmd2} , '*') = '*') or
		                       ((trunc(xa.PLAN_FNSH_YMD) >= to_date( #{fromInqrYmd2} , 'YYYYMMDD')) and
		                        (trunc(xa.PLAN_FNSH_YMD) <= to_date( #{toInqrYmd2} , 'YYYYMMDD')))
		                      )
		                      /* 실적시작일   */
		                and   ((nvl( #{fromInqrYmd3} , '*') = '*') or
		                       ((trunc(xa.ACRL_STRT_YMD) >= to_date( #{fromInqrYmd3} , 'YYYYMMDD')) and
		                        (trunc(xa.ACRL_STRT_YMD) <= to_date( #{toInqrYmd3} , 'YYYYMMDD')))
		                      )
		                      /* 실적종료일   */
		                and   ((nvl( #{fromInqrYmd4} , '*') = '*') or
		                       ((trunc(xa.ACRL_FNSH_YMD) >= to_date( #{fromInqrYmd4} , 'YYYYMMDD')) and
		                        (trunc(xa.ACRL_FNSH_YMD) <= to_date( #{toInqrYmd4} , 'YYYYMMDD')))
		                      )
		                      /* 개발자테스트계획일자   */
		                and   ((nvl( #{fromInqrYmd5} , '*') = '*') or
		                       ((trunc(xa.DVLR_TEST_PLAN_YMD) >= to_date( #{fromInqrYmd5} , 'YYYYMMDD')) and
		                        (trunc(xa.DVLR_TEST_PLAN_YMD) <= to_date( #{toInqrYmd5} , 'YYYYMMDD')))
		                      )
		                      /* 개발자테스트종료일자   */
		                and   ((nvl( #{fromInqrYmd6} , '*') = '*') or
		                       ((trunc(xa.DVLR_TEST_FNSH_YMD) >= to_date( #{fromInqrYmd6} , 'YYYYMMDD')) and
		                        (trunc(xa.DVLR_TEST_FNSH_YMD) <= to_date( #{toInqrYmd6} , 'YYYYMMDD')))
		                      )
		                      /* 요청변경구분코드 */
		                and   ((nvl( #{chrcCdVl8} ,'*') = '*') or ( #{chrcCdVl8}  like '%' || nvl(xc.ISS_DVSN_CD, 'NA') || '%'))
		             ) e
		          , CCCMCDDMT f
		          , CCCMCDDMT g
		          , CCUSRDPHT h
		          , CCUSRDPHT i
		          , CCCMCDDMT j
		          , CCUSRDPHT k
		          , COEATSTMT l
		          , COEATSTMT n
		          , COEATSTMT p
		          , CCCMCDDMT q
		          , CCCMCDDMT w
		          , CCCMCDDMT x
		          , CCCMCDDMT y
		    where   nvl(a.DLTN_YN, 'N') <> 'Y'
		      and   b.COMN_GRP_CD(+) = 'COR_025'
		      and   substr(a.PRJT_TISS_CD, 1, 1) = b.COMN_DTLS_CD(+)
		      and   c.COMN_GRP_CD(+) = 'COR_025'
		      and   a.PRJT_TISS_CD   = c.COMN_DTLS_CD(+)
		      and   d.COMN_GRP_CD(+) = 'CCC_007'
		      and   substr(a.BSDV_CD, 1, 3) = d.COMN_DTLS_CD(+)
		      and   a.PRGM_ID = e.PRGM_ID
		      and   f.COMN_GRP_CD(+) = 'COR_014'
		      and   a.WG_CD          = f.COMN_DTLS_CD(+)
		      and   g.COMN_GRP_CD(+) = 'COR_001'
		      and   a.PRGM_TYP_CD    = g.COMN_DTLS_CD(+)
		      and   a.MNGM_ASGN_ID   = h.USER_ID(+)
		      and   a.ACWR_ASGN_ID   = i.USER_ID(+)
		      and   j.COMN_GRP_CD(+) in ('CCC_005', 'CCC_006', 'CCC_007')
		      and   e.BSDV_CD        = j.COMN_DTLS_CD(+)
		      and   e.DEVP_ASGN_ID   = k.USER_ID(+)
		      and   e.PRGM_ID        = l.PRGM_ID(+)
		      and   e.FNCT_ID        = l.FNCT_ID(+)
		      and   l.TEST_STEP_CD(+)= 'D1'
		      and   e.PRGM_ID        = n.PRGM_ID(+)
		      and   e.FNCT_ID        = n.FNCT_ID(+)
		      and   n.TEST_STEP_CD(+)= 'D2'
		      and   e.PRGM_ID        = p.PRGM_ID(+)
		      and   e.FNCT_ID        = p.FNCT_ID(+)
		      and   p.TEST_STEP_CD(+)= 'D4'
		      and   q.COMN_GRP_CD(+) = 'COR_008'
		      and   p.TEST_RSLT_CD   = q.COMN_DTLS_CD(+)
		      and   w.COMN_GRP_CD(+) = 'COR_025'
		      and   e.PRJT_TISS_CD   = w.COMN_DTLS_CD(+)
		      and   x.COMN_GRP_CD(+) = 'COR_015'
		      and   e.CRNT_STTS_CD   = x.COMN_DTLS_CD(+)
		      and   y.COMN_GRP_CD(+) = 'COR_007'
		      and   e.RQST_MDDV_CD   = y.COMN_DTLS_CD(+)
		      /* 화면업무구분 */
		      and   ((nvl( #{chrcCdVl} ,'*') = '*') or ( #{chrcCdVl}  like '%' || a.PRJT_TISS_CD || '%'))
		      /* 화면ID/명 */
		      and   ((nvl( #{prgmNm} ,'*') = '*') or (upper(a.PRGM_ID) like '%' || upper( #{prgmNm} ) || '%') or (upper(a.PRGM_NM) like '%' || upper(#{prgmNm}) || '%'))
		      /* 유형 */
		      and   ((nvl( #{chrcCdVl1} ,'*') = '*') or ( #{chrcCdVl1}  like '%' || a.PRGM_TYP_CD || '%'))
		      /* 주요여부 */
		      and   ((nvl( #{prncYn} ,'*') = '*') or (a.PRNC_YN = 'Y'))
		      /* AL */
		      and   ((nvl( #{mngmAsgnId} ,'*') = '*') or (a.MNGM_ASGN_ID =  #{mngmAsgnId} ))
		      /* 현업담당자 */
		      and   ((nvl( #{acwrAsgnId} ,'*') = '*') or (a.ACWR_ASGN_ID =  #{acwrAsgnId} ))
		      /* WG */
		      and   ((nvl( #{wgCd} ,'*') = '*') or (a.WG_CD =  #{wgCd} ))
		      /* 화면개발자 */
		      and   ((nvl( #{devpAsgnId} ,'*') = '*') or (a.DEVP_ASGN_ID =  #{devpAsgnId} ))
		    order by b.SCRN_DSPL_SQNC, c.SCRN_DSPL_SQNC, a.PRGM_ID, e.PRIN_SQNC
		]]>
	</select>






    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-updateValiCheckApplication (cod_tbprmmt_u04$I01_Validation Check 적용) 
        Description :                                           cod_tbprmmt_u04$I01_Validation Check 적용
                                            
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtPrgDevReqMtDVO
    -->	
	<update id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-updateValiCheckApplication"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtPrgDevReqMtDVO"  >
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-updateValiCheckApplication */
		        update  /*+ cod_tbprmmt_u04$I01_Validation Check 적용 */
		                COTBPRMMT
		        set
		                DVLR_CNFR_YN       =  #{dvlrCnfrYn} 
		                 , LAST_UPDR_ID          = #{gvUserId}                            -- 최종수정자ID
		                 , LAST_UPDT_IP          = #{gvUserIp}                            -- 최종수정IP
		                 , LAST_UPDT_DT          = sysdate                                -- 최종수정일시
		                 , LAST_UPDT_CLNT_PRGM_ID                    = #{gvClntPrgmId}                        -- 최종수정클라이언트프로그램ID
		                 , LAST_UPDT_SRVR_PRGM_ID                    = #{gvSrvrPrgmId}                        -- 최종수정서버프로그램ID     
		        where   upper(PRGM_ID)     = upper( #{prgmId} )
	</update>


	<resultMap id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-listPrg-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtPrgDevReqMtDVO">
	
		<result property="comnDtlsCd1" column="COMN_DTLS_CD_1"/>
		<result property="detlCdNm1" column="DETL_CD_NM_1"/>
		<result property="comnDtlsCd2" column="COMN_DTLS_CD_2"/>
		<result property="detlCdNm2" column="DETL_CD_NM_2"/>
		<result property="prgmId" column="PRGM_ID"/>
		<result property="prgmNm" column="PRGM_NM"/>
		<result property="prgmTypCd" column="PRGM_TYP_CD"/>
		<result property="detlCdNm3" column="DETL_CD_NM_3"/>
		<result property="prncYn" column="PRNC_YN"/>
		<result property="afiSrchCndtCtn1" column="AFI_SRCH_CNDT_CTN_1"/>
		<result property="afiSrchCndtCtn2" column="AFI_SRCH_CNDT_CTN_2"/>
		<result property="afiSrchCndtCtn3" column="AFI_SRCH_CNDT_CTN_3"/>
		<result property="devpAsgnId" column="DEVP_ASGN_ID"/>
		<result property="userNm" column="USER_NM"/>
		<result property="mngmAsgnId" column="MNGM_ASGN_ID"/>
		<result property="userNm1" column="USER_NM_1"/>
		<result property="acwrAsgnId" column="ACWR_ASGN_ID"/>
		<result property="userNm2" column="USER_NM_2"/>
		<result property="offrDvsnCd" column="OFFR_DVSN_CD"/>
		<result property="detlCdNm6" column="DETL_CD_NM_6"/>
		<result property="sgsnOffrDvsnCd" column="SGSN_OFFR_DVSN_CD"/>
		<result property="detlCdNm7" column="DETL_CD_NM_7"/>
		<result property="prgmDetlDscrCtn" column="PRGM_DETL_DSCR_CTN"/>
		<result property="bsdvCd" column="BSDV_CD"/>
		<result property="detlCdNm5" column="DETL_CD_NM_5"/>
		<result property="prorBaseCd" column="PROR_BASE_CD"/>
		<result property="detlCdNm8" column="DETL_CD_NM_8"/>
		<result property="wgCd" column="WG_CD"/>
		<result property="detlCdNm4" column="DETL_CD_NM_4"/>
		<result property="prjtTissCd" column="PRJT_TISS_CD"/>
		<result property="planStrtYmd" column="PLAN_STRT_YMD"/>
		<result property="planFnshYmd" column="PLAN_FNSH_YMD"/>
		<result property="antpMnshVl" column="ANTP_MNSH_VL"/>
		<result property="dltnYn" column="DLTN_YN"/>
		<result property="mngrRevwFinsDd" column="MNGR_REVW_FINS_DD"/>
		<result property="qlasAsgnId" column="QLAS_ASGN_ID"/>
		<result property="userNm3" column="USER_NM_3"/>
		<result property="rtrcCtn" column="RTRC_CTN"/>
		<result property="rtrcMngnCtn" column="RTRC_MNGN_CTN"/>
		<result property="qlasFinsDd" column="QLAS_FINS_DD"/>
		<result property="rtrcYmd" column="RTRC_YMD"/>
		<result property="mngnYmd" column="MNGN_YMD"/>
		<result property="qlasRevwTrgtYn" column="QLAS_REVW_TRGT_YN"/>
		<result property="dfntCqy" column="DFNT_CQY"/>
		<result property="afiTrgtCot" column="AFI_TRGT_COT"/>
		<result property="afiTrgtCot2" column="AFI_TRGT_COT_2"/>
		<result property="afiRsltAnncCtn" column="AFI_RSLT_ANNC_CTN"/>
		<result property="afiRturVl" column="AFI_RTUR_VL"/>
		<result property="dvlrCnfrYn" column="DVLR_CNFR_YN"/>
		<result property="useCqy01" column="USE_CQY_01"/>
		<result property="useCqy02" column="USE_CQY_02"/>
		<result property="useCqy03" column="USE_CQY_03"/>
		<result property="acrlStrtYmd" column="ACRL_STRT_YMD"/>
		<result property="acrlFnshYmd" column="ACRL_FNSH_YMD"/>
		<result property="dvlrTestPlanYmd" column="DVLR_TEST_PLAN_YMD"/>
		<result property="dvlrTestFnshYmd" column="DVLR_TEST_FNSH_YMD"/>
		<result property="afiSrchNm" column="AFI_SRCH_NM"/>
		<result property="useCqy04" column="USE_CQY_04"/>
		<result property="useCqy05" column="USE_CQY_05"/>
		<result property="useCqy06" column="USE_CQY_06"/>
		<result property="useCqy07" column="USE_CQY_07"/>
	</resultMap>
	
    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-listPrg (cod_tbprmmt_l01$S01_to-be 프로그램 조회) 
        Description :                                           cod_tbprmmt_l01$S01_to-be 프로그램 조회
                                            
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtPrgDevReqMtDVO
		resultMap : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-listPrg-result
    -->
	<select id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-listPrg"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtPrgDevReqMtDVO"  resultMap="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-listPrg-result" useCache="true" flushCache="false">
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-listPrg */
		<![CDATA[
		    select  /*+ cod_tbprmmt_l01$S01_to-be 프로그램 조회 */ 
		            ta.COMN_DTLS_CD_1
		          , ta.DETL_CD_NM_1
		          , ta.COMN_DTLS_CD_2
		          , ta.DETL_CD_NM_2
		          , ta.PRGM_ID
		          , ta.PRGM_NM
		          , ta.PRGM_TYP_CD
		          , ta.DETL_CD_NM_3
		          , ta.PRNC_YN
		          , ta.FUNC_COUNT as AFI_SRCH_CNDT_CTN_1
		          , ta.FIANL_COUNT as AFI_SRCH_CNDT_CTN_2
		          , ta.FUNC_COUNT - ta.FIANL_COUNT as AFI_SRCH_CNDT_CTN_3
		          , ta.DEVP_ASGN_ID
		          , ta.USER_NM
		          , ta.MNGM_ASGN_ID
		          , ta.USER_NM_1
		          , ta.ACWR_ASGN_ID
		          , ta.USER_NM_2
		          , ta.OFFR_DVSN_CD
		          , ta.DETL_CD_NM_6
		          , ta.SGSN_OFFR_DVSN_CD
		          , ta.DETL_CD_NM_7
		          , ta.PRGM_DETL_DSCR_CTN
		          , ta.BSDV_CD
		          , ta.DETL_CD_NM_5
		          , ta.PROR_BASE_CD
		          , ta.DETL_CD_NM_8
		          , ta.WG_CD
		          , ta.DETL_CD_NM_4
		          , ta.PRJT_TISS_CD
		          , ta.PLAN_STRT_YMD
		          , ta.PLAN_FNSH_YMD
		          , nvl(ta.ANTP_MNSH_VL, 0) as ANTP_MNSH_VL
		          , ta.DLTN_YN
		          , ta.MNGR_REVW_FINS_DD
		          , ta.QLAS_ASGN_ID
		          , ta.USER_NM_3
		          , ta.RTRC_CTN
		          , ta.RTRC_MNGN_CTN
		          , ta.QLAS_FINS_DD
		          , ta.RTRC_YMD
		          , ta.MNGN_YMD
		          , ta.QLAS_REVW_TRGT_YN
		          , nvl(( select  count(*)
		                  from    COTBPRMDT xa
		                  where   nvl(xa.DLTN_YN, 'N') <> 'Y'
		                    and   nvl(xa.MDFC_YN, 'N') = 'Y'
		                    and   xa.PRGM_ID           = ta.PRGM_ID
		                ), 0) as DFNT_CQY
		          , nvl(( select  count(*)
		                  from    COPJTISDT xa
		                        , COPJTISMT xb
		                  where   xa.ISS_NO            = xb.ISS_NO
		                    and   xa.PRGM_ID           = ta.PRGM_ID
		                    and   xb.RFLC_YN_CD in ('R1', 'R3')
		                    and   nvl(xb.DLTN_YN, 'N') <> 'Y'
		                    and   nvl(xa.DLTN_YN, 'N') <> 'Y'
		                ), 0) as AFI_TRGT_COT
		          , nvl(( select  count(*)
		                  from    COSCFNAMT a
		                  where   a.PRGM_ID = ta.PRGM_ID
		                    and   a.ATCH_DVSN_CD = 'A3'
		                 ), 0) as AFI_TRGT_COT_2
		          , ( select  max(a.FILE_PATH_NM || a.FILE_ID || '+=' || a.FILE_NM)
		              from    COSCFNADT a
		              where   a.PRGM_ID = ta.PRGM_ID
		                and   a.ATCH_DVSN_CD = 'A1'
		            ) as AFI_RSLT_ANNC_CTN
		          , ( select  case  when ((nvl(xa.STTS_CD2, 0) + nvl(xa.STTS_CD3, 0) + nvl(xa.STTS_CD4, 0) + nvl(xa.STTS_CD5, 0) + nvl(xa.STTS_CD6, 0)) = 0) and
		                                 (nvl(xa.STTS_CD1, 0) > 0)
		                            then '개발전'
		                            when (nvl(xa.STTS_CD1, 0) = 0) and (nvl(xa.STTS_CD2, 0) > 0)
		                            then '코딩중'
		                            when ((nvl(xa.STTS_CD1, 0) + nvl(xa.STTS_CD2, 0)) = 0) and (nvl(xa.STTS_CD3, 0) > 0)
		                            then '코딩완료'
		                            when ((nvl(xa.STTS_CD1, 0) + nvl(xa.STTS_CD2, 0) + nvl(xa.STTS_CD3, 0)) = 0) and
		                                  (nvl(xa.STTS_CD4, 0) > 0) and ((nvl(xa.STTS_CD1, 0) + nvl(xa.STTS_CD2, 0) + nvl(xa.STTS_CD3, 0) + nvl(xa.STTS_CD4, 0) + nvl(xa.STTS_CD5, 0) + nvl(xa.STTS_CD6, 0)) <> 0)
		                            then 'AL테스트대상'
		                            when ((nvl(xa.STTS_CD1, 0) + nvl(xa.STTS_CD2, 0) + nvl(xa.STTS_CD3, 0) + nvl(xa.STTS_CD4, 0)) = 0) and
		                                  (nvl(xa.STTS_CD5, 0) > 0) and ((nvl(xa.STTS_CD1, 0) + nvl(xa.STTS_CD2, 0) + nvl(xa.STTS_CD3, 0) + nvl(xa.STTS_CD4, 0) + nvl(xa.STTS_CD5, 0) + nvl(xa.STTS_CD6, 0)) <> 0)
		                            then '현업테스트대상'
		                            when ((nvl(xa.STTS_CD1, 0) + nvl(xa.STTS_CD2, 0) + nvl(xa.STTS_CD3, 0) + nvl(xa.STTS_CD4, 0) + nvl(xa.STTS_CD5, 0)) = 0) and
		                                  ((nvl(xa.STTS_CD1, 0) + nvl(xa.STTS_CD2, 0) + nvl(xa.STTS_CD3, 0) + nvl(xa.STTS_CD4, 0) + nvl(xa.STTS_CD5, 0) + nvl(xa.STTS_CD6, 0)) <> 0)
		                            then '완료'
		                      else '코딩중'
		                      end
		              from    ( select  PRGM_ID
		                              , sum(decode(CRNT_STTS_CD, '1', 1, 0)) as STTS_CD1
		                              , sum(decode(CRNT_STTS_CD, '2', 1, 0)) as STTS_CD2
		                              , sum(decode(CRNT_STTS_CD, '3', 1, 0)) as STTS_CD3
		                              , sum(decode(CRNT_STTS_CD, '4', 1, 0)) as STTS_CD4
		                              , sum(decode(CRNT_STTS_CD, '5', 1, 0)) as STTS_CD5
		                              , sum(decode(CRNT_STTS_CD, '6', 1, 0)) as STTS_CD6
		                        from    COTBPRMDT
		                        where   nvl(DLTN_YN, 'N') <> 'Y'
		                        group by PRGM_ID
		                      ) xa
		              where   xa.PRGM_ID(+) = ta.PRGM_ID
		            ) as AFI_RTUR_VL
		           , ta.DVLR_CNFR_YN
		           , ta.FUNC_COUNT as USE_CQY_01
		           , ta.FIANL_COUNT as USE_CQY_02
		           , ta.FUNC_COUNT - ta.FIANL_COUNT as USE_CQY_03
		           , ( select  to_char(min(xa.PLAN_STRT_YMD), 'yyyymmdd')
		               from    COTBPRMDT xa
		               where   xa.PRGM_ID = ta.PRGM_ID
		                 and   nvl(xa.DLTN_YN, 'N') <> 'Y'
		                 and   xa.CRNT_STTS_CD in ('1', '2')
		             ) as ACRL_STRT_YMD
		           , ( select  to_char(max(xa.PLAN_FNSH_YMD), 'yyyymmdd')
		               from    COTBPRMDT xa
		               where   xa.PRGM_ID = ta.PRGM_ID
		                 and   nvl(xa.DLTN_YN, 'N') <> 'Y'
		                 and   xa.CRNT_STTS_CD in ('1', '2')
		             ) as ACRL_FNSH_YMD
		           , decode(ta.DVLR_TEST_PLAN_YMD, '29991231', '', ta.DVLR_TEST_PLAN_YMD) as DVLR_TEST_PLAN_YMD
		           , decode(ta.DVLR_TEST_FNSH_YMD, '29991231', '', ta.DVLR_TEST_FNSH_YMD) as DVLR_TEST_FNSH_YMD
		           , ( select substr(tta.TEST_STEP_NM, 2, length(tta.TEST_STEP_NM) -1) as TEST_STEP_NM
		               from   ( select  ta.PRGM_ID
		                              , decode(ta.TEST_STEP_NM_1, null, '', '/' || ta.TEST_STEP_NM_1) ||
		                                decode(ta.TEST_STEP_NM_2, null, '', '/' || ta.TEST_STEP_NM_2) ||
		                                decode(ta.TEST_STEP_NM_3, null, '', '/' || ta.TEST_STEP_NM_3) ||
		                                decode(ta.TEST_STEP_NM_4, null, '', '/' || ta.TEST_STEP_NM_4) ||
		                                decode(ta.TEST_STEP_NM_5, null, '', '/' || ta.TEST_STEP_NM_5) as TEST_STEP_NM
		                        from    ( select  xb.PRGM_ID
		                                        , max(decode(xb.RNUM, 1, xb.TEST_STEP_NM, '')) as TEST_STEP_NM_1
		                                        , max(decode(xb.RNUM, 2, xb.TEST_STEP_NM, '')) as TEST_STEP_NM_2
		                                        , max(decode(xb.RNUM, 3, xb.TEST_STEP_NM, '')) as TEST_STEP_NM_3
		                                        , max(decode(xb.RNUM, 4, xb.TEST_STEP_NM, '')) as TEST_STEP_NM_4
		                                        , max(decode(xb.RNUM, 5, xb.TEST_STEP_NM, '')) as TEST_STEP_NM_5
		                                  from    ( select  xa.PRGM_ID
		                                                  , xa.TEST_STEP_NM
		                                                  , RANK() OVER (PARTITION BY xa.PRGM_ID ORDER BY xa.TEST_STEP_NM) as RNUM
		                                            from    ( select  a.PRGM_ID
		                                                            , substr(b.DETL_CD_NM, 1, 2) as TEST_STEP_NM
		                                                      from    COMTESTMT a
		                                                            , CCCMCDDMT b
		                                                      where   nvl(a.DLTN_YN, 'N') <> 'Y'
		                                                        and   b.COMN_GRP_CD(+) = 'COR_009'
		                                                        and   a.TEST_STEP_CD   = b.COMN_DTLS_CD(+)
		                                                    ) xa
		                                          ) xb
		                                  group by xb.PRGM_ID
		                                ) ta
		                      ) tta
		               where  tta.PRGM_ID = ta.PRGM_ID
		             ) as AFI_SRCH_NM
		           , ( select   count(*)
		               from     COTSTERDT a
		                      , COTSTERMT b
		                      , COMTESTDT c
		                      , COMTESTMT d
		               where    nvl(a.DLTN_YN, 'N') <> 'Y'
		                 and    nvl(b.DLTN_YN, 'N') <> 'Y'
		                 and    a.PRGM_ID       = b.PRGM_ID
		                 and    a.TEST_STEP_CD  = b.TEST_STEP_CD
		                 and    a.TEST_ASGN_ID  = b.TEST_ASGN_ID
		                 and    a.TEST_ID       = b.TEST_ID
		                 and    nvl(c.DLTN_YN, 'N') <> 'Y'
		                 and    a.PRGM_ID       = c.PRGM_ID
		                 and    a.TEST_STEP_CD  = c.TEST_STEP_CD
		                 and    a.TEST_ASGN_ID  = c.TEST_ASGN_ID
		                 and    nvl(d.DLTN_YN, 'N') <> 'Y'
		                 and    a.PRGM_ID       = d.PRGM_ID
		                 and    a.TEST_STEP_CD  = d.TEST_STEP_CD
		                 and    (
		                         (b.TEST_RSLT_CD = 'T2')  and ( (nvl(a.FULT_CRNT_STTS_CD, 'X') = 'A9') or (a.FULT_PRSG_STTS_CD = '7'))
		                        )
		                 and    a.PRGM_ID = ta.PRGM_ID
		             ) as USE_CQY_04
		           , ( select   count(*)
		               from     COTSTERDT a
		                      , COTSTERMT b
		                      , COMTESTDT c
		                      , COMTESTMT d
		               where    nvl(a.DLTN_YN, 'N') <> 'Y'
		                 and    nvl(b.DLTN_YN, 'N') <> 'Y'
		                 and    a.PRGM_ID       = b.PRGM_ID
		                 and    a.TEST_STEP_CD  = b.TEST_STEP_CD
		                 and    a.TEST_ASGN_ID  = b.TEST_ASGN_ID
		                 and    a.TEST_ID       = b.TEST_ID
		                 and    nvl(c.DLTN_YN, 'N') <> 'Y'
		                 and    a.PRGM_ID       = c.PRGM_ID
		                 and    a.TEST_STEP_CD  = c.TEST_STEP_CD
		                 and    a.TEST_ASGN_ID  = c.TEST_ASGN_ID
		                 and    nvl(d.DLTN_YN, 'N') <> 'Y'
		                 and    a.PRGM_ID       = d.PRGM_ID
		                 and    a.TEST_STEP_CD  = d.TEST_STEP_CD
		                 and    ((a.FULT_CRNT_STTS_CD is null) or (a.FULT_PRSG_STTS_CD = '6'))
		                 and    a.PRGM_ID = ta.PRGM_ID
		             ) as USE_CQY_05
		           , ( select   count(*)
		               from     COTSTERDT a
		                      , COTSTERMT b
		                      , COMTESTDT c
		                      , COMTESTMT d
		               where    nvl(a.DLTN_YN, 'N') <> 'Y'
		                 and    nvl(b.DLTN_YN, 'N') <> 'Y'
		                 and    a.PRGM_ID       = b.PRGM_ID
		                 and    a.TEST_STEP_CD  = b.TEST_STEP_CD
		                 and    a.TEST_ASGN_ID  = b.TEST_ASGN_ID
		                 and    a.TEST_ID       = b.TEST_ID
		                 and    nvl(c.DLTN_YN, 'N') <> 'Y'
		                 and    a.PRGM_ID       = c.PRGM_ID
		                 and    a.TEST_STEP_CD  = c.TEST_STEP_CD
		                 and    a.TEST_ASGN_ID  = c.TEST_ASGN_ID
		                 and    nvl(d.DLTN_YN, 'N') <> 'Y'
		                 and    a.PRGM_ID       = d.PRGM_ID
		                 and    a.TEST_STEP_CD  = d.TEST_STEP_CD
		                 and    a.FULT_PRSG_STTS_CD in ('1', '2')
		                 and    a.PRGM_ID = ta.PRGM_ID
		             ) as USE_CQY_06
		           , ( select   count(*)
		               from     COTSTERDT a
		                      , COTSTERMT b
		                      , COMTESTDT c
		                      , COMTESTMT d
		               where    nvl(a.DLTN_YN, 'N') <> 'Y'
		                 and    nvl(b.DLTN_YN, 'N') <> 'Y'
		                 and    a.PRGM_ID       = b.PRGM_ID
		                 and    a.TEST_STEP_CD  = b.TEST_STEP_CD
		                 and    a.TEST_ASGN_ID  = b.TEST_ASGN_ID
		                 and    a.TEST_ID       = b.TEST_ID
		                 and    nvl(c.DLTN_YN, 'N') <> 'Y'
		                 and    a.PRGM_ID       = c.PRGM_ID
		                 and    a.TEST_STEP_CD  = c.TEST_STEP_CD
		                 and    a.TEST_ASGN_ID  = c.TEST_ASGN_ID
		                 and    nvl(d.DLTN_YN, 'N') <> 'Y'
		                 and    a.PRGM_ID       = d.PRGM_ID
		                 and    a.TEST_STEP_CD  = d.TEST_STEP_CD
		                 and    a.FULT_PRSG_STTS_CD in ('3', '4')
		                 and    a.PRGM_ID = ta.PRGM_ID
		             ) as USE_CQY_07
		    from    ( select  c.COMN_DTLS_CD as COMN_DTLS_CD_1
		                    , c.DETL_CD_NM as DETL_CD_NM_1
		                    , c.SCRN_DSPL_SQNC
		                    , b.COMN_DTLS_CD as COMN_DTLS_CD_2
		                    , b.DETL_CD_NM as DETL_CD_NM_2
		                    , b.SCRN_DSPL_SQNC as SCRN_DSPL_SQNC_1
		                    , a.PRGM_ID
		                    , a.PRGM_NM
		                    , a.PRGM_TYP_CD
		                    , d.DETL_CD_NM as DETL_CD_NM_3
		                    , a.PRNC_YN
		                    , ( select  count(*)
		                        from    COTBPRMDT xa
		                        where   xa.PRGM_ID = a.PRGM_ID
		                          and   nvl(xa.DLTN_YN, 'N') <> 'Y'
		                      ) as FUNC_COUNT
		                    , ( select  count(*)
		                        from    COTBPRMDT xa
		                        where   xa.PRGM_ID = a.PRGM_ID
		                          and   nvl(xa.DLTN_YN, 'N') <> 'Y'
		                        --  and   xa.CRNT_STTS_CD in ('4', '5', '6')
		                          and   trunc(nvl(xa.DVLR_TEST_FNSH_YMD, to_date('29991231', 'yyyymmdd'))) <= trunc(sysdate)
		                      ) as FIANL_COUNT
		                    , a.DEVP_ASGN_ID
		                    , e.USER_NM
		                    , a.MNGM_ASGN_ID
		                    , f.USER_NM as USER_NM_1
		                    , a.ACWR_ASGN_ID
		                    , g.USER_NM as USER_NM_2
		                    , a.OFFR_DVSN_CD
		                    , j.DETL_CD_NM as DETL_CD_NM_6
		                    , a.SGSN_OFFR_DVSN_CD
		                    , k.DETL_CD_NM as DETL_CD_NM_7
		                    , a.PRGM_DETL_DSCR_CTN
		                    , a.BSDV_CD
		                    , i.DETL_CD_NM as DETL_CD_NM_5
		                    , a.PROR_BASE_CD
		                    , l.DETL_CD_NM as DETL_CD_NM_8
		                    , a.WG_CD
		                    , h.DETL_CD_NM as DETL_CD_NM_4
		                    , a.PRJT_TISS_CD
		                    , to_char(a.PLAN_STRT_YMD , 'yyyymmdd') as PLAN_STRT_YMD
		                    , to_char(a.PLAN_FNSH_YMD , 'yyyymmdd') as PLAN_FNSH_YMD
		                    , ( select sum(nvl(xa.ANTP_MNSH_VL, 0))
		                        from   COTBPRMDT xa
		                        where  xa.PRGM_ID = a.PRGM_ID
		                          and  nvl(xa.DLTN_YN, 'N') <> 'Y'
		                          and  xa.CRNT_STTS_CD in ('1', '2', '3')
		                      ) as ANTP_MNSH_VL
		                    ,  a.DLTN_YN
		                    , to_char(a.MNGR_REVW_FINS_DD , 'yyyymmdd') as MNGR_REVW_FINS_DD
		                    , a.QLAS_ASGN_ID
		                    , m.USER_NM as USER_NM_3
		                    , a.RTRC_CTN
		                    , a.RTRC_MNGN_CTN
		                    , to_char(a.QLAS_FINS_DD , 'yyyymmdd') as QLAS_FINS_DD
		                    , to_char(a.RTRC_YMD , 'yyyymmdd') as RTRC_YMD
		                    , to_char(a.MNGN_YMD , 'yyyymmdd') as MNGN_YMD
		                    , nvl(a.QLAS_REVW_TRGT_YN, 'N') as QLAS_REVW_TRGT_YN
		                    , a.DVLR_CNFR_YN
		                    , ( select  to_char(max(nvl(xa.DVLR_TEST_PLAN_YMD, to_date('29991231', 'yyyymmdd'))), 'yyyymmdd')
		                        from    COTBPRMDT xa
		                        where   xa.PRGM_ID = a.PRGM_ID
		                          and   nvl(xa.DLTN_YN, 'N') <> 'Y'
		                       ) as DVLR_TEST_PLAN_YMD
		                    , ( select  to_char(max(nvl(xa.DVLR_TEST_FNSH_YMD,to_date('29991231', 'yyyymmdd'))), 'yyyymmdd')
		                        from    COTBPRMDT xa
		                        where   xa.PRGM_ID = a.PRGM_ID
		                          and   nvl(xa.DLTN_YN, 'N') <> 'Y'
		                      ) as DVLR_TEST_FNSH_YMD
		              from    COTBPRMMT a
		                    , CCCMCDDMT b
		                    , CCCMCDDMT c
		                    , CCCMCDDMT d
		                    , CCUSRDPHT e
		                    , CCUSRDPHT f
		                    , CCUSRDPHT g
		                    , CCCMCDDMT h
		                    , CCCMCDDMT i
		                    , CCCMCDDMT j
		                    , CCCMCDDMT k
		                    , CCCMCDDMT l
		                    , CCUSRDPHT m
		              where   b.COMN_GRP_CD(+) = 'COR_025'
		                and   a.PRJT_TISS_CD   = b.COMN_DTLS_CD(+)
		                and   c.COMN_GRP_CD(+) = 'COR_025'
		                and   substr(a.PRJT_TISS_CD, 1, 1) = c.COMN_DTLS_CD(+)
		                and   d.COMN_GRP_CD(+) = 'COR_001'
		                and   a.PRGM_TYP_CD = d.COMN_DTLS_CD(+)
		                and   a.DEVP_ASGN_ID = e.USER_ID(+)
		                and   a.MNGM_ASGN_ID = f.USER_ID(+)
		                and   a.ACWR_ASGN_ID = g.USER_ID(+)
		                and   h.COMN_GRP_CD(+) = 'COR_014'
		                and   a.WG_CD          = h.COMN_DTLS_CD(+)
		                and   i.COMN_GRP_CD(+) in ('CCC_005', 'CCC_006', 'CCC_007')
		                and   a.BSDV_CD        = i.COMN_DTLS_CD(+)
		                and   j.COMN_GRP_CD(+) = 'COR_003'
		                and   a.OFFR_DVSN_CD   = j.COMN_DTLS_CD(+)
		                and   k.COMN_GRP_CD(+) = 'COR_003'
		                and   a.SGSN_OFFR_DVSN_CD   = k.COMN_DTLS_CD(+)
		                and   l.COMN_GRP_CD(+) = 'COR_002'
		                and   a.PROR_BASE_CD   = l.COMN_DTLS_CD(+)
		                and   a.QLAS_ASGN_ID   = m.USER_ID(+)
		                and   ((nvl( #{afiInqrCndtNm} , '*') = '*') or ( #{afiInqrCndtNm}  like '%' || a.PRJT_TISS_CD || '%'))
		                and   ((nvl( #{prgmId} , '*') = '*') or (upper(a.PRGM_ID) like upper( #{prgmId} ) || '%') or
		                       (a.PRGM_NM like '%' ||  #{prgmId}  || '%'))
		                and   ((nvl( #{prgmTypCd} , '*') = '*') or (a.PRGM_TYP_CD =  #{prgmTypCd} ))
		                and   ((nvl( #{prncYn} , '*') = '*') or (a.PRNC_YN =  #{prncYn} ))
		                and   ((nvl( #{wgCd} , '*') = '*') or (a.WG_CD =  #{wgCd} ))
		                and   ((nvl( #{devpAsgnId} , '*') = '*') or (a.DEVP_ASGN_ID =  #{devpAsgnId} ))
		                and   ((nvl( #{mngmAsgnId} , '*') = '*') or (a.MNGM_ASGN_ID =  #{mngmAsgnId} ))
		                and   ((nvl( #{acwrAsgnId} , '*') = '*') or (a.ACWR_ASGN_ID =  #{acwrAsgnId} ))
		                      /* 삭제여부 ALL 0, N   1, Y   2 */
		                and   (( #{dltnYn}  = '0') or (( #{dltnYn}  = '1') and (nvl(a.DLTN_YN, 'N') <> 'Y')) or
		                       (( #{dltnYn}  = '2') and (nvl(a.DLTN_YN, 'N') = 'Y')))
		                and   ((nvl( #{qlasRevwTrgtYn} , '*') = '*') or (( #{qlasRevwTrgtYn}  = 'Y') and (nvl(a.QLAS_REVW_TRGT_YN, 'N') = 'Y')) )
		                      /* 유형 */
		                and   ((nvl( #{chrcCdVl} ,'*') = '*') or ( #{chrcCdVl}  like '%' || a.PRGM_TYP_CD || '%'))
		            ) ta
		    where   (( #{afiInqrDvsnNm}  = '0') or
		             (( #{afiInqrDvsnNm}  = '1') and (ta.FUNC_COUNT = ta.FIANL_COUNT)) or
		             (( #{afiInqrDvsnNm}  = '2') and (ta.FUNC_COUNT <> ta.FIANL_COUNT)))
		      and   ((nvl( #{fromInqrYmd} , '*') = '*') or
		             (ta.PRGM_ID in ( select  xa.PRGM_ID
		                              from    COTBPRMDT xa
		                              where   xa.PRGM_ID = ta.PRGM_ID
		                                and   nvl(xa.DLTN_YN, 'N') <> 'Y'
		                                and   trunc(xa.PLAN_STRT_YMD) >= to_date( #{fromInqrYmd} , 'YYYYMMDD')
		                                and   trunc(xa.PLAN_STRT_YMD) <= to_date( #{toInqrYmd} , 'YYYYMMDD')
		                            )
		             )
		            )
		      and   ((nvl( #{fromInqrYmd1} , '*') = '*') or
		             (ta.PRGM_ID in ( select  xa.PRGM_ID
		                              from    COTBPRMDT xa
		                              where   xa.PRGM_ID = ta.PRGM_ID
		                                and   nvl(xa.DLTN_YN, 'N') <> 'Y'
		                                and   trunc(xa.PLAN_FNSH_YMD) >= to_date( #{fromInqrYmd1} , 'YYYYMMDD')
		                                and   trunc(xa.PLAN_FNSH_YMD) <= to_date( #{toInqrYmd1} , 'YYYYMMDD')
		                            )
		               )
		            )
		      and   ((nvl( #{afiSrchDvsnVl} , '*') = '*') or
		             (ta.PRGM_ID in ( select  xa.PRGM_ID
		                              from    COTBPRMDT xa
		                              where   xa.PRGM_ID = ta.PRGM_ID
		                                and   xa.CRNT_STTS_CD in ('1', '2', '3')
		                                and   nvl(xa.DLTN_YN, 'N') <> 'Y'
		                                and   (((nvl(xa.PLAN_STRT_YMD, sysdate + 1) <= trunc(sysdate)) and (ACRL_FNSH_YMD is null)) or
		                                       ((nvl(xa.DVLR_TEST_PLAN_YMD, sysdate + 1) <= trunc(sysdate)) and (DVLR_TEST_FNSH_YMD is null)))
		                            )
		             )
		            )
		    order by ta.SCRN_DSPL_SQNC, ta.SCRN_DSPL_SQNC_1, ta.USER_NM, ta.PRGM_ID
		]]>
	</select>




	<resultMap id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-listPrjGroupCode-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtPrgDevReqMtDVO">
	
		<result property="comnDtlsCd" column="COMN_DTLS_CD"/>
		<result property="detlCdNm" column="DETL_CD_NM"/>
		<result property="comnItemCd" column="COMN_ITEM_CD"/>
		<result property="comnItemChrcVl" column="COMN_ITEM_CHRC_VL"/>
	</resultMap>
	
    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-listPrjGroupCode (cod_tbprmmt_l03$S01_프로젝트조직코드 조회) 
        Description :                                           cod_tbprmmt_l03$S01_프로젝트조직코드 조회
                                            
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtPrgDevReqMtDVO
		resultMap : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-listPrjGroupCode-result
    -->
	<select id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-listPrjGroupCode"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtPrgDevReqMtDVO"  resultMap="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-listPrjGroupCode-result" useCache="true" flushCache="false">
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-listPrjGroupCode */
		    select  /*+ cod_tbprmmt_l03$S01_프로젝트조직코드 조회 */ 
		            a.COMN_DTLS_CD
		          , a.DETL_CD_NM
		          , b.COMN_ITEM_CD
		          , b.COMN_ITEM_CHRC_VL
		    from    CCCMCDDMT a
		          , CCCMCDIDT b
		    where   a.COMN_GRP_CD  =  #{comnGrpCd} 
		      and   a.COMN_GRP_CD  = b.COMN_GRP_CD
		      and   a.COMN_DTLS_CD = b.COMN_DTLS_CD
		      and   b.COMN_ITEM_CD =  #{comnItemCd} 
		    order by a.SCRN_DSPL_SQNC
	</select>




	<resultMap id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-selectOneSkillDefineState-result" type="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtPrgDevReqMtDVO">
	
		<result property="dvlrCnfrYn" column="DVLR_CNFR_YN"/>
		<result property="afiTrgtCot" column="AFI_TRGT_COT"/>
		<result property="afiTrgtCot1" column="AFI_TRGT_COT_1"/>
		<result property="afiTrgtCot2" column="AFI_TRGT_COT_2"/>
	</resultMap>
	
    <!--
        SQL Name : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-selectOneSkillDefineState (cod_tbprmmt_s04$S01_기능정의 상태정보 조회) 
        Description :                                           cod_tbprmmt_s04$S01_기능정의 상태정보 조회
                                            
		parameterType : com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtPrgDevReqMtDVO
		resultMap : com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-selectOneSkillDefineState-result
    -->
	<select id="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-selectOneSkillDefineState"  parameterType="com.sds.healthcare.ehr.com.cc.cco.vo.CcoTbprmmtPrgDevReqMtDVO"  resultMap="com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-selectOneSkillDefineState-result" useCache="true" flushCache="false">
		/*SQL_ID: com-sds-healthcare-ehr-com-cc-cco-dao-CcoTbprmmtPrgDevReqMtDAO-selectOneSkillDefineState */
		<![CDATA[
		    select  /*+ cod_tbprmmt_s04$S01_기능정의 상태정보 조회 */ 
		            nvl(a.DVLR_CNFR_YN, 'N') as DVLR_CNFR_YN
		          , nvl(( select  count(*)
		                  from    COTBPRMDT
		                  where   nvl(DLTN_YN, 'N') <> 'Y'
		                    and   nvl(CRNT_STTS_CD, '1') < '4'
		                    and   PRGM_ID =  #{prgmId} 
		                ), 0 ) as AFI_TRGT_COT
		          , nvl(( select  count(*)
		                  from    COSCFNAMT
		                  where   PRGM_ID =  #{prgmId} 
		                    and   ATCH_DVSN_CD = 'A3'
		                 ), 0) as AFI_TRGT_COT_1
		          , nvl(( select  count(*)
		                  from    COTBPRMDT
		                  where   nvl(DLTN_YN, 'N') <> 'Y'
		                    and   PRGM_ID =  #{prgmId} 
		                ), 0 ) as AFI_TRGT_COT_2
		    from    COTBPRMMT a
		    where   a.PRGM_ID =  #{prgmId} 
		      and   nvl(a.DLTN_YN, 'N') <> 'Y'
		]]>
	</select>



</mapper>